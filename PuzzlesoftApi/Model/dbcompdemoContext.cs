using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Security.Claims;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using System.Linq;

#nullable disable

namespace PuzzlesoftApi.Model
{
    public partial class dbcompdemoContext : DbContext
    {
        public dbcompdemoContext()
        {
        }

        public dbcompdemoContext(DbContextOptions<dbcompdemoContext> options)
            : base(options)
        {
        }

        public Dictionary<string, List<Dictionary<string, object>>> ExecuteProc(string proc,
            object args, ClaimsPrincipal user=null)
        {
            using (var command = this.Database.GetDbConnection().CreateCommand())
            {
                command.CommandText = proc;
                command.CommandType = CommandType.StoredProcedure;
                command.AddParameters(args, user);
                this.Database.OpenConnection();
             
                using (var adp = DbProviderFactories.GetFactory(command.Connection).CreateDataAdapter())
                {
                    adp.SelectCommand = command;
                    DataSet ds = new DataSet();
                    adp.Fill(ds);
                    if (ds.Tables.Count > 0 &&
                        ds.Tables[0].Rows.Count > 0 &&
                        ds.Tables[0].Columns.Contains("errorCode") &&
                        ds.Tables[0].Columns.Contains("errorMessage"))
                        Helper.ReturnError(ds.Tables[0].Rows[0]["errorCode"].ToString(), ds.Tables[0].Rows[0]["errorMessage"].ToString());
                    return ds.ToDictionary();
                }
            }
        }
        public object ExecuteProcAndGetValue(string proc,
            object args, ClaimsPrincipal user=null)
        {
            var obj = this.ExecuteProc(proc, args, user);
            var firstRow = obj["Table"][0];
            return firstRow.Values.First();
        }

        public virtual DbSet<AgafItemsAction> AgafItemsActions { get; set; }
        public virtual DbSet<Appointment> Appointments { get; set; }
        public virtual DbSet<BiAlert> BiAlerts { get; set; }
        public virtual DbSet<BiEmergencyBed> BiEmergencyBeds { get; set; }
        public virtual DbSet<BiEmergencyPatient> BiEmergencyPatients { get; set; }
        public virtual DbSet<BiSurgery> BiSurgeries { get; set; }
        public virtual DbSet<BiTheme> BiThemes { get; set; }
        public virtual DbSet<BiVagaf> BiVagafs { get; set; }
        public virtual DbSet<BiVal> BiVals { get; set; }
        public virtual DbSet<BiVclientDetail> BiVclientDetails { get; set; }
        public virtual DbSet<BiVdefTnout> BiVdefTnouts { get; set; }
        public virtual DbSet<BiVleaveKind> BiVleaveKinds { get; set; }
        public virtual DbSet<BiVroom> BiVrooms { get; set; }
        public virtual DbSet<BiVsponser> BiVsponsers { get; set; }
        public virtual DbSet<BiVtifkudStatus> BiVtifkudStatuses { get; set; }
        public virtual DbSet<Bitan> Bitans { get; set; }
        public virtual DbSet<BusMedah> BusMedahs { get; set; }
        public virtual DbSet<CheckAppointTime1> CheckAppointTime1s { get; set; }
        public virtual DbSet<ClientDetail> ClientDetails { get; set; }
        public virtual DbSet<ClientDetailShort> ClientDetailShorts { get; set; }
        public virtual DbSet<ClientDetails1> ClientDetails1s { get; set; }
        public virtual DbSet<ClientDetails2> ClientDetails2s { get; set; }
        public virtual DbSet<ClientDetailsDoctor> ClientDetailsDoctors { get; set; }
        public virtual DbSet<ClientDetailsDoctor2> ClientDetailsDoctor2s { get; set; }
        public virtual DbSet<ClientDetailsDoctor3> ClientDetailsDoctor3s { get; set; }
        public virtual DbSet<ClientDetailsDoctorR> ClientDetailsDoctorRs { get; set; }
        public virtual DbSet<ClientDetailsDoctorTmp> ClientDetailsDoctorTmps { get; set; }
        public virtual DbSet<ClientDetailsMainTbl> ClientDetailsMainTbls { get; set; }
        public virtual DbSet<ClientDetailsMedical> ClientDetailsMedicals { get; set; }
        public virtual DbSet<ClientDetailsNew> ClientDetailsNews { get; set; }
        public virtual DbSet<ClientDetailsNurse> ClientDetailsNurses { get; set; }
        public virtual DbSet<ClientDetailsTelemarketing> ClientDetailsTelemarketings { get; set; }
        public virtual DbSet<ClientDetailsWithOutArchive> ClientDetailsWithOutArchives { get; set; }
        public virtual DbSet<ClientDoc> ClientDocs { get; set; }
        public virtual DbSet<Clientdetails1Comp1> Clientdetails1Comp1s { get; set; }
        public virtual DbSet<ClientdetailsComp1> ClientdetailsComp1s { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<ContactMan> ContactMen { get; set; }
        public virtual DbSet<ContactMen1> ContactMen1s { get; set; }
        public virtual DbSet<Court> Courts { get; set; }
        public virtual DbSet<Csvtest> Csvtests { get; set; }
        public virtual DbSet<Csvtest1> Csvtest1s { get; set; }
        public virtual DbSet<Csvtest2> Csvtest2s { get; set; }
        public virtual DbSet<Cust1> Cust1s { get; set; }
        public virtual DbSet<DashCapacity> DashCapacities { get; set; }
        public virtual DbSet<DayarimFromxl> DayarimFromxls { get; set; }
        public virtual DbSet<DietNutritionClient> DietNutritionClients { get; set; }
        public virtual DbSet<Discount> Discounts { get; set; }
        public virtual DbSet<DocDesign> DocDesigns { get; set; }
        public virtual DbSet<DocType> DocTypes { get; set; }
        public virtual DbSet<DocType1> DocType1s { get; set; }
        public virtual DbSet<Email> Emails { get; set; }
        public virtual DbSet<Email1> Email1s { get; set; }
        public virtual DbSet<EmailAttach> EmailAttaches { get; set; }
        public virtual DbSet<Emp> Emps { get; set; }
        public virtual DbSet<ExchangeRate> ExchangeRates { get; set; }
        public virtual DbSet<FamilyHistoryClient> FamilyHistoryClients { get; set; }
        public virtual DbSet<Fax> Faxes { get; set; }
        public virtual DbSet<FeedBreakClient> FeedBreakClients { get; set; }
        public virtual DbSet<Feeding> Feedings { get; set; }
        public virtual DbSet<Folder> Folders { get; set; }
        public virtual DbSet<FollowInfection> FollowInfections { get; set; }
        public virtual DbSet<FormBdikaYezumaDoctor> FormBdikaYezumaDoctors { get; set; }
        public virtual DbSet<FormBdikaYezumaSiudi> FormBdikaYezumaSiudis { get; set; }
        public virtual DbSet<FormChargeReportDetail> FormChargeReportDetails { get; set; }
        public virtual DbSet<FormHospitalize> FormHospitalizes { get; set; }
        public virtual DbSet<FormKabalaTifkud> FormKabalaTifkuds { get; set; }
        public virtual DbSet<FormKabalatHole> FormKabalatHoles { get; set; }
        public virtual DbSet<FormMaakavPhiziotrapium> FormMaakavPhiziotrapia { get; set; }
        public virtual DbSet<FormMaakavRefuee> FormMaakavRefuees { get; set; }
        public virtual DbSet<FormMaakavSiudi> FormMaakavSiudis { get; set; }
        public virtual DbSet<FormMaakavSocial> FormMaakavSocials { get; set; }
        public virtual DbSet<FormMarketing> FormMarketings { get; set; }
        public virtual DbSet<FormMedahRefuee> FormMedahRefuees { get; set; }
        public virtual DbSet<FormPkudot> FormPkudots { get; set; }
        public virtual DbSet<FormPkudotCardexView> FormPkudotCardexViews { get; set; }
        public virtual DbSet<FormPkudotComp1> FormPkudotComp1s { get; set; }
        public virtual DbSet<FormTipulPlan> FormTipulPlans { get; set; }
        public virtual DbSet<GynecologicalHclient> GynecologicalHclients { get; set; }
        public virtual DbSet<IConnectRequest> IConnectRequests { get; set; }
        public virtual DbSet<IConnectRequestsEng> IConnectRequestsEngs { get; set; }
        public virtual DbSet<LogFile> LogFiles { get; set; }
        public virtual DbSet<MabarAv> MabarAvs { get; set; }
        public virtual DbSet<Madadim> Madadims { get; set; }
        public virtual DbSet<MbrPrice> MbrPrices { get; set; }
        public virtual DbSet<MedGroupAtc> MedGroupAtcs { get; set; }
        public virtual DbSet<Medicine> Medicines { get; set; }
        public virtual DbSet<MedicineGeneric> MedicineGenerics { get; set; }
        public virtual DbSet<MedicinesComp1> MedicinesComp1s { get; set; }
        public virtual DbSet<MedicinesTemp> MedicinesTemps { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderRoom> OrderRooms { get; set; }
        public virtual DbSet<OrdersListPrice> OrdersListPrices { get; set; }
        public virtual DbSet<OsTest> OsTests { get; set; }
        public virtual DbSet<PasteError> PasteErrors { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<Prj> Prjs { get; set; }
        public virtual DbSet<ProivRequest> ProivRequests { get; set; }
        public virtual DbSet<QAppointcheck> QAppointchecks { get; set; }
        public virtual DbSet<QBedStatus> QBedStatuses { get; set; }
        public virtual DbSet<QBusMedah> QBusMedahs { get; set; }
        public virtual DbSet<QCharge> QCharges { get; set; }
        public virtual DbSet<QChargeShehium> QChargeShehia { get; set; }
        public virtual DbSet<QChargesSum> QChargesSums { get; set; }
        public virtual DbSet<QClentTransferal> QClentTransferals { get; set; }
        public virtual DbSet<QClientAccident> QClientAccidents { get; set; }
        public virtual DbSet<QClientAvhanotToWebAdvice> QClientAvhanotToWebAdvices { get; set; }
        public virtual DbSet<QClientBlister> QClientBlisters { get; set; }
        public virtual DbSet<QClientBlistersComp1> QClientBlistersComp1s { get; set; }
        public virtual DbSet<QClientBlistersWithPlace> QClientBlistersWithPlaces { get; set; }
        public virtual DbSet<QClientCurse> QClientCurses { get; set; }
        public virtual DbSet<QClientDiet> QClientDiets { get; set; }
        public virtual DbSet<QClientDoc> QClientDocs { get; set; }
        public virtual DbSet<QClientFoodFollow> QClientFoodFollows { get; set; }
        public virtual DbSet<QClientFormDetailA10> QClientFormDetailA10s { get; set; }
        public virtual DbSet<QClientFormDetailA3> QClientFormDetailA3s { get; set; }
        public virtual DbSet<QClientGeneralKnowledge> QClientGeneralKnowledges { get; set; }
        public virtual DbSet<QClientHobby> QClientHobbies { get; set; }
        public virtual DbSet<QClientMedSign> QClientMedSigns { get; set; }
        public virtual DbSet<QClientMedicine> QClientMedicines { get; set; }
        public virtual DbSet<QClientNursingPlan> QClientNursingPlans { get; set; }
        public virtual DbSet<QClientPain> QClientPains { get; set; }
        public virtual DbSet<QClientTelemarketing> QClientTelemarketings { get; set; }
        public virtual DbSet<QClientTelemarketing2> QClientTelemarketing2s { get; set; }
        public virtual DbSet<QClientTifkud> QClientTifkuds { get; set; }
        public virtual DbSet<QClientTipulim> QClientTipulims { get; set; }
        public virtual DbSet<QClientTnuot> QClientTnuots { get; set; }
        public virtual DbSet<QClientTnuot2> QClientTnuot2s { get; set; }
        public virtual DbSet<QClientTnuotNew> QClientTnuotNews { get; set; }
        public virtual DbSet<QClientTransferal> QClientTransferals { get; set; }
        public virtual DbSet<QClientYediah> QClientYediahs { get; set; }
        public virtual DbSet<QClientYeshivotTsevet> QClientYeshivotTsevets { get; set; }
        public virtual DbSet<QClientpkudotToWebAdvice> QClientpkudotToWebAdvices { get; set; }
        public virtual DbSet<QConstCharge> QConstCharges { get; set; }
        public virtual DbSet<QConstTipulit> QConstTipulits { get; set; }
        public virtual DbSet<QContact> QContacts { get; set; }
        public virtual DbSet<QContractGuest> QContractGuests { get; set; }
        public virtual DbSet<QCurrentRoomPricelist> QCurrentRoomPricelists { get; set; }
        public virtual DbSet<QDefTifkud> QDefTifkuds { get; set; }
        public virtual DbSet<QDefYediah> QDefYediahs { get; set; }
        public virtual DbSet<QDefmahlaka> QDefmahlakas { get; set; }
        public virtual DbSet<QDietDetails1> QDietDetails1s { get; set; }
        public virtual DbSet<QDrugLastPrice> QDrugLastPrices { get; set; }
        public virtual DbSet<QDrugsGaveDeleted> QDrugsGaveDeleteds { get; set; }
        public virtual DbSet<QEnterExitTime> QEnterExitTimes { get; set; }
        public virtual DbSet<QEventList> QEventLists { get; set; }
        public virtual DbSet<QExpertsAdvisesToWeb> QExpertsAdvisesToWebs { get; set; }
        public virtual DbSet<QExpertsAdvisesToWebRetDatum> QExpertsAdvisesToWebRetData { get; set; }
        public virtual DbSet<QFolder> QFolders { get; set; }
        public virtual DbSet<QFormChargeReport> QFormChargeReports { get; set; }
        public virtual DbSet<QFormMaakavSiudi> QFormMaakavSiudis { get; set; }
        public virtual DbSet<QFormPkudot> QFormPkudots { get; set; }
        public virtual DbSet<QGetDate> QGetDates { get; set; }
        public virtual DbSet<QHeshDocItem> QHeshDocItems { get; set; }
        public virtual DbSet<QHeshDocument> QHeshDocuments { get; set; }
        public virtual DbSet<QHeshGroup> QHeshGroups { get; set; }
        public virtual DbSet<QHeshParitMiun> QHeshParitMiuns { get; set; }
        public virtual DbSet<QHeshTkind> QHeshTkinds { get; set; }
        public virtual DbSet<QKind> QKinds { get; set; }
        public virtual DbSet<QKodMiun> QKodMiuns { get; set; }
        public virtual DbSet<QListPriceRule> QListPriceRules { get; set; }
        public virtual DbSet<QMahlakaMabar> QMahlakaMabars { get; set; }
        public virtual DbSet<QMahlakaToRep> QMahlakaToReps { get; set; }
        public virtual DbSet<QMaintenance> QMaintenances { get; set; }
        public virtual DbSet<QMange17New> QMange17News { get; set; }
        public virtual DbSet<QMarketingSugest> QMarketingSugests { get; set; }
        public virtual DbSet<QMedadim> QMedadims { get; set; }
        public virtual DbSet<QMedicalGroupsMainId> QMedicalGroupsMainIds { get; set; }
        public virtual DbSet<QMelayOninvite> QMelayOninvites { get; set; }
        public virtual DbSet<QMelayRest> QMelayRests { get; set; }
        public virtual DbSet<QMelayValue> QMelayValues { get; set; }
        public virtual DbSet<QPhizioMonthActivity> QPhizioMonthActivities { get; set; }
        public virtual DbSet<QPritim> QPritims { get; set; }
        public virtual DbSet<QRepClientDetail> QRepClientDetails { get; set; }
        public virtual DbSet<QRepContactMan> QRepContactMen { get; set; }
        public virtual DbSet<QRepContactMen1> QRepContactMen1s { get; set; }
        public virtual DbSet<QRepGuardian> QRepGuardians { get; set; }
        public virtual DbSet<QRepHobby> QRepHobbies { get; set; }
        public virtual DbSet<QRepMaham> QRepMahams { get; set; }
        public virtual DbSet<QRepMedadim> QRepMedadims { get; set; }
        public virtual DbSet<QRepRevah> QRepRevahs { get; set; }
        public virtual DbSet<QRepTipulPlan> QRepTipulPlans { get; set; }
        public virtual DbSet<QRoomAgafAsMainId> QRoomAgafAsMainIds { get; set; }
        public virtual DbSet<QRoomDetail> QRoomDetails { get; set; }
        public virtual DbSet<QRoomsWithLocation> QRoomsWithLocations { get; set; }
        public virtual DbSet<QServiceContract> QServiceContracts { get; set; }
        public virtual DbSet<QSidurWorkerRoom> QSidurWorkerRooms { get; set; }
        public virtual DbSet<QTasks2> QTasks2s { get; set; }
        public virtual DbSet<QTelemarketing> QTelemarketings { get; set; }
        public virtual DbSet<QTelemarketingDoc> QTelemarketingDocs { get; set; }
        public virtual DbSet<QTestTnuot> QTestTnuots { get; set; }
        public virtual DbSet<QTestTnuotWithIshpuz> QTestTnuotWithIshpuzs { get; set; }
        public virtual DbSet<QTifkudSponser> QTifkudSponsers { get; set; }
        public virtual DbSet<QTnuot> QTnuots { get; set; }
        public virtual DbSet<QTnuot2> QTnuot2s { get; set; }
        public virtual DbSet<QTnuotAgafReport> QTnuotAgafReports { get; set; }
        public virtual DbSet<QTnuotBedStatus> QTnuotBedStatuses { get; set; }
        public virtual DbSet<QTnuotBedStatusNew> QTnuotBedStatusNews { get; set; }
        public virtual DbSet<QTnuotBedStatusOld> QTnuotBedStatusOlds { get; set; }
        public virtual DbSet<QTnuotBedStatusWithIshpuz> QTnuotBedStatusWithIshpuzs { get; set; }
        public virtual DbSet<QVisitList> QVisitLists { get; set; }
        public virtual DbSet<QWorkerDetails1> QWorkerDetails1s { get; set; }
        public virtual DbSet<QWorkersAsMainId> QWorkersAsMainIds { get; set; }
        public virtual DbSet<QWorkersDaysTime> QWorkersDaysTimes { get; set; }
        public virtual DbSet<QYeshivaParticipate> QYeshivaParticipates { get; set; }
        public virtual DbSet<QclientGuardian> QclientGuardians { get; set; }
        public virtual DbSet<QtblBm> QtblBms { get; set; }
        public virtual DbSet<QtblDefBmmiun> QtblDefBmmiuns { get; set; }
        public virtual DbSet<QvAdminDetail> QvAdminDetails { get; set; }
        public virtual DbSet<QvMeidaTzunati> QvMeidaTzunatis { get; set; }
        public virtual DbSet<Regishot1> Regishot1s { get; set; }
        public virtual DbSet<Regishot2> Regishot2s { get; set; }
        public virtual DbSet<ReportMabar105b1> ReportMabar105b1s { get; set; }
        public virtual DbSet<ReportMabar105b2> ReportMabar105b2s { get; set; }
        public virtual DbSet<ReportMabar494> ReportMabar494s { get; set; }
        public virtual DbSet<ReutFormPkudot> ReutFormPkudots { get; set; }
        public virtual DbSet<ReutMedicine> ReutMedicines { get; set; }
        public virtual DbSet<Sale> Sales { get; set; }
        public virtual DbSet<SevaBria1> SevaBria1s { get; set; }
        public virtual DbSet<SolutionFeed> SolutionFeeds { get; set; }
        public virtual DbSet<SolutionFeedClient> SolutionFeedClients { get; set; }
        public virtual DbSet<Sp1> Sp1s { get; set; }
        public virtual DbSet<SpecialTariff> SpecialTariffs { get; set; }
        public virtual DbSet<System> Systems { get; set; }
        public virtual DbSet<Tariff> Tariffs { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<Task2> Task2s { get; set; }
        public virtual DbSet<Tasks1> Tasks1s { get; set; }
        public virtual DbSet<Tbl1> Tbl1s { get; set; }
        public virtual DbSet<TblA3error> TblA3errors { get; set; }
        public virtual DbSet<TblAcLog> TblAcLogs { get; set; }
        public virtual DbSet<TblActivityParticipant> TblActivityParticipants { get; set; }
        public virtual DbSet<TblAdmin> TblAdmins { get; set; }
        public virtual DbSet<TblAgaf> TblAgafs { get; set; }
        public virtual DbSet<TblAgafItem> TblAgafItems { get; set; }
        public virtual DbSet<TblAgafItemsAction> TblAgafItemsActions { get; set; }
        public virtual DbSet<TblAgafPaint> TblAgafPaints { get; set; }
        public virtual DbSet<TblAllMediclHospitalSum> TblAllMediclHospitalSums { get; set; }
        public virtual DbSet<TblAmbulance> TblAmbulances { get; set; }
        public virtual DbSet<TblAmirTest> TblAmirTests { get; set; }
        public virtual DbSet<TblAppSetting> TblAppSettings { get; set; }
        public virtual DbSet<TblArchiveForm> TblArchiveForms { get; set; }
        public virtual DbSet<TblAvhanaMedicineComment> TblAvhanaMedicineComments { get; set; }
        public virtual DbSet<TblAvhanot> TblAvhanots { get; set; }
        public virtual DbSet<TblAvhanotTran> TblAvhanotTrans { get; set; }
        public virtual DbSet<TblBakaratTrufot> TblBakaratTrufots { get; set; }
        public virtual DbSet<TblBdikaDetail> TblBdikaDetails { get; set; }
        public virtual DbSet<TblBdikot> TblBdikots { get; set; }
        public virtual DbSet<TblBiocomCharge> TblBiocomCharges { get; set; }
        public virtual DbSet<TblBiocomMain> TblBiocomMains { get; set; }
        public virtual DbSet<TblBlisterFollowup> TblBlisterFollowups { get; set; }
        public virtual DbSet<TblBm> TblBms { get; set; }
        public virtual DbSet<TblBmLog> TblBmLogs { get; set; }
        public virtual DbSet<TblBmLogDetail> TblBmLogDetails { get; set; }
        public virtual DbSet<TblBmPass> TblBmPasses { get; set; }
        public virtual DbSet<TblBmTemp> TblBmTemps { get; set; }
        public virtual DbSet<TblBmdefMinMax> TblBmdefMinMaxes { get; set; }
        public virtual DbSet<TblBmdetail> TblBmdetails { get; set; }
        public virtual DbSet<TblBminvite> TblBminvites { get; set; }
        public virtual DbSet<TblBmtemplete> TblBmtempletes { get; set; }
        public virtual DbSet<TblCharge> TblCharges { get; set; }
        public virtual DbSet<TblChargeKodByTofes17> TblChargeKodByTofes17s { get; set; }
        public virtual DbSet<TblChargeShehium> TblChargeShehia { get; set; }
        public virtual DbSet<TblChargesReport> TblChargesReports { get; set; }
        public virtual DbSet<TblClientAccident> TblClientAccidents { get; set; }
        public virtual DbSet<TblClientAccount> TblClientAccounts { get; set; }
        public virtual DbSet<TblClientAvhanot> TblClientAvhanots { get; set; }
        public virtual DbSet<TblClientBdikaDetail> TblClientBdikaDetails { get; set; }
        public virtual DbSet<TblClientBlister> TblClientBlisters { get; set; }
        public virtual DbSet<TblClientBm> TblClientBms { get; set; }
        public virtual DbSet<TblClientBm2> TblClientBm2s { get; set; }
        public virtual DbSet<TblClientBmWebSetting> TblClientBmWebSettings { get; set; }
        public virtual DbSet<TblClientBmtransDetail> TblClientBmtransDetails { get; set; }
        public virtual DbSet<TblClientCall> TblClientCalls { get; set; }
        public virtual DbSet<TblClientClothe> TblClientClothes { get; set; }
        public virtual DbSet<TblClientContract> TblClientContracts { get; set; }
        public virtual DbSet<TblClientCurrentStatus> TblClientCurrentStatuses { get; set; }
        public virtual DbSet<TblClientCurse> TblClientCurses { get; set; }
        public virtual DbSet<TblClientDietAfterIshpuz> TblClientDietAfterIshpuzs { get; set; }
        public virtual DbSet<TblClientDiscount> TblClientDiscounts { get; set; }
        public virtual DbSet<TblClientEnterPay> TblClientEnterPays { get; set; }
        public virtual DbSet<TblClientExit> TblClientExits { get; set; }
        public virtual DbSet<TblClientFeedTubeWeb> TblClientFeedTubeWebs { get; set; }
        public virtual DbSet<TblClientFollowNext> TblClientFollowNexts { get; set; }
        public virtual DbSet<TblClientFollowUpMedical> TblClientFollowUpMedicals { get; set; }
        public virtual DbSet<TblClientFollowup> TblClientFollowups { get; set; }
        public virtual DbSet<TblClientFollowupKey> TblClientFollowupKeys { get; set; }
        public virtual DbSet<TblClientFood> TblClientFoods { get; set; }
        public virtual DbSet<TblClientFoodAll> TblClientFoodAlls { get; set; }
        public virtual DbSet<TblClientFoodMenu> TblClientFoodMenus { get; set; }
        public virtual DbSet<TblClientFormDetailA10> TblClientFormDetailA10s { get; set; }
        public virtual DbSet<TblClientFormDetailA10newtest> TblClientFormDetailA10newtests { get; set; }
        public virtual DbSet<TblClientFormDetailA3> TblClientFormDetailA3s { get; set; }
        public virtual DbSet<TblClientFormDetailA3deleted> TblClientFormDetailA3deleteds { get; set; }
        public virtual DbSet<TblClientGeneralKnowledge> TblClientGeneralKnowledges { get; set; }
        public virtual DbSet<TblClientGroupAction> TblClientGroupActions { get; set; }
        public virtual DbSet<TblClientGuardian> TblClientGuardians { get; set; }
        public virtual DbSet<TblClientHabitude> TblClientHabitudes { get; set; }
        public virtual DbSet<TblClientHervonot> TblClientHervonots { get; set; }
        public virtual DbSet<TblClientHeshName> TblClientHeshNames { get; set; }
        public virtual DbSet<TblClientHilutim> TblClientHilutims { get; set; }
        public virtual DbSet<TblClientHilutimDetail> TblClientHilutimDetails { get; set; }
        public virtual DbSet<TblClientHobby> TblClientHobbies { get; set; }
        public virtual DbSet<TblClientHospStatus> TblClientHospStatuses { get; set; }
        public virtual DbSet<TblClientHtmlFormsWeb> TblClientHtmlFormsWebs { get; set; }
        public virtual DbSet<TblClientHtmlLockFormsWeb> TblClientHtmlLockFormsWebs { get; set; }
        public virtual DbSet<TblClientInfection> TblClientInfections { get; set; }
        public virtual DbSet<TblClientInfusion> TblClientInfusions { get; set; }
        public virtual DbSet<TblClientIshpuzim> TblClientIshpuzims { get; set; }
        public virtual DbSet<TblClientIshpuzimKabala> TblClientIshpuzimKabalas { get; set; }
        public virtual DbSet<TblClientLockedForm> TblClientLockedForms { get; set; }
        public virtual DbSet<TblClientLockedFormsTemp> TblClientLockedFormsTemps { get; set; }
        public virtual DbSet<TblClientManoy> TblClientManoys { get; set; }
        public virtual DbSet<TblClientMarketingSugest> TblClientMarketingSugests { get; set; }
        public virtual DbSet<TblClientMedKey> TblClientMedKeys { get; set; }
        public virtual DbSet<TblClientMedSign> TblClientMedSigns { get; set; }
        public virtual DbSet<TblClientMedadim> TblClientMedadims { get; set; }
        public virtual DbSet<TblClientMedicalImg> TblClientMedicalImgs { get; set; }
        public virtual DbSet<TblClientMedicine> TblClientMedicines { get; set; }
        public virtual DbSet<TblClientNehalim> TblClientNehalims { get; set; }
        public virtual DbSet<TblClientNursingPlan> TblClientNursingPlans { get; set; }
        public virtual DbSet<TblClientOldStatus> TblClientOldStatuses { get; set; }
        public virtual DbSet<TblClientPain> TblClientPains { get; set; }
        public virtual DbSet<TblClientRegishut> TblClientRegishuts { get; set; }
        public virtual DbSet<TblClientRegishutBack> TblClientRegishutBacks { get; set; }
        public virtual DbSet<TblClientRespirationMadad> TblClientRespirationMadads { get; set; }
        public virtual DbSet<TblClientSetting> TblClientSettings { get; set; }
        public virtual DbSet<TblClientSizeC> TblClientSizeCs { get; set; }
        public virtual DbSet<TblClientTelemarketing> TblClientTelemarketings { get; set; }
        public virtual DbSet<TblClientTestDetail> TblClientTestDetails { get; set; }
        public virtual DbSet<TblClientTestDinko> TblClientTestDinkos { get; set; }
        public virtual DbSet<TblClientTifkud> TblClientTifkuds { get; set; }
        public virtual DbSet<TblClientTipulim> TblClientTipulims { get; set; }
        public virtual DbSet<TblClientTnuot> TblClientTnuots { get; set; }
        public virtual DbSet<TblClientTnuotArchive> TblClientTnuotArchives { get; set; }
        public virtual DbSet<TblClientTorim> TblClientTorims { get; set; }
        public virtual DbSet<TblClientTraining> TblClientTrainings { get; set; }
        public virtual DbSet<TblClientTransferal> TblClientTransferals { get; set; }
        public virtual DbSet<TblClientTyingActual> TblClientTyingActuals { get; set; }
        public virtual DbSet<TblClientTyingControlCommittee> TblClientTyingControlCommittees { get; set; }
        public virtual DbSet<TblClientVaccination> TblClientVaccinations { get; set; }
        public virtual DbSet<TblClientYediah> TblClientYediahs { get; set; }
        public virtual DbSet<TblClientYeshivotTsevet> TblClientYeshivotTsevets { get; set; }
        public virtual DbSet<TblClientYeshivotTsevetTemp> TblClientYeshivotTsevetTemps { get; set; }
        public virtual DbSet<TblClientsBdikot> TblClientsBdikots { get; set; }
        public virtual DbSet<TblClientsContract> TblClientsContracts { get; set; }
        public virtual DbSet<TblClientsForm> TblClientsForms { get; set; }
        public virtual DbSet<TblClientsGroup> TblClientsGroups { get; set; }
        public virtual DbSet<TblClientsSeegnalRespone> TblClientsSeegnalRespones { get; set; }
        public virtual DbSet<TblClientsTest> TblClientsTests { get; set; }
        public virtual DbSet<TblClientsVitalSign> TblClientsVitalSigns { get; set; }
        public virtual DbSet<TblClinicalCondition> TblClinicalConditions { get; set; }
        public virtual DbSet<TblClockAlert> TblClockAlerts { get; set; }
        public virtual DbSet<TblCompany> TblCompanies { get; set; }
        public virtual DbSet<TblCompany1> TblCompanies1 { get; set; }
        public virtual DbSet<TblCompanyDetail> TblCompanyDetails { get; set; }
        public virtual DbSet<TblConnection> TblConnections { get; set; }
        public virtual DbSet<TblConstBlisterColor> TblConstBlisterColors { get; set; }
        public virtual DbSet<TblConstBlisterHafrashaKind> TblConstBlisterHafrashaKinds { get; set; }
        public virtual DbSet<TblConstBlisterHafrashaQuantity> TblConstBlisterHafrashaQuantities { get; set; }
        public virtual DbSet<TblConstBlisterKind> TblConstBlisterKinds { get; set; }
        public virtual DbSet<TblConstBlisterLevel> TblConstBlisterLevels { get; set; }
        public virtual DbSet<TblConstBlisterPlace> TblConstBlisterPlaces { get; set; }
        public virtual DbSet<TblConstCharge> TblConstCharges { get; set; }
        public virtual DbSet<TblConstChargeRange> TblConstChargeRanges { get; set; }
        public virtual DbSet<TblConstDrugGenericGroup> TblConstDrugGenericGroups { get; set; }
        public virtual DbSet<TblConstDrugInteraction> TblConstDrugInteractions { get; set; }
        public virtual DbSet<TblConstDrugTakeKind> TblConstDrugTakeKinds { get; set; }
        public virtual DbSet<TblConstEatSum> TblConstEatSums { get; set; }
        public virtual DbSet<TblConstHtmlScript> TblConstHtmlScripts { get; set; }
        public virtual DbSet<TblConstHtmlScriptsNew> TblConstHtmlScriptsNews { get; set; }
        public virtual DbSet<TblConstInfectionSource> TblConstInfectionSources { get; set; }
        public virtual DbSet<TblConstLogField> TblConstLogFields { get; set; }
        public virtual DbSet<TblConstLunch> TblConstLunches { get; set; }
        public virtual DbSet<TblConstLunchCopy2> TblConstLunchCopy2s { get; set; }
        public virtual DbSet<TblConstMabarControl> TblConstMabarControls { get; set; }
        public virtual DbSet<TblConstMarketingMaagar> TblConstMarketingMaagars { get; set; }
        public virtual DbSet<TblConstPharmaGroup> TblConstPharmaGroups { get; set; }
        public virtual DbSet<TblConstRecStatus> TblConstRecStatuses { get; set; }
        public virtual DbSet<TblConstTaskProcedure> TblConstTaskProcedures { get; set; }
        public virtual DbSet<TblConstTaskProcedures2> TblConstTaskProcedures2s { get; set; }
        public virtual DbSet<TblConstTipulTheme> TblConstTipulThemes { get; set; }
        public virtual DbSet<TblConstTipulitGroup> TblConstTipulitGroups { get; set; }
        public virtual DbSet<TblConstWorkersKind1> TblConstWorkersKind1s { get; set; }
        public virtual DbSet<TblConstWorkersKind2> TblConstWorkersKind2s { get; set; }
        public virtual DbSet<TblConstinsulation> TblConstinsulations { get; set; }
        public virtual DbSet<TblContact> TblContacts { get; set; }
        public virtual DbSet<TblContractDiscount> TblContractDiscounts { get; set; }
        public virtual DbSet<TblContractPayment> TblContractPayments { get; set; }
        public virtual DbSet<TblContractsActionLog> TblContractsActionLogs { get; set; }
        public virtual DbSet<TblContractsHilutToYear> TblContractsHilutToYears { get; set; }
        public virtual DbSet<TblControlDrugPkudot> TblControlDrugPkudots { get; set; }
        public virtual DbSet<TblControlForm> TblControlForms { get; set; }
        public virtual DbSet<TblCourseActivity> TblCourseActivities { get; set; }
        public virtual DbSet<TblCriterionPhiz> TblCriterionPhizs { get; set; }
        public virtual DbSet<TblDayarimAtRisk> TblDayarimAtRisks { get; set; }
        public virtual DbSet<TblDefActionKind> TblDefActionKinds { get; set; }
        public virtual DbSet<TblDefActionStatus> TblDefActionStatuses { get; set; }
        public virtual DbSet<TblDefAgeMenopause> TblDefAgeMenopauses { get; set; }
        public virtual DbSet<TblDefAicp> TblDefAicps { get; set; }
        public virtual DbSet<TblDefAmbulanceKind> TblDefAmbulanceKinds { get; set; }
        public virtual DbSet<TblDefAmbulancePlace> TblDefAmbulancePlaces { get; set; }
        public virtual DbSet<TblDefAmbulanceTarget> TblDefAmbulanceTargets { get; set; }
        public virtual DbSet<TblDefAntibiotic> TblDefAntibiotics { get; set; }
        public virtual DbSet<TblDefArnona> TblDefArnonas { get; set; }
        public virtual DbSet<TblDefAvhanaKind> TblDefAvhanaKinds { get; set; }
        public virtual DbSet<TblDefAvhanaMedicineComment> TblDefAvhanaMedicineComments { get; set; }
        public virtual DbSet<TblDefAvhanaMiun> TblDefAvhanaMiuns { get; set; }
        public virtual DbSet<TblDefAvhanaPlace> TblDefAvhanaPlaces { get; set; }
        public virtual DbSet<TblDefAvhanotPosition> TblDefAvhanotPositions { get; set; }
        public virtual DbSet<TblDefAvhanotStatus> TblDefAvhanotStatuses { get; set; }
        public virtual DbSet<TblDefAvhanotUrgentcy> TblDefAvhanotUrgentcies { get; set; }
        public virtual DbSet<TblDefBank> TblDefBanks { get; set; }
        public virtual DbSet<TblDefBdikaYezumaSiudi2> TblDefBdikaYezumaSiudi2s { get; set; }
        public virtual DbSet<TblDefBdikot> TblDefBdikots { get; set; }
        public virtual DbSet<TblDefBdikotDetail> TblDefBdikotDetails { get; set; }
        public virtual DbSet<TblDefBdikotDetails3> TblDefBdikotDetails3s { get; set; }
        public virtual DbSet<TblDefBmPlace> TblDefBmPlaces { get; set; }
        public virtual DbSet<TblDefBmPlaceDesc> TblDefBmPlaceDescs { get; set; }
        public virtual DbSet<TblDefBmStatus> TblDefBmStatuses { get; set; }
        public virtual DbSet<TblDefBmmiun> TblDefBmmiuns { get; set; }
        public virtual DbSet<TblDefBodyPart> TblDefBodyParts { get; set; }
        public virtual DbSet<TblDefBodyPlace> TblDefBodyPlaces { get; set; }
        public virtual DbSet<TblDefCard> TblDefCards { get; set; }
        public virtual DbSet<TblDefCategoryMed> TblDefCategoryMeds { get; set; }
        public virtual DbSet<TblDefCategoryMedComp1> TblDefCategoryMedComp1s { get; set; }
        public virtual DbSet<TblDefCharge> TblDefCharges { get; set; }
        public virtual DbSet<TblDefChargeHatsmadum> TblDefChargeHatsmada { get; set; }
        public virtual DbSet<TblDefChargeName> TblDefChargeNames { get; set; }
        public virtual DbSet<TblDefChargeUnit> TblDefChargeUnits { get; set; }
        public virtual DbSet<TblDefCity> TblDefCities { get; set; }
        public virtual DbSet<TblDefClassDrugsToInvite> TblDefClassDrugsToInvites { get; set; }
        public virtual DbSet<TblDefClientComment> TblDefClientComments { get; set; }
        public virtual DbSet<TblDefClientProperty> TblDefClientProperties { get; set; }
        public virtual DbSet<TblDefClinic> TblDefClinics { get; set; }
        public virtual DbSet<TblDefClothe> TblDefClothes { get; set; }
        public virtual DbSet<TblDefCoin> TblDefCoins { get; set; }
        public virtual DbSet<TblDefConfirmKind> TblDefConfirmKinds { get; set; }
        public virtual DbSet<TblDefContactsKind> TblDefContactsKinds { get; set; }
        public virtual DbSet<TblDefContactsTheme> TblDefContactsThemes { get; set; }
        public virtual DbSet<TblDefContraception> TblDefContraceptions { get; set; }
        public virtual DbSet<TblDefControlReport> TblDefControlReports { get; set; }
        public virtual DbSet<TblDefCountry> TblDefCountries { get; set; }
        public virtual DbSet<TblDefCountryKod> TblDefCountryKods { get; set; }
        public virtual DbSet<TblDefCourse> TblDefCourses { get; set; }
        public virtual DbSet<TblDefCulture> TblDefCultures { get; set; }
        public virtual DbSet<TblDefCycleLength> TblDefCycleLengths { get; set; }
        public virtual DbSet<TblDefCycleLength2> TblDefCycleLength2s { get; set; }
        public virtual DbSet<TblDefDay> TblDefDays { get; set; }
        public virtual DbSet<TblDefDelivery> TblDefDeliveries { get; set; }
        public virtual DbSet<TblDefDietDrugNotGivenReson> TblDefDietDrugNotGivenResons { get; set; }
        public virtual DbSet<TblDefDietEstinationReason> TblDefDietEstinationReasons { get; set; }
        public virtual DbSet<TblDefDietKalkalaKind> TblDefDietKalkalaKinds { get; set; }
        public virtual DbSet<TblDefDietNutrition> TblDefDietNutritions { get; set; }
        public virtual DbSet<TblDefDietOrder> TblDefDietOrders { get; set; }
        public virtual DbSet<TblDefDietOrder1> TblDefDietOrders1 { get; set; }
        public virtual DbSet<TblDefDietSwallow> TblDefDietSwallows { get; set; }
        public virtual DbSet<TblDefDietTooth> TblDefDietTeeth { get; set; }
        public virtual DbSet<TblDefDietTosefetMazon> TblDefDietTosefetMazons { get; set; }
        public virtual DbSet<TblDefDietYerudim> TblDefDietYerudims { get; set; }
        public virtual DbSet<TblDefDiminutionReason> TblDefDiminutionReasons { get; set; }
        public virtual DbSet<TblDefDiurKind> TblDefDiurKinds { get; set; }
        public virtual DbSet<TblDefDocKeyWord> TblDefDocKeyWords { get; set; }
        public virtual DbSet<TblDefDocKind> TblDefDocKinds { get; set; }
        public virtual DbSet<TblDefDoctor> TblDefDoctors { get; set; }
        public virtual DbSet<TblDefDrugAriza> TblDefDrugArizas { get; set; }
        public virtual DbSet<TblDefDrugCapsule> TblDefDrugCapsules { get; set; }
        public virtual DbSet<TblDefDrugGeneric> TblDefDrugGenerics { get; set; }
        public virtual DbSet<TblDefDrugKind> TblDefDrugKinds { get; set; }
        public virtual DbSet<TblDefDrugNotGivenReson> TblDefDrugNotGivenResons { get; set; }
        public virtual DbSet<TblDefDrugStopReson> TblDefDrugStopResons { get; set; }
        public virtual DbSet<TblDefEndometriosi> TblDefEndometrioses { get; set; }
        public virtual DbSet<TblDefEnergySubject> TblDefEnergySubjects { get; set; }
        public virtual DbSet<TblDefEnterMaslul> TblDefEnterMasluls { get; set; }
        public virtual DbSet<TblDefEnterStatus> TblDefEnterStatuses { get; set; }
        public virtual DbSet<TblDefEquipment> TblDefEquipments { get; set; }
        public virtual DbSet<TblDefEventKind> TblDefEventKinds { get; set; }
        public virtual DbSet<TblDefEventKindMain> TblDefEventKindMains { get; set; }
        public virtual DbSet<TblDefEventPlace> TblDefEventPlaces { get; set; }
        public virtual DbSet<TblDefEventReason> TblDefEventReasons { get; set; }
        public virtual DbSet<TblDefEventResult> TblDefEventResults { get; set; }
        public virtual DbSet<TblDefEventState> TblDefEventStates { get; set; }
        public virtual DbSet<TblDefExitReason> TblDefExitReasons { get; set; }
        public virtual DbSet<TblDefExitTarget> TblDefExitTargets { get; set; }
        public virtual DbSet<TblDefExitTransferKind> TblDefExitTransferKinds { get; set; }
        public virtual DbSet<TblDefFabric> TblDefFabrics { get; set; }
        public virtual DbSet<TblDefFabricMenu> TblDefFabricMenus { get; set; }
        public virtual DbSet<TblDefFabricMenuComp1> TblDefFabricMenuComp1s { get; set; }
        public virtual DbSet<TblDefFamilyStatus> TblDefFamilyStatuses { get; set; }
        public virtual DbSet<TblDefFeedMethod> TblDefFeedMethods { get; set; }
        public virtual DbSet<TblDefFertility> TblDefFertilities { get; set; }
        public virtual DbSet<TblDefFiver> TblDefFivers { get; set; }
        public virtual DbSet<TblDefFolderKind> TblDefFolderKinds { get; set; }
        public virtual DbSet<TblDefFolderStatus> TblDefFolderStatuses { get; set; }
        public virtual DbSet<TblDefFolderTheme> TblDefFolderThemes { get; set; }
        public virtual DbSet<TblDefFollowSubject> TblDefFollowSubjects { get; set; }
        public virtual DbSet<TblDefFollowUpKey> TblDefFollowUpKeys { get; set; }
        public virtual DbSet<TblDefFollowUpSubject> TblDefFollowUpSubjects { get; set; }
        public virtual DbSet<TblDefFood> TblDefFoods { get; set; }
        public virtual DbSet<TblDefFoodAdding> TblDefFoodAddings { get; set; }
        public virtual DbSet<TblDefFoodFollow> TblDefFoodFollows { get; set; }
        public virtual DbSet<TblDefFoodKind> TblDefFoodKinds { get; set; }
        public virtual DbSet<TblDefFoodMenu> TblDefFoodMenus { get; set; }
        public virtual DbSet<TblDefFoodMenusName> TblDefFoodMenusNames { get; set; }
        public virtual DbSet<TblDefFoodMethod> TblDefFoodMethods { get; set; }
        public virtual DbSet<TblDefFoodParam> TblDefFoodParams { get; set; }
        public virtual DbSet<TblDefFoodUnit> TblDefFoodUnits { get; set; }
        public virtual DbSet<TblDefFormPopUp> TblDefFormPopUps { get; set; }
        public virtual DbSet<TblDefFuncGphizio> TblDefFuncGphizios { get; set; }
        public virtual DbSet<TblDefGanJob> TblDefGanJobs { get; set; }
        public virtual DbSet<TblDefGanKind1> TblDefGanKind1s { get; set; }
        public virtual DbSet<TblDefGanKind2> TblDefGanKind2s { get; set; }
        public virtual DbSet<TblDefGeneralKnowledge> TblDefGeneralKnowledges { get; set; }
        public virtual DbSet<TblDefGflow> TblDefGflows { get; set; }
        public virtual DbSet<TblDefGhtreatment> TblDefGhtreatments { get; set; }
        public virtual DbSet<TblDefGivingManner> TblDefGivingManners { get; set; }
        public virtual DbSet<TblDefGivingMannerComp1> TblDefGivingMannerComp1s { get; set; }
        public virtual DbSet<TblDefGivingWay> TblDefGivingWays { get; set; }
        public virtual DbSet<TblDefGivingWayComp1> TblDefGivingWayComp1s { get; set; }
        public virtual DbSet<TblDefGoremMafne> TblDefGoremMafnes { get; set; }
        public virtual DbSet<TblDefGpm> TblDefGpms { get; set; }
        public virtual DbSet<TblDefGrtype> TblDefGrtypes { get; set; }
        public virtual DbSet<TblDefGsymptom> TblDefGsymptoms { get; set; }
        public virtual DbSet<TblDefHarshahMain> TblDefHarshahMains { get; set; }
        public virtual DbSet<TblDefHarshahModule> TblDefHarshahModules { get; set; }
        public virtual DbSet<TblDefHarshahModulesTheme> TblDefHarshahModulesThemes { get; set; }
        public virtual DbSet<TblDefHatsmadum> TblDefHatsmada { get; set; }
        public virtual DbSet<TblDefHergelim> TblDefHergelims { get; set; }
        public virtual DbSet<TblDefHobby> TblDefHobbies { get; set; }
        public virtual DbSet<TblDefHospStatus> TblDefHospStatuses { get; set; }
        public virtual DbSet<TblDefHrt> TblDefHrts { get; set; }
        public virtual DbSet<TblDefHtmlCnt> TblDefHtmlCnts { get; set; }
        public virtual DbSet<TblDefHtmlCnt2> TblDefHtmlCnt2s { get; set; }
        public virtual DbSet<TblDefHtmlCnt2Nah> TblDefHtmlCnt2Nahs { get; set; }
        public virtual DbSet<TblDefHtmlCnt2nisayon> TblDefHtmlCnt2nisayons { get; set; }
        public virtual DbSet<TblDefHtmlFormsWeb> TblDefHtmlFormsWebs { get; set; }
        public virtual DbSet<TblDefHtmlSkira> TblDefHtmlSkiras { get; set; }
        public virtual DbSet<TblDefHtmlVal> TblDefHtmlVals { get; set; }
        public virtual DbSet<TblDefHypomenorrhea> TblDefHypomenorrheas { get; set; }
        public virtual DbSet<TblDefIndex> TblDefIndices { get; set; }
        public virtual DbSet<TblDefInfecKindStand> TblDefInfecKindStands { get; set; }
        public virtual DbSet<TblDefInfectBmddate> TblDefInfectBmddates { get; set; }
        public virtual DbSet<TblDefInfectionFinding> TblDefInfectionFindings { get; set; }
        public virtual DbSet<TblDefInfectionIshpuz> TblDefInfectionIshpuzs { get; set; }
        public virtual DbSet<TblDefInfectionSikor> TblDefInfectionSikors { get; set; }
        public virtual DbSet<TblDefInfectionStatus> TblDefInfectionStatuses { get; set; }
        public virtual DbSet<TblDefInfluencePain> TblDefInfluencePains { get; set; }
        public virtual DbSet<TblDefInfusion> TblDefInfusions { get; set; }
        public virtual DbSet<TblDefItemFuncGuide> TblDefItemFuncGuides { get; set; }
        public virtual DbSet<TblDefJob> TblDefJobs { get; set; }
        public virtual DbSet<TblDefKindSolution> TblDefKindSolutions { get; set; }
        public virtual DbSet<TblDefKindTipulim> TblDefKindTipulims { get; set; }
        public virtual DbSet<TblDefKirva> TblDefKirvas { get; set; }
        public virtual DbSet<TblDefKod17> TblDefKod17s { get; set; }
        public virtual DbSet<TblDefKod17Price> TblDefKod17Prices { get; set; }
        public virtual DbSet<TblDefKomot> TblDefKomots { get; set; }
        public virtual DbSet<TblDefKupa> TblDefKupas { get; set; }
        public virtual DbSet<TblDefKupaSnif> TblDefKupaSnifs { get; set; }
        public virtual DbSet<TblDefKupaTikra> TblDefKupaTikras { get; set; }
        public virtual DbSet<TblDefLanguage> TblDefLanguages { get; set; }
        public virtual DbSet<TblDefLastRoomCardex> TblDefLastRoomCardices { get; set; }
        public virtual DbSet<TblDefLeaveKind> TblDefLeaveKinds { get; set; }
        public virtual DbSet<TblDefLockForm> TblDefLockForms { get; set; }
        public virtual DbSet<TblDefLogWatch> TblDefLogWatches { get; set; }
        public virtual DbSet<TblDefMadadim> TblDefMadadims { get; set; }
        public virtual DbSet<TblDefMahamKind> TblDefMahamKinds { get; set; }
        public virtual DbSet<TblDefMahlaka> TblDefMahlakas { get; set; }
        public virtual DbSet<TblDefMahlakaMabar> TblDefMahlakaMabars { get; set; }
        public virtual DbSet<TblDefMahlakaOvdim> TblDefMahlakaOvdims { get; set; }
        public virtual DbSet<TblDefMahoz> TblDefMahozs { get; set; }
        public virtual DbSet<TblDefMahozToDell> TblDefMahozToDells { get; set; }
        public virtual DbSet<TblDefMainKind> TblDefMainKinds { get; set; }
        public virtual DbSet<TblDefMainMahlaka> TblDefMainMahlakas { get; set; }
        public virtual DbSet<TblDefMaintenanceLevel> TblDefMaintenanceLevels { get; set; }
        public virtual DbSet<TblDefMaintenanceMiun> TblDefMaintenanceMiuns { get; set; }
        public virtual DbSet<TblDefMaslulService> TblDefMaslulServices { get; set; }
        public virtual DbSet<TblDefMedBituah> TblDefMedBituahs { get; set; }
        public virtual DbSet<TblDefMedSign> TblDefMedSigns { get; set; }
        public virtual DbSet<TblDefMedTnuot> TblDefMedTnuots { get; set; }
        public virtual DbSet<TblDefMedadimMinMax> TblDefMedadimMinMaxes { get; set; }
        public virtual DbSet<TblDefMedahTheme> TblDefMedahThemes { get; set; }
        public virtual DbSet<TblDefMedicalGroup> TblDefMedicalGroups { get; set; }
        public virtual DbSet<TblDefMedicalImg> TblDefMedicalImgs { get; set; }
        public virtual DbSet<TblDefMedicalTaskTheme> TblDefMedicalTaskThemes { get; set; }
        public virtual DbSet<TblDefMedicalTaskThemes1> TblDefMedicalTaskThemes1s { get; set; }
        public virtual DbSet<TblDefMedicalTaskThemesBalev> TblDefMedicalTaskThemesBalevs { get; set; }
        public virtual DbSet<TblDefMedicalTaskThemesBalev1> TblDefMedicalTaskThemesBalev1s { get; set; }
        public virtual DbSet<TblDefMedicalTaskThemesHatichon> TblDefMedicalTaskThemesHatichons { get; set; }
        public virtual DbSet<TblDefMedicalTaskThemesHerzog> TblDefMedicalTaskThemesHerzogs { get; set; }
        public virtual DbSet<TblDefMedicalTaskThemesReuth> TblDefMedicalTaskThemesReuths { get; set; }
        public virtual DbSet<TblDefMelayOutDest> TblDefMelayOutDests { get; set; }
        public virtual DbSet<TblDefMenuKind> TblDefMenuKinds { get; set; }
        public virtual DbSet<TblDefMenue> TblDefMenues { get; set; }
        public virtual DbSet<TblDefMiniMentalRule> TblDefMiniMentalRules { get; set; }
        public virtual DbSet<TblDefMirkamKalkala> TblDefMirkamKalkalas { get; set; }
        public virtual DbSet<TblDefMishmeret> TblDefMishmerets { get; set; }
        public virtual DbSet<TblDefMobileImg> TblDefMobileImgs { get; set; }
        public virtual DbSet<TblDefMonth> TblDefMonths { get; set; }
        public virtual DbSet<TblDefMosadIshpuz> TblDefMosadIshpuzs { get; set; }
        public virtual DbSet<TblDefNehalim> TblDefNehalims { get; set; }
        public virtual DbSet<TblDefNumPb> TblDefNumPbs { get; set; }
        public virtual DbSet<TblDefNursePlanAeb> TblDefNursePlanAebs { get; set; }
        public virtual DbSet<TblDefNursePlanNoc> TblDefNursePlanNocs { get; set; }
        public virtual DbSet<TblDefNursePlanRt> TblDefNursePlanRts { get; set; }
        public virtual DbSet<TblDefNursingPlansEtiology> TblDefNursingPlansEtiologies { get; set; }
        public virtual DbSet<TblDefNursingPlansImmed> TblDefNursingPlansImmeds { get; set; }
        public virtual DbSet<TblDefNursingPlansNeotEtiology> TblDefNursingPlansNeotEtiologies { get; set; }
        public virtual DbSet<TblDefNursingPlansNeotImmed> TblDefNursingPlansNeotImmeds { get; set; }
        public virtual DbSet<TblDefNursingPlansNeotProblem> TblDefNursingPlansNeotProblems { get; set; }
        public virtual DbSet<TblDefNursingPlansNeotProblemsEng> TblDefNursingPlansNeotProblemsEngs { get; set; }
        public virtual DbSet<TblDefNursingPlansNeotResult> TblDefNursingPlansNeotResults { get; set; }
        public virtual DbSet<TblDefNursingPlansNeotSymptom> TblDefNursingPlansNeotSymptoms { get; set; }
        public virtual DbSet<TblDefNursingPlansNeotTarget> TblDefNursingPlansNeotTargets { get; set; }
        public virtual DbSet<TblDefNursingPlansNeotTheme> TblDefNursingPlansNeotThemes { get; set; }
        public virtual DbSet<TblDefNursingPlansNeotThemesEng> TblDefNursingPlansNeotThemesEngs { get; set; }
        public virtual DbSet<TblDefNursingPlansNeotTipulim> TblDefNursingPlansNeotTipulims { get; set; }
        public virtual DbSet<TblDefNursingPlansProblem> TblDefNursingPlansProblems { get; set; }
        public virtual DbSet<TblDefNursingPlansProblemsEng> TblDefNursingPlansProblemsEngs { get; set; }
        public virtual DbSet<TblDefNursingPlansResult> TblDefNursingPlansResults { get; set; }
        public virtual DbSet<TblDefNursingPlansSymptom> TblDefNursingPlansSymptoms { get; set; }
        public virtual DbSet<TblDefNursingPlansTarget> TblDefNursingPlansTargets { get; set; }
        public virtual DbSet<TblDefNursingPlansTheme> TblDefNursingPlansThemes { get; set; }
        public virtual DbSet<TblDefNursingPlansThemesEng> TblDefNursingPlansThemesEngs { get; set; }
        public virtual DbSet<TblDefNursingPlansTipulim> TblDefNursingPlansTipulims { get; set; }
        public virtual DbSet<TblDefObjectsToPcdisease> TblDefObjectsToPcdiseases { get; set; }
        public virtual DbSet<TblDefParamFollow> TblDefParamFollows { get; set; }
        public virtual DbSet<TblDefParitMiun> TblDefParitMiuns { get; set; }
        public virtual DbSet<TblDefParitUnit> TblDefParitUnits { get; set; }
        public virtual DbSet<TblDefPayGroup> TblDefPayGroups { get; set; }
        public virtual DbSet<TblDefPayLimit> TblDefPayLimits { get; set; }
        public virtual DbSet<TblDefPayMethod> TblDefPayMethods { get; set; }
        public virtual DbSet<TblDefPayTheme> TblDefPayThemes { get; set; }
        public virtual DbSet<TblDefPeliative> TblDefPeliatives { get; set; }
        public virtual DbSet<TblDefPharmaGroup> TblDefPharmaGroups { get; set; }
        public virtual DbSet<TblDefPhizioMonthGroupActivty> TblDefPhizioMonthGroupActivties { get; set; }
        public virtual DbSet<TblDefPhizioMonthIndividualActivity> TblDefPhizioMonthIndividualActivities { get; set; }
        public virtual DbSet<TblDefPhizioMonthKindInstruction> TblDefPhizioMonthKindInstructions { get; set; }
        public virtual DbSet<TblDefPhizioMonthLevelParticipation> TblDefPhizioMonthLevelParticipations { get; set; }
        public virtual DbSet<TblDefPhizioMonthReasonChange> TblDefPhizioMonthReasonChanges { get; set; }
        public virtual DbSet<TblDefPhizioMonthSocialInteraction> TblDefPhizioMonthSocialInteractions { get; set; }
        public virtual DbSet<TblDefPhizioMonthUpperLimb> TblDefPhizioMonthUpperLimbs { get; set; }
        public virtual DbSet<TblDefPhyzicalState> TblDefPhyzicalStates { get; set; }
        public virtual DbSet<TblDefPlanNursingNic> TblDefPlanNursingNics { get; set; }
        public virtual DbSet<TblDefPregnancy> TblDefPregnancies { get; set; }
        public virtual DbSet<TblDefQuantityRoom> TblDefQuantityRooms { get; set; }
        public virtual DbSet<TblDefReason> TblDefReasons { get; set; }
        public virtual DbSet<TblDefReasonDup> TblDefReasonDups { get; set; }
        public virtual DbSet<TblDefReasonEditFollow> TblDefReasonEditFollows { get; set; }
        public virtual DbSet<TblDefRecommendationClinic> TblDefRecommendationClinics { get; set; }
        public virtual DbSet<TblDefRegishut> TblDefRegishuts { get; set; }
        public virtual DbSet<TblDefReligion> TblDefReligions { get; set; }
        public virtual DbSet<TblDefRequestKind> TblDefRequestKinds { get; set; }
        public virtual DbSet<TblDefRespCoughLex> TblDefRespCoughLices { get; set; }
        public virtual DbSet<TblDefRespLevelSup> TblDefRespLevelSups { get; set; }
        public virtual DbSet<TblDefRespMachine> TblDefRespMachines { get; set; }
        public virtual DbSet<TblDefRespMethod> TblDefRespMethods { get; set; }
        public virtual DbSet<TblDefRespQuantityProv> TblDefRespQuantityProvs { get; set; }
        public virtual DbSet<TblDefRespStatusG> TblDefRespStatusGs { get; set; }
        public virtual DbSet<TblDefRevahCaption> TblDefRevahCaptions { get; set; }
        public virtual DbSet<TblDefRoomClass> TblDefRoomClasses { get; set; }
        public virtual DbSet<TblDefRoomMaslul> TblDefRoomMasluls { get; set; }
        public virtual DbSet<TblDefRoomOwner> TblDefRoomOwners { get; set; }
        public virtual DbSet<TblDefRoomProperty> TblDefRoomProperties { get; set; }
        public virtual DbSet<TblDefSato> TblDefSatos { get; set; }
        public virtual DbSet<TblDefSchoolCurse> TblDefSchoolCurses { get; set; }
        public virtual DbSet<TblDefShehiaStatus> TblDefShehiaStatuses { get; set; }
        public virtual DbSet<TblDefSikunReason> TblDefSikunReasons { get; set; }
        public virtual DbSet<TblDefSimanimGraph> TblDefSimanimGraphs { get; set; }
        public virtual DbSet<TblDefSmsMsg> TblDefSmsMsgs { get; set; }
        public virtual DbSet<TblDefSnif> TblDefSnifs { get; set; }
        public virtual DbSet<TblDefSortBy> TblDefSortBies { get; set; }
        public virtual DbSet<TblDefSponser> TblDefSponsers { get; set; }
        public virtual DbSet<TblDefSponserService> TblDefSponserServices { get; set; }
        public virtual DbSet<TblDefSponserSetting> TblDefSponserSettings { get; set; }
        public virtual DbSet<TblDefStationImg> TblDefStationImgs { get; set; }
        public virtual DbSet<TblDefStatus> TblDefStatuses { get; set; }
        public virtual DbSet<TblDefStatusForm> TblDefStatusForms { get; set; }
        public virtual DbSet<TblDefStatusRoom> TblDefStatusRooms { get; set; }
        public virtual DbSet<TblDefStdorPid> TblDefStdorPids { get; set; }
        public virtual DbSet<TblDefSubject> TblDefSubjects { get; set; }
        public virtual DbSet<TblDefSubjectDoc> TblDefSubjectDocs { get; set; }
        public virtual DbSet<TblDefSubjectSoInter> TblDefSubjectSoInters { get; set; }
        public virtual DbSet<TblDefSubmissionForm> TblDefSubmissionForms { get; set; }
        public virtual DbSet<TblDefSubmissionFormComp1> TblDefSubmissionFormComp1s { get; set; }
        public virtual DbSet<TblDefSymptomsPain> TblDefSymptomsPains { get; set; }
        public virtual DbSet<TblDefTargeDoc> TblDefTargeDocs { get; set; }
        public virtual DbSet<TblDefTaskPlace> TblDefTaskPlaces { get; set; }
        public virtual DbSet<TblDefTaskStatus> TblDefTaskStatuses { get; set; }
        public virtual DbSet<TblDefTaskTarget> TblDefTaskTargets { get; set; }
        public virtual DbSet<TblDefTavitFile> TblDefTavitFiles { get; set; }
        public virtual DbSet<TblDefTelemarketingStatus> TblDefTelemarketingStatuses { get; set; }
        public virtual DbSet<TblDefTestDetail> TblDefTestDetails { get; set; }
        public virtual DbSet<TblDefTestRisk> TblDefTestRisks { get; set; }
        public virtual DbSet<TblDefThemePhiziotrapium> TblDefThemePhiziotrapia { get; set; }
        public virtual DbSet<TblDefThemeRefuee> TblDefThemeRefuees { get; set; }
        public virtual DbSet<TblDefThemeSiudi> TblDefThemeSiudis { get; set; }
        public virtual DbSet<TblDefThemeSocial> TblDefThemeSocials { get; set; }
        public virtual DbSet<TblDefThroughP> TblDefThroughPs { get; set; }
        public virtual DbSet<TblDefTifkud> TblDefTifkuds { get; set; }
        public virtual DbSet<TblDefTifkudDescription> TblDefTifkudDescriptions { get; set; }
        public virtual DbSet<TblDefTifkudStatus> TblDefTifkudStatuses { get; set; }
        public virtual DbSet<TblDefTipulPositionReson> TblDefTipulPositionResons { get; set; }
        public virtual DbSet<TblDefTipulReason> TblDefTipulReasons { get; set; }
        public virtual DbSet<TblDefTipulim> TblDefTipulims { get; set; }
        public virtual DbSet<TblDefTipulimMain> TblDefTipulimMains { get; set; }
        public virtual DbSet<TblDefToaar> TblDefToaars { get; set; }
        public virtual DbSet<TblDefTrainingSubject> TblDefTrainingSubjects { get; set; }
        public virtual DbSet<TblDefTransferalClinic> TblDefTransferalClinics { get; set; }
        public virtual DbSet<TblDefTreatment> TblDefTreatments { get; set; }
        public virtual DbSet<TblDefTreatmentPlanRep> TblDefTreatmentPlanReps { get; set; }
        public virtual DbSet<TblDefTreatmentsPerStatus> TblDefTreatmentsPerStatuses { get; set; }
        public virtual DbSet<TblDefTyingFrequency> TblDefTyingFrequencies { get; set; }
        public virtual DbSet<TblDefTypeHatzmadum> TblDefTypeHatzmada { get; set; }
        public virtual DbSet<TblDefTzoa> TblDefTzoas { get; set; }
        public virtual DbSet<TblDefUnitofMeasure> TblDefUnitofMeasures { get; set; }
        public virtual DbSet<TblDefUnitofMeasureComp1> TblDefUnitofMeasureComp1s { get; set; }
        public virtual DbSet<TblDefVaccintion> TblDefVaccintions { get; set; }
        public virtual DbSet<TblDefVaccintionName> TblDefVaccintionNames { get; set; }
        public virtual DbSet<TblDefWeightLoss> TblDefWeightLosses { get; set; }
        public virtual DbSet<TblDefWorkerProperty> TblDefWorkerProperties { get; set; }
        public virtual DbSet<TblDefYediah> TblDefYediahs { get; set; }
        public virtual DbSet<TblDefYediahDescription> TblDefYediahDescriptions { get; set; }
        public virtual DbSet<TblDefYeshivaTarget> TblDefYeshivaTargets { get; set; }
        public virtual DbSet<TblDefYeshivotTzevetSummary> TblDefYeshivotTzevetSummaries { get; set; }
        public virtual DbSet<TblDefZmidRoom> TblDefZmidRooms { get; set; }
        public virtual DbSet<TblDefdirectionRoom> TblDefdirectionRooms { get; set; }
        public virtual DbSet<TblDiagnosisFunction> TblDiagnosisFunctions { get; set; }
        public virtual DbSet<TblDiaryPharmV1Interaction> TblDiaryPharmV1Interactions { get; set; }
        public virtual DbSet<TblDietClientPo> TblDietClientPos { get; set; }
        public virtual DbSet<TblDietClientPoComp1> TblDietClientPoComp1s { get; set; }
        public virtual DbSet<TblDietOrder> TblDietOrders { get; set; }
        public virtual DbSet<TblDietOrdersDrug> TblDietOrdersDrugs { get; set; }
        public virtual DbSet<TblDietOrdersDrugsWeb> TblDietOrdersDrugsWebs { get; set; }
        public virtual DbSet<TblDietOrdersDrugsWebCardexView> TblDietOrdersDrugsWebCardexViews { get; set; }
        public virtual DbSet<TblDietOrdersDrugsWebComp1> TblDietOrdersDrugsWebComp1s { get; set; }
        public virtual DbSet<TblDietOrdersDrugsWebTemp> TblDietOrdersDrugsWebTemps { get; set; }
        public virtual DbSet<TblDietOrdersDrugsWebView> TblDietOrdersDrugsWebViews { get; set; }
        public virtual DbSet<TblDietProppertiesClientWeb> TblDietProppertiesClientWebs { get; set; }
        public virtual DbSet<TblDietStopReason> TblDietStopReasons { get; set; }
        public virtual DbSet<TblDietStopReasonComp1> TblDietStopReasonComp1s { get; set; }
        public virtual DbSet<TblDietStopTempClient> TblDietStopTempClients { get; set; }
        public virtual DbSet<TblDietVclientPo> TblDietVclientPos { get; set; }
        public virtual DbSet<TblDietVlientPo> TblDietVlientPos { get; set; }
        public virtual DbSet<TblDietdrugsgave> TblDietdrugsgaves { get; set; }
        public virtual DbSet<TblDinkoNum> TblDinkoNums { get; set; }
        public virtual DbSet<TblDoctor> TblDoctors { get; set; }
        public virtual DbSet<TblDoctor1> TblDoctors1 { get; set; }
        public virtual DbSet<TblDoctorTime> TblDoctorTimes { get; set; }
        public virtual DbSet<TblDrug> TblDrugs { get; set; }
        public virtual DbSet<TblDrugAccept> TblDrugAccepts { get; set; }
        public virtual DbSet<TblDrugAcceptDetail> TblDrugAcceptDetails { get; set; }
        public virtual DbSet<TblDrugClientNeedAllow> TblDrugClientNeedAllows { get; set; }
        public virtual DbSet<TblDrugClientPrice> TblDrugClientPrices { get; set; }
        public virtual DbSet<TblDrugGenericCode> TblDrugGenericCodes { get; set; }
        public virtual DbSet<TblDrugGenric> TblDrugGenrics { get; set; }
        public virtual DbSet<TblDrugTempList> TblDrugTempLists { get; set; }
        public virtual DbSet<TblDrugToClientDetail> TblDrugToClientDetails { get; set; }
        public virtual DbSet<TblDrugsGave> TblDrugsGaves { get; set; }
        public virtual DbSet<TblDrugsGaveDeleted> TblDrugsGaveDeleteds { get; set; }
        public virtual DbSet<TblDrugsGaveView> TblDrugsGaveViews { get; set; }
        public virtual DbSet<TblDrugsNotGiven> TblDrugsNotGivens { get; set; }
        public virtual DbSet<TblDrugtoClient> TblDrugtoClients { get; set; }
        public virtual DbSet<TblDuplicateClient> TblDuplicateClients { get; set; }
        public virtual DbSet<TblDuplicateClient1> TblDuplicateClient1s { get; set; }
        public virtual DbSet<TblDynamicReport> TblDynamicReports { get; set; }
        public virtual DbSet<TblEmploymentTipul> TblEmploymentTipuls { get; set; }
        public virtual DbSet<TblEnergy> TblEnergies { get; set; }
        public virtual DbSet<TblEnterExitTime> TblEnterExitTimes { get; set; }
        public virtual DbSet<TblErrPdfFollow> TblErrPdfFollows { get; set; }
        public virtual DbSet<TblEvenrReuthConclusion> TblEvenrReuthConclusions { get; set; }
        public virtual DbSet<TblEvenrReuthNursePlace> TblEvenrReuthNursePlaces { get; set; }
        public virtual DbSet<TblEvenrReuthNurseResult> TblEvenrReuthNurseResults { get; set; }
        public virtual DbSet<TblEvenrReuthNurseSign> TblEvenrReuthNurseSigns { get; set; }
        public virtual DbSet<TblEvenrReuthNurseTying> TblEvenrReuthNurseTyings { get; set; }
        public virtual DbSet<TblEvenrReuthNurseType> TblEvenrReuthNurseTypes { get; set; }
        public virtual DbSet<TblEvenrReuthintervention> TblEvenrReuthinterventions { get; set; }
        public virtual DbSet<TblEventTipulUp> TblEventTipulUps { get; set; }
        public virtual DbSet<TblExpertsAdvise> TblExpertsAdvises { get; set; }
        public virtual DbSet<TblFieldsList> TblFieldsLists { get; set; }
        public virtual DbSet<TblFieldsNoToDup> TblFieldsNoToDups { get; set; }
        public virtual DbSet<TblFieldsNotToDuplicate> TblFieldsNotToDuplicates { get; set; }
        public virtual DbSet<TblFilter> TblFilters { get; set; }
        public virtual DbSet<TblFollow> TblFollows { get; set; }
        public virtual DbSet<TblFollowDonce> TblFollowDonces { get; set; }
        public virtual DbSet<TblFollowGroup> TblFollowGroups { get; set; }
        public virtual DbSet<TblFollowGroupDetail> TblFollowGroupDetails { get; set; }
        public virtual DbSet<TblFollowPdfSend> TblFollowPdfSends { get; set; }
        public virtual DbSet<TblFollowSugar> TblFollowSugars { get; set; }
        public virtual DbSet<TblFollowUp> TblFollowUps { get; set; }
        public virtual DbSet<TblFollowupDetail> TblFollowupDetails { get; set; }
        public virtual DbSet<TblFormAvhanotDiet> TblFormAvhanotDiets { get; set; }
        public virtual DbSet<TblFormDyn> TblFormDyns { get; set; }
        public virtual DbSet<TblFormDynItm> TblFormDynItms { get; set; }
        public virtual DbSet<TblFormHtmlLock> TblFormHtmlLocks { get; set; }
        public virtual DbSet<TblFormKey> TblFormKeys { get; set; }
        public virtual DbSet<TblFormPkudotContinueHosp> TblFormPkudotContinueHosps { get; set; }
        public virtual DbSet<TblFormsPermission> TblFormsPermissions { get; set; }
        public virtual DbSet<TblFormsTemplate> TblFormsTemplates { get; set; }
        public virtual DbSet<TblFormsTemplateBaitBalev> TblFormsTemplateBaitBalevs { get; set; }
        public virtual DbSet<TblFormsTemplateBeitHadar> TblFormsTemplateBeitHadars { get; set; }
        public virtual DbSet<TblFormsTemplateHerzog> TblFormsTemplateHerzogs { get; set; }
        public virtual DbSet<TblFormsTemplateNoDup> TblFormsTemplateNoDups { get; set; }
        public virtual DbSet<TblFormsTemplateReuth> TblFormsTemplateReuths { get; set; }
        public virtual DbSet<TblFormsTemplatedToDell> TblFormsTemplatedToDells { get; set; }
        public virtual DbSet<TblFrequency> TblFrequencies { get; set; }
        public virtual DbSet<TblFunctionLevel> TblFunctionLevels { get; set; }
        public virtual DbSet<TblFunctionalGuideClient> TblFunctionalGuideClients { get; set; }
        public virtual DbSet<TblFunctionalGuideDetailClient> TblFunctionalGuideDetailClients { get; set; }
        public virtual DbSet<TblGain> TblGains { get; set; }
        public virtual DbSet<TblGeneralNurseDetailA10> TblGeneralNurseDetailA10s { get; set; }
        public virtual DbSet<TblGoodMorning> TblGoodMornings { get; set; }
        public virtual DbSet<TblGroupAction> TblGroupActions { get; set; }
        public virtual DbSet<TblHeightAma> TblHeightAmas { get; set; }
        public virtual DbSet<TblHelpItemMersham> TblHelpItemMershams { get; set; }
        public virtual DbSet<TblHeshDocItem> TblHeshDocItems { get; set; }
        public virtual DbSet<TblHeshDocName> TblHeshDocNames { get; set; }
        public virtual DbSet<TblHeshDocument> TblHeshDocuments { get; set; }
        public virtual DbSet<TblHeshGroup> TblHeshGroups { get; set; }
        public virtual DbSet<TblHeshSafe> TblHeshSaves { get; set; }
        public virtual DbSet<TblHeshSetting> TblHeshSettings { get; set; }
        public virtual DbSet<TblHeshTkind> TblHeshTkinds { get; set; }
        public virtual DbSet<TblHilutimLog> TblHilutimLogs { get; set; }
        public virtual DbSet<TblHistoryUserInSty> TblHistoryUserInSties { get; set; }
        public virtual DbSet<TblHospitalVisit> TblHospitalVisits { get; set; }
        public virtual DbSet<TblHtmlCaption> TblHtmlCaptions { get; set; }
        public virtual DbSet<TblHtmlDefinition> TblHtmlDefinitions { get; set; }
        public virtual DbSet<TblHtmlFormAsmachtum> TblHtmlFormAsmachta { get; set; }
        public virtual DbSet<TblHtmlTemp> TblHtmlTemps { get; set; }
        public virtual DbSet<TblImportMedLife> TblImportMedLives { get; set; }
        public virtual DbSet<TblInvalidMedadim> TblInvalidMedadims { get; set; }
        public virtual DbSet<TblItemsUnique> TblItemsUniques { get; set; }
        public virtual DbSet<TblKabalaDef> TblKabalaDefs { get; set; }
        public virtual DbSet<TblKind1> TblKind1s { get; set; }
        public virtual DbSet<TblKind2> TblKind2s { get; set; }
        public virtual DbSet<TblKodMiun> TblKodMiuns { get; set; }
        public virtual DbSet<TblLangKey> TblLangKeys { get; set; }
        public virtual DbSet<TblLangKeysNew> TblLangKeysNews { get; set; }
        public virtual DbSet<TblLangLv> TblLangLvs { get; set; }
        public virtual DbSet<TblLangMsg> TblLangMsgs { get; set; }
        public virtual DbSet<TblLangMsgNoDup> TblLangMsgNoDups { get; set; }
        public virtual DbSet<TblLeaderSubject> TblLeaderSubjects { get; set; }
        public virtual DbSet<TblLedMed> TblLedMeds { get; set; }
        public virtual DbSet<TblLevelPigur> TblLevelPigurs { get; set; }
        public virtual DbSet<TblLimbWeight> TblLimbWeights { get; set; }
        public virtual DbSet<TblListPrice> TblListPrices { get; set; }
        public virtual DbSet<TblListPriceDetail> TblListPriceDetails { get; set; }
        public virtual DbSet<TblListPriceRoom> TblListPriceRooms { get; set; }
        public virtual DbSet<TblListPriceRoomDetail> TblListPriceRoomDetails { get; set; }
        public virtual DbSet<TblListPriceRule> TblListPriceRules { get; set; }
        public virtual DbSet<TblListPriceShehium> TblListPriceShehia { get; set; }
        public virtual DbSet<TblLogFormsAction> TblLogFormsActions { get; set; }
        public virtual DbSet<TblLogInfectionsClosed> TblLogInfectionsCloseds { get; set; }
        public virtual DbSet<TblLogTable> TblLogTables { get; set; }
        public virtual DbSet<TblLogTableViewForm> TblLogTableViewForms { get; set; }
        public virtual DbSet<TblLogUserCheckAvhanotToClientSeegnal> TblLogUserCheckAvhanotToClientSeegnals { get; set; }
        public virtual DbSet<TblMaakavimm> TblMaakavimms { get; set; }
        public virtual DbSet<TblMaakavimm1> TblMaakavimm1s { get; set; }
        public virtual DbSet<TblMabarControlScore> TblMabarControlScores { get; set; }
        public virtual DbSet<TblMabarKodFollow> TblMabarKodFollows { get; set; }
        public virtual DbSet<TblMabarReport> TblMabarReports { get; set; }
        public virtual DbSet<TblMadadim> TblMadadims { get; set; }
        public virtual DbSet<TblMaham> TblMahams { get; set; }
        public virtual DbSet<TblMahsanDetail> TblMahsanDetails { get; set; }
        public virtual DbSet<TblMahsanim> TblMahsanims { get; set; }
        public virtual DbSet<TblMaintCrmAction> TblMaintCrmActions { get; set; }
        public virtual DbSet<TblMaintCrmStatus> TblMaintCrmStatuses { get; set; }
        public virtual DbSet<TblMaintenance> TblMaintenances { get; set; }
        public virtual DbSet<TblMaintenanceCrm> TblMaintenanceCrms { get; set; }
        public virtual DbSet<TblMaintenanceOrder> TblMaintenanceOrders { get; set; }
        public virtual DbSet<TblMange17> TblMange17s { get; set; }
        public virtual DbSet<TblManot> TblManots { get; set; }
        public virtual DbSet<TblMarketingContract> TblMarketingContracts { get; set; }
        public virtual DbSet<TblMarketingFollow> TblMarketingFollows { get; set; }
        public virtual DbSet<TblMarketingFollowDetail> TblMarketingFollowDetails { get; set; }
        public virtual DbSet<TblMasavSetSumToKabala> TblMasavSetSumToKabalas { get; set; }
        public virtual DbSet<TblMasavTempTable> TblMasavTempTables { get; set; }
        public virtual DbSet<TblMedadim> TblMedadims { get; set; }
        public virtual DbSet<TblMedadimBp> TblMedadimBps { get; set; }
        public virtual DbSet<TblMedadimBreathing> TblMedadimBreathings { get; set; }
        public virtual DbSet<TblMedadimEtco2> TblMedadimEtco2s { get; set; }
        public virtual DbSet<TblMedadimFiver> TblMedadimFivers { get; set; }
        public virtual DbSet<TblMedadimHeadScope> TblMedadimHeadScopes { get; set; }
        public virtual DbSet<TblMedadimMenstruation> TblMedadimMenstruations { get; set; }
        public virtual DbSet<TblMedadimPressB> TblMedadimPressBs { get; set; }
        public virtual DbSet<TblMedadimProvDrain> TblMedadimProvDrains { get; set; }
        public virtual DbSet<TblMedadimProvZondum> TblMedadimProvZonda { get; set; }
        public virtual DbSet<TblMedadimPulse> TblMedadimPulses { get; set; }
        public virtual DbSet<TblMedadimSato> TblMedadimSatos { get; set; }
        public virtual DbSet<TblMedadimSugar> TblMedadimSugars { get; set; }
        public virtual DbSet<TblMedadimTzoa> TblMedadimTzoas { get; set; }
        public virtual DbSet<TblMedadimUrine> TblMedadimUrines { get; set; }
        public virtual DbSet<TblMedadimWeight> TblMedadimWeights { get; set; }
        public virtual DbSet<TblMedadimWeight22> TblMedadimWeight22s { get; set; }
        public virtual DbSet<TblMedadimWeightLoss> TblMedadimWeightLosses { get; set; }
        public virtual DbSet<TblMedicalTask> TblMedicalTasks { get; set; }
        public virtual DbSet<TblMedicalTaskDetail> TblMedicalTaskDetails { get; set; }
        public virtual DbSet<TblMeducalTask> TblMeducalTasks { get; set; }
        public virtual DbSet<TblMelayPrRefuee> TblMelayPrRefuees { get; set; }
        public virtual DbSet<TblMelayRest> TblMelayRests { get; set; }
        public virtual DbSet<TblMelaySetup> TblMelaySetups { get; set; }
        public virtual DbSet<TblMenage17DateUse> TblMenage17DateUses { get; set; }
        public virtual DbSet<TblMimsakLog> TblMimsakLogs { get; set; }
        public virtual DbSet<TblMimsakim> TblMimsakims { get; set; }
        public virtual DbSet<TblMirshamDetail> TblMirshamDetails { get; set; }
        public virtual DbSet<TblMirshamim> TblMirshamims { get; set; }
        public virtual DbSet<TblMishkalim> TblMishkalims { get; set; }
        public virtual DbSet<TblMitotTeken> TblMitotTekens { get; set; }
        public virtual DbSet<TblMonim> TblMonims { get; set; }
        public virtual DbSet<TblMonthlyForm> TblMonthlyForms { get; set; }
        public virtual DbSet<TblNoSignToCardex> TblNoSignToCardices { get; set; }
        public virtual DbSet<TblNursingPlansResult> TblNursingPlansResults { get; set; }
        public virtual DbSet<TblOutMail> TblOutMails { get; set; }
        public virtual DbSet<TblPainRequest> TblPainRequests { get; set; }
        public virtual DbSet<TblParamFollow> TblParamFollows { get; set; }
        public virtual DbSet<TblPharmacistBakara4> TblPharmacistBakara4s { get; set; }
        public virtual DbSet<TblPhizioMonthActivity> TblPhizioMonthActivities { get; set; }
        public virtual DbSet<TblPhizioRipuyOrder> TblPhizioRipuyOrders { get; set; }
        public virtual DbSet<TblPhoneParameter> TblPhoneParameters { get; set; }
        public virtual DbSet<TblPkodutTemporarySclient> TblPkodutTemporarySclients { get; set; }
        public virtual DbSet<TblPkudotConfirmation> TblPkudotConfirmations { get; set; }
        public virtual DbSet<TblPkudotToCardex> TblPkudotToCardices { get; set; }
        public virtual DbSet<TblPotencialClient> TblPotencialClients { get; set; }
        public virtual DbSet<TblPritim> TblPritims { get; set; }
        public virtual DbSet<TblPritimHeshKod> TblPritimHeshKods { get; set; }
        public virtual DbSet<TblPurchase> TblPurchases { get; set; }
        public virtual DbSet<TblPurchaseDetail> TblPurchaseDetails { get; set; }
        public virtual DbSet<TblPurchaseInvite> TblPurchaseInvites { get; set; }
        public virtual DbSet<TblPurchasePromotor> TblPurchasePromotors { get; set; }
        public virtual DbSet<TblPurchaseSetup> TblPurchaseSetups { get; set; }
        public virtual DbSet<TblRate> TblRates { get; set; }
        public virtual DbSet<TblRefueeMainForm> TblRefueeMainForms { get; set; }
        public virtual DbSet<TblRefueeManageForm> TblRefueeManageForms { get; set; }
        public virtual DbSet<TblRefueeMange> TblRefueeManges { get; set; }
        public virtual DbSet<TblRefueeMangeDetail> TblRefueeMangeDetails { get; set; }
        public virtual DbSet<TblReminder> TblReminders { get; set; }
        public virtual DbSet<TblReminderModule> TblReminderModules { get; set; }
        public virtual DbSet<TblReminderTheme> TblReminderThemes { get; set; }
        public virtual DbSet<TblRentgenPrice> TblRentgenPrices { get; set; }
        public virtual DbSet<TblRepCol> TblRepCols { get; set; }
        public virtual DbSet<TblReportHeader> TblReportHeaders { get; set; }
        public virtual DbSet<TblRole> TblRoles { get; set; }
        public virtual DbSet<TblRolesDetail> TblRolesDetails { get; set; }
        public virtual DbSet<TblRoom> TblRooms { get; set; }
        public virtual DbSet<TblRoomBed> TblRoomBeds { get; set; }
        public virtual DbSet<TblRoomPic> TblRoomPics { get; set; }
        public virtual DbSet<TblRoomPriceRole> TblRoomPriceRoles { get; set; }
        public virtual DbSet<TblRoomService> TblRoomServices { get; set; }
        public virtual DbSet<TblRoomShehiaRule> TblRoomShehiaRules { get; set; }
        public virtual DbSet<TblRoomsAgaf> TblRoomsAgafs { get; set; }
        public virtual DbSet<TblRoomsDetail> TblRoomsDetails { get; set; }
        public virtual DbSet<TblServiceContract> TblServiceContracts { get; set; }
        public virtual DbSet<TblSidurWorkerRoom> TblSidurWorkerRooms { get; set; }
        public virtual DbSet<TblSkirot> TblSkirots { get; set; }
        public virtual DbSet<TblSkirotDetail> TblSkirotDetails { get; set; }
        public virtual DbSet<TblSm> TblSms { get; set; }
        public virtual DbSet<TblSponserChild> TblSponserChildren { get; set; }
        public virtual DbSet<TblSubjectAction> TblSubjectActions { get; set; }
        public virtual DbSet<TblSubjectOrder> TblSubjectOrders { get; set; }
        public virtual DbSet<TblSummaryRecommendation> TblSummaryRecommendations { get; set; }
        public virtual DbSet<TblSupplyAsk> TblSupplyAsks { get; set; }
        public virtual DbSet<TblSynToWeb> TblSynToWebs { get; set; }
        public virtual DbSet<TblSynelCharge> TblSynelCharges { get; set; }
        public virtual DbSet<TblSynelKodByDay> TblSynelKodByDays { get; set; }
        public virtual DbSet<TblSynelKodToAvot> TblSynelKodToAvots { get; set; }
        public virtual DbSet<TblTabLogRead> TblTabLogReads { get; set; }
        public virtual DbSet<TblTabSetting> TblTabSettings { get; set; }
        public virtual DbSet<TblTakziv> TblTakzivs { get; set; }
        public virtual DbSet<TblTakzivDetail> TblTakzivDetails { get; set; }
        public virtual DbSet<TblTaskProcedure> TblTaskProcedures { get; set; }
        public virtual DbSet<TblTelemarketingAction> TblTelemarketingActions { get; set; }
        public virtual DbSet<TblTelemarketingField> TblTelemarketingFields { get; set; }
        public virtual DbSet<TblTempAv> TblTempAvs { get; set; }
        public virtual DbSet<TblTempFim> TblTempFims { get; set; }
        public virtual DbSet<TblTempRep2> TblTempRep2s { get; set; }
        public virtual DbSet<TblTempRepTnout> TblTempRepTnouts { get; set; }
        public virtual DbSet<TblTest> TblTests { get; set; }
        public virtual DbSet<TblTestDetail> TblTestDetails { get; set; }
        public virtual DbSet<TblTestMarkDescription> TblTestMarkDescriptions { get; set; }
        public virtual DbSet<TblTeumTipulParticipant> TblTeumTipulParticipants { get; set; }
        public virtual DbSet<TblTmpHeshEnrgy> TblTmpHeshEnrgies { get; set; }
        public virtual DbSet<TblTmpRoomEmpty> TblTmpRoomEmpties { get; set; }
        public virtual DbSet<TblTnuahKind> TblTnuahKinds { get; set; }
        public virtual DbSet<TblTnuot> TblTnuots { get; set; }
        public virtual DbSet<TblTnuot2> TblTnuot2s { get; set; }
        public virtual DbSet<TblToolbarButton> TblToolbarButtons { get; set; }
        public virtual DbSet<TblTorimRecommend> TblTorimRecommends { get; set; }
        public virtual DbSet<TblTranseTo> TblTranseTos { get; set; }
        public virtual DbSet<TblTreatment> TblTreatments { get; set; }
        public virtual DbSet<TblTreatmentNotDone> TblTreatmentNotDones { get; set; }
        public virtual DbSet<TblTreatmentPlanReport> TblTreatmentPlanReports { get; set; }
        public virtual DbSet<TblTyingClient> TblTyingClients { get; set; }
        public virtual DbSet<TblTyingClientKafolFix> TblTyingClientKafolFixes { get; set; }
        public virtual DbSet<TblTyingGave> TblTyingGaves { get; set; }
        public virtual DbSet<TblUpdate> TblUpdates { get; set; }
        public virtual DbSet<TblUpdateInfo> TblUpdateInfos { get; set; }
        public virtual DbSet<TblUserChangePassword> TblUserChangePasswords { get; set; }
        public virtual DbSet<TblUserDrugSetting> TblUserDrugSettings { get; set; }
        public virtual DbSet<TblUserGetMassageReminderKey> TblUserGetMassageReminderKeys { get; set; }
        public virtual DbSet<TblUserSetting> TblUserSettings { get; set; }
        public virtual DbSet<TblUserinSystem> TblUserinSystems { get; set; }
        public virtual DbSet<TblUsersToDelBalev> TblUsersToDelBalevs { get; set; }
        public virtual DbSet<TblVisitlist> TblVisitlists { get; set; }
        public virtual DbSet<TblWorkerRoom> TblWorkerRooms { get; set; }
        public virtual DbSet<TblWorkersDaysTime> TblWorkersDaysTimes { get; set; }
        public virtual DbSet<TblYeshivaParticipate> TblYeshivaParticipates { get; set; }
        public virtual DbSet<TblYeshivatTzevetLock> TblYeshivatTzevetLocks { get; set; }
        public virtual DbSet<TblYeshivatTzevetLockSummery> TblYeshivatTzevetLockSummeries { get; set; }
        public virtual DbSet<TblYoman> TblYomen { get; set; }
        public virtual DbSet<TblbiList> TblbiLists { get; set; }
        public virtual DbSet<TblclientEquipment> TblclientEquipments { get; set; }
        public virtual DbSet<TblclientRespiration> TblclientRespirations { get; set; }
        public virtual DbSet<TblclientTakingWC> TblclientTakingWCs { get; set; }
        public virtual DbSet<TblclientsWeb> TblclientsWebs { get; set; }
        public virtual DbSet<TbldefDrugUnit> TbldefDrugUnits { get; set; }
        public virtual DbSet<TbldefEmploymentGroup> TbldefEmploymentGroups { get; set; }
        public virtual DbSet<TbldefItemType> TbldefItemTypes { get; set; }
        public virtual DbSet<TbldefMaintenance> TbldefMaintenances { get; set; }
        public virtual DbSet<TbldefMappingTypeMed> TbldefMappingTypeMeds { get; set; }
        public virtual DbSet<TbldefPlace> TbldefPlaces { get; set; }
        public virtual DbSet<TbldefTimeType> TbldefTimeTypes { get; set; }
        public virtual DbSet<TbldefTrainingGet> TbldefTrainingGets { get; set; }
        public virtual DbSet<TbldefTyingEvar> TbldefTyingEvars { get; set; }
        public virtual DbSet<TbldefTyingKind> TbldefTyingKinds { get; set; }
        public virtual DbSet<TbldefTyingKindPsichater> TbldefTyingKindPsichaters { get; set; }
        public virtual DbSet<TbldefTyingReason> TbldefTyingReasons { get; set; }
        public virtual DbSet<TbldefTyingReasonPsichater> TbldefTyingReasonPsichaters { get; set; }
        public virtual DbSet<TbldefTyingResult> TbldefTyingResults { get; set; }
        public virtual DbSet<TbldefVaccintionComment> TbldefVaccintionComments { get; set; }
        public virtual DbSet<TbldefhtmlcntZarfati> TbldefhtmlcntZarfatis { get; set; }
        public virtual DbSet<TbldefparitmiunWeb> TbldefparitmiunWebs { get; set; }
        public virtual DbSet<TblhmoPriceList> TblhmoPriceLists { get; set; }
        public virtual DbSet<TblleaderWorker> TblleaderWorkers { get; set; }
        public virtual DbSet<TblmimsakimLog> TblmimsakimLogs { get; set; }
        public virtual DbSet<Tblmmm> Tblmmms { get; set; }
        public virtual DbSet<TblpritimWeb> TblpritimWebs { get; set; }
        public virtual DbSet<TblsmsDetali> TblsmsDetalis { get; set; }
        public virtual DbSet<Tbltemp3> Tbltemp3s { get; set; }
        public virtual DbSet<Tbltmp2> Tbltmp2s { get; set; }
        public virtual DbSet<TbltoDekel> TbltoDekels { get; set; }
        public virtual DbSet<TblvisitlistWeb> TblvisitlistWebs { get; set; }
        public virtual DbSet<TblyomanWeb> TblyomanWebs { get; set; }
        public virtual DbSet<TelemarketingClientDetails1> TelemarketingClientDetails1s { get; set; }
        public virtual DbSet<TelemarketingDoc> TelemarketingDocs { get; set; }
        public virtual DbSet<TempBm> TempBms { get; set; }
        public virtual DbSet<TempMedMbr1> TempMedMbr1s { get; set; }
        public virtual DbSet<TempMerge> TempMerges { get; set; }
        public virtual DbSet<TempParit> TempParits { get; set; }
        public virtual DbSet<TmpIshpuzByAge> TmpIshpuzByAges { get; set; }
        public virtual DbSet<TorimRecommendDetail> TorimRecommendDetails { get; set; }
        public virtual DbSet<Ttt> Ttts { get; set; }
        public virtual DbSet<VTblclienttnuot> VTblclienttnuots { get; set; }
        public virtual DbSet<VclientsTnuhot> VclientsTnuhots { get; set; }
        public virtual DbSet<View1> View1s { get; set; }
        public virtual DbSet<View2> View2s { get; set; }
        public virtual DbSet<View3> View3s { get; set; }
        public virtual DbSet<View4> View4s { get; set; }
        public virtual DbSet<View5> View5s { get; set; }
        public virtual DbSet<Word> Words { get; set; }
        public virtual DbSet<X4> X4s { get; set; }
        public virtual DbSet<Xml2017> Xml2017s { get; set; }
        public virtual DbSet<XmlMax> XmlMaxes { get; set; }
        public virtual DbSet<XmlTnu> XmlTnus { get; set; }
        public virtual DbSet<XmlTran> XmlTrans { get; set; }
        public virtual DbSet<Yair> Yairs { get; set; }
        public virtual DbSet<pr_RetDataToClientToShikumModel> pr_RetDataToClientToShikumModel { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Password=puzz@support;User ID=puzzlesupport;Initial Catalog=dbcompdemo;Data Source=192.168.85.6;Trust Server Certificate=True;Encrypt=False");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Hebrew_CI_AS");

            modelBuilder.Entity<pr_RetDataToClientToShikumModel>(entity => entity.HasNoKey());
            modelBuilder.Entity<AgafItemsAction>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AgafItemsAction");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Memo1).HasMaxLength(100);

                entity.Property(e => e.NTyp)
                    .HasMaxLength(50)
                    .HasColumnName("nTyp")
                    .IsFixedLength(true);

                entity.Property(e => e.ParitKod).HasMaxLength(30);

                entity.Property(e => e.RoomIdD).HasColumnName("RoomID_D");

                entity.Property(e => e.RoomIdS).HasColumnName("RoomID_S");

                entity.Property(e => e.Time1).HasMaxLength(50);
            });

            modelBuilder.Entity<Appointment>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaAppointments_PK")
                    .IsClustered(false);

                entity.HasIndex(e => e.Id, "Id")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.PalmId, "PalmId")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.RecurrenceId, "RecurrenceID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ShareId, "ShareID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActionPassed).HasDefaultValueSql("(0)");

                entity.Property(e => e.AppointAddress).HasMaxLength(50);

                entity.Property(e => e.AppointDate).HasColumnType("datetime");

                entity.Property(e => e.AppointPhone).HasMaxLength(12);

                entity.Property(e => e.AppointTheme).HasMaxLength(255);

                entity.Property(e => e.AppointWith).HasMaxLength(25);

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Complete).HasDefaultValueSql("(0)");

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.Frequency).HasDefaultValueSql("(0)");

                entity.Property(e => e.NColor)
                    .HasColumnName("nColor")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Old).HasDefaultValueSql("(0)");

                entity.Property(e => e.OptKind)
                    .HasColumnName("optKind")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Outlook).HasDefaultValueSql("(0)");

                entity.Property(e => e.PalmId)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לרשימה בפאלם");

                entity.Property(e => e.RecurrenceDay)
                    .HasDefaultValueSql("(0)")
                    .HasComment("יום בשבוע במקרה של פגישה מחזורית");

                entity.Property(e => e.RecurrenceEnd)
                    .HasMaxLength(11)
                    .HasComment("סוף  מחזריות");

                entity.Property(e => e.RecurrenceId)
                    .HasColumnName("RecurrenceID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לרשימות הקשורות לאותו מחזור");

                entity.Property(e => e.RecurrenceStart)
                    .HasMaxLength(11)
                    .HasComment("תחילת מחזריות");

                entity.Property(e => e.RecurrenceType)
                    .HasDefaultValueSql("(0)")
                    .HasComment("1-day 7-week 30-month");

                entity.Property(e => e.ReminderBefore).HasDefaultValueSql("(0)");

                entity.Property(e => e.ReminderOn)
                    .HasDefaultValueSql("(0)")
                    .HasComment("בודק אם כבר הושמעה תזכורת לזמן זה");

                entity.Property(e => e.ResponsibleId)
                    .HasColumnName("ResponsibleID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ShareId)
                    .HasColumnName("ShareID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("במקרה שמודבר ברשומה של שיתוף יומנים כולם מקבלים את אותו ערך");

                entity.Property(e => e.ShareStep).HasDefaultValueSql("((-1))");

                entity.Property(e => e.SoundPath)
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SynTime)
                    .HasColumnType("datetime")
                    .HasComment("מתי בוצע השינוי");

                entity.Property(e => e.Time1).HasMaxLength(10);

                entity.Property(e => e.Time2).HasMaxLength(10);

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UserIdcreate)
                    .HasColumnName("UserIDCreate")
                    .HasDefaultValueSql("(0)")
                    .HasComment("יוצר הרשומה שהוא גם מתאם הפעילות");

                entity.Property(e => e.UserIdreminder)
                    .HasColumnName("UserIDReminder")
                    .HasDefaultValueSql("(0)");

                entity.HasOne(d => d.Client)
                    .WithMany(p => p.Appointments)
                    .HasForeignKey(d => d.ClientId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("Appointments_FK00");
            });

            modelBuilder.Entity<BiAlert>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BI_Alerts");

                entity.Property(e => e.AlertComment).HasMaxLength(50);

                entity.Property(e => e.AlertDate).HasColumnType("datetime");

                entity.Property(e => e.AlertInform)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.AlertKind).HasComment("1=Emergency, 2=Life Cycle, 3=InterRAI Risks");

                entity.Property(e => e.AlertStatus)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.AlertTheme)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.PatientId).HasColumnName("PatientID");

                entity.Property(e => e.PatientName)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<BiEmergencyBed>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BI_Emergency_Beds");

                entity.Property(e => e.BedId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BedID");

                entity.Property(e => e.PatientName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RoomStatus)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BiEmergencyPatient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BI_Emergency_Patients");

                entity.Property(e => e.Age).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.ArrivalTime)
                    .HasColumnType("datetime")
                    .HasColumnName("Arrival_Time");

                entity.Property(e => e.EmergencyStatus)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Emergency_Status");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.PatientId).HasColumnName("PatientID");

                entity.Property(e => e.PatientName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sex)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Urgency)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BiSurgery>(entity =>
            {
                entity.ToTable("BI_Surgeries");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Insurance).HasMaxLength(50);

                entity.Property(e => e.PatientName).HasMaxLength(50);

                entity.Property(e => e.SurgeryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Surgery_Date");

                entity.Property(e => e.SurgeryDescription).HasColumnName("Surgery_Description");

                entity.Property(e => e.SurgerySpeciality)
                    .HasMaxLength(50)
                    .HasColumnName("Surgery_Speciality");

                entity.Property(e => e.SurgeryTime).HasColumnName("Surgery_Time");
            });

            modelBuilder.Entity<BiTheme>(entity =>
            {
                entity.ToTable("BI_Themes");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.FullPlaceMugan).HasColumnName("FullPlace_Mugan");

                entity.Property(e => e.FullPlaceSiudit).HasColumnName("FullPlace_Siudit");

                entity.Property(e => e.Key1).HasMaxLength(50);

                entity.Property(e => e.PotencialPlaceSiudit).HasColumnName("PotencialPlace_Siudit");

                entity.Property(e => e.PotentialPlaceMugan).HasColumnName("PotentialPlace_Mugan");

                entity.Property(e => e.Theme)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<BiVagaf>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BI_VAgafs");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.CompanyName).HasMaxLength(60);
            });

            modelBuilder.Entity<BiVal>(entity =>
            {
                entity.ToTable("BI_Vals");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LocId).HasColumnName("LocID");

                entity.Property(e => e.ThemeId).HasColumnName("ThemeID");
            });

            modelBuilder.Entity<BiVclientDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BI_VClientDetail");

                entity.Property(e => e.Archive).HasColumnName("archive");

                entity.Property(e => e.Gender)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.NameView).HasMaxLength(200);
            });

            modelBuilder.Entity<BiVdefTnout>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BI_VDefTnout");

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");

                entity.Property(e => e.TnuahName).HasMaxLength(50);
            });

            modelBuilder.Entity<BiVleaveKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BI_VLeaveKind");

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.LeaveKindName).HasMaxLength(255);
            });

            modelBuilder.Entity<BiVroom>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BI_VRooms");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.MahlakaName).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomName).HasMaxLength(30);
            });

            modelBuilder.Entity<BiVsponser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BI_VSponser");

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserName).HasMaxLength(50);
            });

            modelBuilder.Entity<BiVtifkudStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BI_VTifkudStatus");

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TifkudStatusName).HasMaxLength(50);
            });

            modelBuilder.Entity<Bitan>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Bitan");

                entity.Property(e => e.F100).HasMaxLength(255);

                entity.Property(e => e.F101).HasMaxLength(255);

                entity.Property(e => e.F12).HasColumnType("money");

                entity.Property(e => e.F16).HasColumnType("money");

                entity.Property(e => e.F29).HasMaxLength(255);

                entity.Property(e => e.F30).HasMaxLength(255);

                entity.Property(e => e.F31).HasMaxLength(255);

                entity.Property(e => e.F32).HasMaxLength(255);

                entity.Property(e => e.F33).HasMaxLength(255);

                entity.Property(e => e.F34).HasMaxLength(255);

                entity.Property(e => e.F35).HasMaxLength(255);

                entity.Property(e => e.F36).HasMaxLength(255);

                entity.Property(e => e.F37).HasMaxLength(255);

                entity.Property(e => e.F38).HasMaxLength(255);

                entity.Property(e => e.F39).HasMaxLength(255);

                entity.Property(e => e.F40).HasMaxLength(255);

                entity.Property(e => e.F41).HasMaxLength(255);

                entity.Property(e => e.F42).HasMaxLength(255);

                entity.Property(e => e.F43).HasMaxLength(255);

                entity.Property(e => e.F44).HasMaxLength(255);

                entity.Property(e => e.F45).HasMaxLength(255);

                entity.Property(e => e.F46).HasMaxLength(255);

                entity.Property(e => e.F47).HasMaxLength(255);

                entity.Property(e => e.F48).HasMaxLength(255);

                entity.Property(e => e.F49).HasMaxLength(255);

                entity.Property(e => e.F50).HasMaxLength(255);

                entity.Property(e => e.F51).HasMaxLength(255);

                entity.Property(e => e.F52).HasMaxLength(255);

                entity.Property(e => e.F53).HasMaxLength(255);

                entity.Property(e => e.F54).HasMaxLength(255);

                entity.Property(e => e.F55).HasMaxLength(255);

                entity.Property(e => e.F56).HasMaxLength(255);

                entity.Property(e => e.F57).HasMaxLength(255);

                entity.Property(e => e.F58).HasMaxLength(255);

                entity.Property(e => e.F59).HasMaxLength(255);

                entity.Property(e => e.F60).HasMaxLength(255);

                entity.Property(e => e.F61).HasMaxLength(255);

                entity.Property(e => e.F62).HasMaxLength(255);

                entity.Property(e => e.F63).HasMaxLength(255);

                entity.Property(e => e.F64).HasMaxLength(255);

                entity.Property(e => e.F65).HasMaxLength(255);

                entity.Property(e => e.F66).HasMaxLength(255);

                entity.Property(e => e.F67).HasMaxLength(255);

                entity.Property(e => e.F68).HasMaxLength(255);

                entity.Property(e => e.F69).HasMaxLength(255);

                entity.Property(e => e.F70).HasMaxLength(255);

                entity.Property(e => e.F71).HasMaxLength(255);

                entity.Property(e => e.F72).HasMaxLength(255);

                entity.Property(e => e.F73).HasMaxLength(255);

                entity.Property(e => e.F74).HasMaxLength(255);

                entity.Property(e => e.F75).HasMaxLength(255);

                entity.Property(e => e.F76).HasMaxLength(255);

                entity.Property(e => e.F77).HasMaxLength(255);

                entity.Property(e => e.F78).HasMaxLength(255);

                entity.Property(e => e.F79).HasMaxLength(255);

                entity.Property(e => e.F80).HasMaxLength(255);

                entity.Property(e => e.F81).HasMaxLength(255);

                entity.Property(e => e.F82).HasMaxLength(255);

                entity.Property(e => e.F83).HasMaxLength(255);

                entity.Property(e => e.F84).HasMaxLength(255);

                entity.Property(e => e.F85).HasMaxLength(255);

                entity.Property(e => e.F86).HasMaxLength(255);

                entity.Property(e => e.F87).HasMaxLength(255);

                entity.Property(e => e.F88).HasMaxLength(255);

                entity.Property(e => e.F89).HasMaxLength(255);

                entity.Property(e => e.F90).HasMaxLength(255);

                entity.Property(e => e.F91).HasMaxLength(255);

                entity.Property(e => e.F92).HasMaxLength(255);

                entity.Property(e => e.F93).HasMaxLength(255);

                entity.Property(e => e.F94).HasMaxLength(255);

                entity.Property(e => e.F95).HasMaxLength(255);

                entity.Property(e => e.F96).HasMaxLength(255);

                entity.Property(e => e.F97).HasMaxLength(255);

                entity.Property(e => e.F98).HasMaxLength(255);

                entity.Property(e => e.F99).HasMaxLength(255);

                entity.Property(e => e._111בשח)
                    .HasColumnType("money")
                    .HasColumnName("11#1 בש\"ח");

                entity.Property(e => e._112ב)
                    .HasColumnType("money")
                    .HasColumnName("11#2      $ב");

                entity.Property(e => e.אחזקהבשחלאכולל)
                    .HasColumnType("money")
                    .HasColumnName("אחזקה בש\"ח לא כולל");

                entity.Property(e => e.דאחזקהבלאכולל)
                    .HasColumnType("money")
                    .HasColumnName("ד#אחזקה ב$ לא כולל");

                entity.Property(e => e.דגם).HasMaxLength(255);

                entity.Property(e => e.דמיכניסה)
                    .HasColumnType("money")
                    .HasColumnName("דמי כניסה");

                entity.Property(e => e.הנחתארנונה).HasColumnName("הנחת ארנונה");

                entity.Property(e => e.הצמדה).HasMaxLength(255);

                entity.Property(e => e.הקצבתקוטש).HasColumnName("הקצבת קוט\"ש");

                entity.Property(e => e.ליסינגשכירות)
                    .HasColumnType("money")
                    .HasColumnName("ליסינג / שכירות");

                entity.Property(e => e.מדדבחוזה).HasColumnName("מדד בחוזה");

                entity.Property(e => e.מסדירה).HasColumnName("מס# דירה");

                entity.Property(e => e.מסחדרים).HasColumnName("מס# חדרים");

                entity.Property(e => e.מרלארנונה).HasColumnName("מ\"ר לארנונה");

                entity.Property(e => e.סעיף123124)
                    .HasColumnType("money")
                    .HasColumnName("סעיף 12#3/12#4");

                entity.Property(e => e.פקדון)
                    .HasColumnType("money")
                    .HasColumnName("פקדון $");

                entity.Property(e => e.פקדון1)
                    .HasColumnType("money")
                    .HasColumnName("פקדון ₪ ");

                entity.Property(e => e.שטח).HasColumnName("שטח ");

                entity.Property(e => e.שםהדייר)
                    .HasMaxLength(255)
                    .HasColumnName("שם הדייר");

                entity.Property(e => e.תאריךאכלוס)
                    .HasColumnType("datetime")
                    .HasColumnName("תאריך אכלוס");

                entity.Property(e => e.תאריךהחוזה)
                    .HasColumnType("datetime")
                    .HasColumnName("תאריך החוזה");

                entity.Property(e => e.תפוסהזוגית)
                    .HasColumnType("money")
                    .HasColumnName("תפוסה זוגית");

                entity.Property(e => e.תקופה).HasMaxLength(255);
            });

            modelBuilder.Entity<BusMedah>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaBusMedah_PK")
                    .IsClustered(false);

                entity.ToTable("BusMedah");

                entity.HasIndex(e => e.ClientId, "ClientID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Asmachta).HasMaxLength(15);

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Hatsmada)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מקושר לטבלה tblDefHatsmada");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.Medah).HasMaxLength(255);

                entity.Property(e => e.Medah2).HasMaxLength(300);

                entity.Property(e => e.MedahDate).HasColumnType("datetime");

                entity.Property(e => e.MedahDate2).HasColumnType("datetime");

                entity.Property(e => e.RoomName).HasMaxLength(50);

                entity.Property(e => e.Sum)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ThemeId)
                    .HasColumnName("ThemeID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<CheckAppointTime1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CheckAppointTime1");

                entity.Property(e => e.AppointDate).HasColumnType("datetime");

                entity.Property(e => e.AppointTheme).HasMaxLength(255);

                entity.Property(e => e.Time1).HasMaxLength(10);

                entity.Property(e => e.Time2).HasMaxLength(10);
            });

            modelBuilder.Entity<ClientDetail>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaClientDetails_PK")
                    .IsClustered(false);

                entity.HasIndex(e => e.LocationId, "ClientDetails_LocationID_inc_ID_NameView_Kind2ID_IDCard_Archive_MedicalGroupID_HospitalTransferID_UserProfileID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.LocationId, "LocationID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TnuahId, "TnuahID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.CurrentStatus, "cur")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "id")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.LocationId, "idx_ClientDetails_LocationID_ID_TnuahID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.LocationId, "idx_ClientDetails_LocationID_inc_ID_TnuahID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.MainKind, e.Archive }, "idx_ClientDetails_MainKind_Archive_inc_ID_NameView_Kind2ID_TnuahID_MedicalGroupID_HospitalTransferID_UserProfileID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "idx_ClientDetails_id")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Account).HasMaxLength(20);

                entity.Property(e => e.AliaYear)
                    .HasMaxLength(4)
                    .HasComment("תאריך עליה");

                entity.Property(e => e.Archive).HasDefaultValueSql("((0))");

                entity.Property(e => e.ArmyId)
                    .HasMaxLength(12)
                    .HasColumnName("ArmyID");

                entity.Property(e => e.ArmyLevel).HasMaxLength(12);

                entity.Property(e => e.ArnonaPerDiscount)
                    .HasDefaultValueSql("((0))")
                    .HasComment("% הנחה");

                entity.Property(e => e.ArnonaProperties)
                    .HasMaxLength(50)
                    .HasComment("קישור לסעיף ארנונה");

                entity.Property(e => e.AtdId).HasColumnName("AtdID");

                entity.Property(e => e.AutoMirsham)
                    .HasDefaultValueSql("((0))")
                    .HasComment("האם הדייר מקבל מירשם אוטומטי");

                entity.Property(e => e.AverageLateness).HasComment("מס' ימים של איחור ממוצע בתשלומים");

                entity.Property(e => e.B2bCity)
                    .HasMaxLength(100)
                    .HasColumnName("b2bCity");

                entity.Property(e => e.BArchiveGroup)
                    .HasColumnName("bArchiveGroup")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BBlockedUser).HasColumnName("bBlockedUser");

                entity.Property(e => e.BCompany)
                    .HasColumnName("bCompany")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BPassport).HasColumnName("bPassport");

                entity.Property(e => e.BSakeret)
                    .HasColumnName("bSakeret")
                    .HasDefaultValueSql("((0))")
                    .HasComment("האם הדייר חולה סכרת");

                entity.Property(e => e.BYoman).HasColumnName("bYoman");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BedNum)
                    .HasDefaultValueSql("((0))")
                    .HasComment("זיהוי המיטה בחדר");

                entity.Property(e => e.BirthCountryId)
                    .HasColumnName("BirthCountryID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("ארץ לידה");

                entity.Property(e => e.Birthday)
                    .HasColumnType("datetime")
                    .HasComment("תאריך לידה");

                entity.Property(e => e.BituahId)
                    .HasColumnName("BituahID")
                    .HasComment("שם וסוג הביטוח הרפואי");

                entity.Property(e => e.BmwebKupa)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebKupa");

                entity.Property(e => e.BmwebPassword)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebPassword");

                entity.Property(e => e.BmwebUserName)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebUserName");

                entity.Property(e => e.CarDetails)
                    .HasMaxLength(50)
                    .HasComment("סוג רכב ונתונים נוספים");

                entity.Property(e => e.CarNum).HasMaxLength(15);

                entity.Property(e => e.CardDate).HasMaxLength(10);

                entity.Property(e => e.CardKindId)
                    .HasColumnName("CardKindID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CardNum).HasMaxLength(50);

                entity.Property(e => e.Childs)
                    .HasDefaultValueSql("((0))")
                    .HasComment("מס' הילדים");

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CityId)
                    .HasColumnName("CityID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientKod2).HasMaxLength(30);

                entity.Property(e => e.Collectbymiun).HasDefaultValueSql("((0))");

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.CurrentStatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter)
                    .HasColumnType("datetime")
                    .HasComment("התאריך הקובע ע\"פ חוזה");

                entity.Property(e => e.DateNikuyMakor)
                    .HasColumnType("datetime")
                    .HasComment("ניכוי במקור בתוקף עד");

                entity.Property(e => e.DayarPhone)
                    .HasMaxLength(10)
                    .HasComment("מס' הטלפון בדירת הדייר");

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.EducationF).HasDefaultValueSql("('')");

                entity.Property(e => e.ElectricityCredit)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ElectricityCreditPrice)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.EmailInbox).HasMaxLength(50);

                entity.Property(e => e.EmailSent).HasMaxLength(50);

                entity.Property(e => e.EnglishName)
                    .HasMaxLength(30)
                    .HasComment("השם הלועזי");

                entity.Property(e => e.ExitForecast).HasColumnType("datetime");

                entity.Property(e => e.Ext)
                    .HasMaxLength(4)
                    .HasComment("מס' שלוחה מצורף לטל' עבודה");

                entity.Property(e => e.FamilyStatus)
                    .HasDefaultValueSql("((0))")
                    .HasComment("0=ללא שיוך,    1-נשוי/אה, 2-רווק/ה, 3-גרוש/ה, 4-אלמנ/ה");

                entity.Property(e => e.FatherName)
                    .HasMaxLength(25)
                    .HasComment("שם האב");

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.FnameEng)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Gender)
                    .HasDefaultValueSql("((0))")
                    .HasComment("0=ללא שיוך,1=זכר,2=נקבה");

                entity.Property(e => e.GoremMafneId)
                    .HasColumnName("GoremMafneID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GroupKod)
                    .HasDefaultValueSql("((0))")
                    .HasComment("שיוך לקוד קבוצה: לקוחות ,ספקים וכו'");

                entity.Property(e => e.GuardianField).HasMaxLength(20);

                entity.Property(e => e.GuardianName).HasMaxLength(20);

                entity.Property(e => e.HachnasaFolder).HasComment("תיק מס הכנסה");

                entity.Property(e => e.Harshah)
                    .HasMaxLength(254)
                    .HasComment("נתוני ההרשאה מחולקים עם ;");

                entity.Property(e => e.HarshahManager)
                    .HasDefaultValueSql("((0))")
                    .HasComment("הרשאת מנהל-על");

                entity.Property(e => e.HeshCollectSame).HasDefaultValueSql("((0))");

                entity.Property(e => e.HeshCollectbymiun).HasDefaultValueSql("((0))");

                entity.Property(e => e.Hospital).HasMaxLength(50);

                entity.Property(e => e.HospitalTransferId).HasColumnName("HospitalTransferID");

                entity.Property(e => e.IdCardImage).HasMaxLength(100);

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum)
                    .HasColumnName("IDNum")
                    .HasDefaultValueSql("((0))")
                    .HasComment("מס' מזהה לכרטיס הדייר/ספק/עובד");

                entity.Property(e => e.Interkum)
                    .HasDefaultValueSql("((0))")
                    .HasComment("מס' אינטרקום פנימי לחדר הדייר");

                entity.Property(e => e.IsContactMenShared).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsMabar)
                    .HasDefaultValueSql("((0))")
                    .HasComment("האם זהו דייר מתוקצב ממשרד הבריאות");

                entity.Property(e => e.IsMasav)
                    .HasDefaultValueSql("((0))")
                    .HasComment("האם הדייר מחוייב באמצעות מס\"ב?");

                entity.Property(e => e.IsShotefPay)
                    .HasColumnName("isShotefPay")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IsUser)
                    .HasDefaultValueSql("((0))")
                    .HasComment("האם עובד זה הוא משתמש");

                entity.Property(e => e.JobId)
                    .HasColumnName("JobID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.KabalaDate)
                    .HasColumnType("datetime")
                    .HasComment("תאריך כניסה ראשונה (קבלת הדייר למחלקה)");

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kind2Id).HasColumnName("Kind2ID");

                entity.Property(e => e.Kod)
                    .HasMaxLength(20)
                    .HasComment("קוד החשבון עבור הנה\"ח");

                entity.Property(e => e.KodHilut).HasMaxLength(12);

                entity.Property(e => e.KupaDoctor).HasMaxLength(25);

                entity.Property(e => e.KupaId)
                    .HasColumnName("KupaID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("קופת החולים");

                entity.Property(e => e.KupaSnif)
                    .HasMaxLength(300)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.KupaSnifId)
                    .HasColumnName("KupaSnifID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("סניף הקופה");

                entity.Property(e => e.Kvura)
                    .HasMaxLength(30)
                    .HasColumnName("kvura")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.LanguageId)
                    .HasColumnName("LanguageID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("מס' מזהה לשפה מטבלת tblDefLanguages");

                entity.Property(e => e.Languages).HasMaxLength(254);

                entity.Property(e => e.LastUpdatePassword).HasColumnType("datetime");

                entity.Property(e => e.LicenseId).HasMaxLength(50);

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LnameEng)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Maham)
                    .HasDefaultValueSql("((0))")
                    .HasComment("האם החשבון פטור  ממע\"מ");

                entity.Property(e => e.MailBox).HasMaxLength(20);

                entity.Property(e => e.MailToHesh)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MainContactManId)
                    .HasColumnName("MainContactManID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("איש קשר עיקרי");

                entity.Property(e => e.MainKind)
                    .HasDefaultValueSql("((0))")
                    .HasComment("0- כרטיס הנה\"ח, 1- צוות העסק,2- לקוחות,3-ספקים");

                entity.Property(e => e.MarketingSponserId).HasColumnName("MarketingSponserID");

                entity.Property(e => e.MarketingTifkudStatusId).HasColumnName("MarketingTifkudStatusID");

                entity.Property(e => e.MasavDay).HasDefaultValueSql("((0))");

                entity.Property(e => e.MasavIdCard).HasDefaultValueSql("((0))");

                entity.Property(e => e.MaxAshray)
                    .HasColumnType("money")
                    .HasComment("מקסימום אשראי");

                entity.Property(e => e.Meaaged).HasMaxLength(50);

                entity.Property(e => e.MedMemo).HasMaxLength(300);

                entity.Property(e => e.MedProp).HasMaxLength(300);

                entity.Property(e => e.MedicalGroupId)
                    .HasColumnName("MedicalGroupID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MotherName).HasMaxLength(15);

                entity.Property(e => e.MyListUsers)
                    .HasMaxLength(254)
                    .HasComment("קוד המשתמשים ששייכו גורם זה לרשימה שלי");

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NimanAddress)
                    .HasMaxLength(100)
                    .HasComment("כתובת מלאה");

                entity.Property(e => e.NimanName)
                    .HasMaxLength(50)
                    .HasComment("שם הנמען");

                entity.Property(e => e.NotCharged)
                    .HasDefaultValueSql("((0))")
                    .HasComment("דייר זה אין לחייב (מחויב דרך דייר אחר)");

                entity.Property(e => e.OptNiman)
                    .HasColumnName("optNiman")
                    .HasDefaultValueSql("((0))")
                    .HasComment("נמען למכתבים וחשבון, 0- הדייר עצמו, 1-איש הקשר העיקרי");

                entity.Property(e => e.OsekId)
                    .HasMaxLength(50)
                    .HasColumnName("OsekID");

                entity.Property(e => e.Password).HasMaxLength(20);

                entity.Property(e => e.PayLimitId)
                    .HasColumnName("PayLimitID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("תנאי תשלום");

                entity.Property(e => e.PerNikuyMakor).HasComment("% ניכוי מס במקור");

                entity.Property(e => e.PersonImage).HasMaxLength(100);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.Phone4).HasMaxLength(30);

                entity.Property(e => e.PriceBack)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PriceEnter)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrioId)
                    .IsRequired()
                    .HasColumnName("prioID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PrioId2)
                    .IsRequired()
                    .HasColumnName("prioId2")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Properties)
                    .HasColumnType("ntext")
                    .HasComment("מאפייני דייר");

                entity.Property(e => e.RelatedClient)
                    .HasDefaultValueSql("((0))")
                    .HasComment("קישור לבן/בת זוג");

                entity.Property(e => e.RelatedName).HasMaxLength(25);

                entity.Property(e => e.RelatedNameBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedNameBCountry");

                entity.Property(e => e.RelatedNameBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedNameBDay");

                entity.Property(e => e.RelatedNameIdcard)
                    .HasMaxLength(14)
                    .HasColumnName("RelatedNameIDCard");

                entity.Property(e => e.RelatedNameWorkJob).HasMaxLength(20);

                entity.Property(e => e.ReligionId).HasColumnName("ReligionID");

                entity.Property(e => e.ResponsibleId).HasColumnName("responsibleID");

                entity.Property(e => e.RoomId)
                    .HasColumnName("RoomID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("מזהה לטבלה tblRooms");

                entity.Property(e => e.ShotefDays).HasDefaultValueSql("((0))");

                entity.Property(e => e.SidurPtira)
                    .HasMaxLength(254)
                    .HasComment("סידורי פטירה אצל");

                entity.Property(e => e.Snif).HasMaxLength(50);

                entity.Property(e => e.SochenId)
                    .HasColumnName("SochenID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserKod)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TnuahId)
                    .HasColumnName("TnuahID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("ה-ID של התנועה האחרונה של הדייר מטבלת tblClientTnuot");

                entity.Property(e => e.ToaarId)
                    .HasColumnName("ToaarID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TransferalAddings).HasMaxLength(200);

                entity.Property(e => e.TransferalComments).HasColumnType("ntext");

                entity.Property(e => e.Tsavah)
                    .HasMaxLength(254)
                    .HasComment("צוואה אצל");

                entity.Property(e => e.TypeHeshCollectBy).HasColumnName("typeHeshCollectBy");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UserPassport).HasMaxLength(25);

                entity.Property(e => e.UserProfileId)
                    .HasColumnName("UserProfileID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.WaterCredit)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.WaterCreditPrice)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.WebSite).HasMaxLength(100);

                entity.Property(e => e.WorkerHourPrice).HasColumnType("money");

                entity.Property(e => e.WorkerJobEnd).HasColumnType("datetime");

                entity.Property(e => e.WorkerJobPer)
                    .HasDefaultValueSql("((0))")
                    .HasComment("% משרה");

                entity.Property(e => e.WorkerJobStart)
                    .HasColumnType("datetime")
                    .HasComment("תאריך התחלה");

                entity.Property(e => e.WorkerNesiotPrice).HasColumnType("money");

                entity.Property(e => e.WorkerRoomId)
                    .HasMaxLength(300)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.WorkerRoomJobId)
                    .HasMaxLength(300)
                    .HasColumnName("WorkerRoomJobID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.WorkerUserName).HasMaxLength(50);

                entity.Property(e => e.WriteLastDate).HasColumnType("datetime");

                entity.Property(e => e.YearsOfEducation).HasMaxLength(2);

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<ClientDetailShort>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("clientDetailShort");

                entity.Property(e => e.DateEnter).HasColumnType("datetime");

                entity.Property(e => e.DateIshpuz).HasColumnType("datetime");

                entity.Property(e => e.DateMahlaka).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Locationid).HasColumnName("locationid");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.Nameview)
                    .HasMaxLength(200)
                    .HasColumnName("nameview");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);
            });

            modelBuilder.Entity<ClientDetails1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("clientDetails1");

                entity.Property(e => e.Account).HasMaxLength(20);

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.Age2).HasMaxLength(75);

                entity.Property(e => e.AliaYear).HasMaxLength(4);

                entity.Property(e => e.ArmyId)
                    .HasMaxLength(12)
                    .HasColumnName("ArmyID");

                entity.Property(e => e.ArmyLevel).HasMaxLength(12);

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.AtdId).HasColumnName("AtdID");

                entity.Property(e => e.BCompany).HasColumnName("bCompany");

                entity.Property(e => e.BPassport).HasColumnName("bPassport");

                entity.Property(e => e.Bank).HasMaxLength(50);

                entity.Property(e => e.BankId).HasColumnName("BankID");

                entity.Property(e => e.BedName)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.BirthCountry).HasMaxLength(30);

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.Bituah).HasMaxLength(50);

                entity.Property(e => e.BmwebKupa)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebKupa");

                entity.Property(e => e.BmwebPassword)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebPassword");

                entity.Property(e => e.BmwebUserName)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebUserName");

                entity.Property(e => e.CarDetails).HasMaxLength(50);

                entity.Property(e => e.CarDetailsZug).HasMaxLength(103);

                entity.Property(e => e.CarNum).HasMaxLength(15);

                entity.Property(e => e.CarNumZug).HasMaxLength(33);

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CityId).HasColumnName("CityID");

                entity.Property(e => e.ClientKod2).HasMaxLength(30);

                entity.Property(e => e.ClientsiudyNew)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.CurrentStatus)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DateAsk).HasColumnType("datetime");

                entity.Property(e => e.DateExitHosp).HasMaxLength(30);

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.DateGetCode).HasColumnType("datetime");

                entity.Property(e => e.DateLeave).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarHtml).HasMaxLength(219);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.ElectricityCredit)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.EnglishName).HasMaxLength(30);

                entity.Property(e => e.ExitForecast).HasColumnType("datetime");

                entity.Property(e => e.FamilyStatus).HasMaxLength(50);

                entity.Property(e => e.FatherName).HasMaxLength(25);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.Fnameeng)
                    .IsRequired()
                    .HasColumnName("FNAMEENG");

                entity.Property(e => e.FullAddress)
                    .IsRequired()
                    .HasMaxLength(233);

                entity.Property(e => e.Gender)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.GoremMafne).HasMaxLength(50);

                entity.Property(e => e.GoremMafneId).HasColumnName("GoremMafneID");

                entity.Property(e => e.HarshahManager)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Hospital).HasMaxLength(50);

                entity.Property(e => e.HospitalTransfer).HasMaxLength(100);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.Insulation)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("insulation");

                entity.Property(e => e.Job).HasMaxLength(30);

                entity.Property(e => e.KabalaDate).HasColumnType("datetime");

                entity.Property(e => e.Kind1).HasMaxLength(50);

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kind2).HasMaxLength(25);

                entity.Property(e => e.Kind2Id).HasColumnName("Kind2ID");

                entity.Property(e => e.Kod).HasMaxLength(20);

                entity.Property(e => e.KodHilut).HasMaxLength(12);

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.KupaDoctor)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.KupaHeb)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("Kupa_Heb");

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.KupaSnif).HasMaxLength(300);

                entity.Property(e => e.KupaSnifId).HasColumnName("KupaSnifID");

                entity.Property(e => e.Lang).HasMaxLength(30);

                entity.Property(e => e.Languages).HasMaxLength(254);

                entity.Property(e => e.LastTnuah).HasMaxLength(50);

                entity.Property(e => e.LastTnuahDate).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahDate2).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahId).HasColumnName("LastTnuahID");

                entity.Property(e => e.LeaveKindDesc).HasMaxLength(255);

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.LicenseId).HasMaxLength(50);

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.Lnameeng)
                    .IsRequired()
                    .HasColumnName("LNAMEENG");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaHeb)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("Mahlaka_Heb");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahlakaKindId).HasColumnName("MahlakaKindID");

                entity.Property(e => e.MahozName)
                    .HasMaxLength(70)
                    .HasColumnName("mahozName");

                entity.Property(e => e.MailBox).HasMaxLength(20);

                entity.Property(e => e.MarketingAgaf).HasMaxLength(100);

                entity.Property(e => e.MarketingRoom).HasMaxLength(30);

                entity.Property(e => e.MarketingTifkudStatus).HasMaxLength(50);

                entity.Property(e => e.MarketingTifkudStatusId).HasColumnName("MarketingTifkudStatusID");

                entity.Property(e => e.Meaaged).HasMaxLength(50);

                entity.Property(e => e.MedMemo).HasMaxLength(300);

                entity.Property(e => e.MedProp).HasMaxLength(300);

                entity.Property(e => e.MedadimHtml)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalGroup).HasMaxLength(50);

                entity.Property(e => e.Mothername).HasMaxLength(15);

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NameViewZug).HasMaxLength(402);

                entity.Property(e => e.NameViewZug2).HasMaxLength(402);

                entity.Property(e => e.NameviewContactMen).HasMaxLength(101);

                entity.Property(e => e.NameviewHeb)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("nameview_Heb");

                entity.Property(e => e.NimanAddress).HasMaxLength(100);

                entity.Property(e => e.NimanName).HasMaxLength(50);

                entity.Property(e => e.OptNiman).HasColumnName("optNiman");

                entity.Property(e => e.OsekId)
                    .HasMaxLength(50)
                    .HasColumnName("OsekID");

                entity.Property(e => e.Password).HasMaxLength(20);

                entity.Property(e => e.PersonImage).HasMaxLength(100);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone1ContactMen).HasMaxLength(20);

                entity.Property(e => e.Phone1Zug).HasMaxLength(43);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.PlaceHtml)
                    .HasMaxLength(84)
                    .HasColumnName("PlaceHTML");

                entity.Property(e => e.PriceBack).HasColumnType("money");

                entity.Property(e => e.PriceEnter).HasColumnType("money");

                entity.Property(e => e.Profile1).HasMaxLength(50);

                entity.Property(e => e.Properties).HasColumnType("ntext");

                entity.Property(e => e.RelatedName).HasMaxLength(25);

                entity.Property(e => e.RelatedNameBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedNameBCountry");

                entity.Property(e => e.RelatedNameBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedNameBDay");

                entity.Property(e => e.RelatedNameIdcard)
                    .HasMaxLength(14)
                    .HasColumnName("RelatedNameIDCard");

                entity.Property(e => e.RelatedNameView).HasMaxLength(200);

                entity.Property(e => e.RelatedNameWorkJob).HasMaxLength(20);

                entity.Property(e => e.RelatedWorkerBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedWorkerBCountry");

                entity.Property(e => e.RelatedWorkerBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedWorkerBDay");

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.Snif).HasMaxLength(50);

                entity.Property(e => e.Sochen).HasMaxLength(200);

                entity.Property(e => e.SochenId).HasColumnName("SochenID");

                entity.Property(e => e.Sponser).HasMaxLength(50);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold).HasColumnName("SponserIDOld");

                entity.Property(e => e.SponserService)
                    .HasMaxLength(50)
                    .HasColumnName("sponserService");

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TnuahDetails).HasMaxLength(255);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");

                entity.Property(e => e.Toaar).HasMaxLength(15);

                entity.Property(e => e.UserCreateContact).HasMaxLength(200);

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserPassport).HasMaxLength(25);

                entity.Property(e => e.WorkerJobEnd).HasColumnType("datetime");

                entity.Property(e => e.WorkerJobStart).HasColumnType("datetime");

                entity.Property(e => e.WorkerUserName).HasMaxLength(50);

                entity.Property(e => e.YearsOfEducation).HasMaxLength(2);

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<ClientDetails2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("clientDetails2");

                entity.Property(e => e.Account).HasMaxLength(20);

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.AliaYear).HasMaxLength(4);

                entity.Property(e => e.ArmyId)
                    .HasMaxLength(12)
                    .HasColumnName("ArmyID");

                entity.Property(e => e.ArmyLevel).HasMaxLength(12);

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.Bank).HasMaxLength(50);

                entity.Property(e => e.BankId).HasColumnName("BankID");

                entity.Property(e => e.BirthCountry).HasMaxLength(30);

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.Bituah).HasMaxLength(50);

                entity.Property(e => e.BmwebKupa)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebKupa");

                entity.Property(e => e.BmwebPassword)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebPassword");

                entity.Property(e => e.BmwebUserName)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebUserName");

                entity.Property(e => e.CarDetails).HasMaxLength(50);

                entity.Property(e => e.CarDetailsZug).HasMaxLength(103);

                entity.Property(e => e.CarNum).HasMaxLength(15);

                entity.Property(e => e.CarNumZug).HasMaxLength(33);

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CityId).HasColumnName("CityID");

                entity.Property(e => e.ClientsiudyNew)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.CurrentStatus).HasMaxLength(10);

                entity.Property(e => e.DateAsk).HasColumnType("datetime");

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarHtml).HasMaxLength(219);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.EnglishName).HasMaxLength(30);

                entity.Property(e => e.FamilyStatus).HasMaxLength(50);

                entity.Property(e => e.FatherName).HasMaxLength(25);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.Gender)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.GoremMafne).HasMaxLength(50);

                entity.Property(e => e.GoremMafneId).HasColumnName("GoremMafneID");

                entity.Property(e => e.Hospital).HasMaxLength(50);

                entity.Property(e => e.HospitalTransfer)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.Job).HasMaxLength(30);

                entity.Property(e => e.KabalaDate).HasColumnType("datetime");

                entity.Property(e => e.Kind1).HasMaxLength(50);

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kind2).HasMaxLength(25);

                entity.Property(e => e.Kind2Id).HasColumnName("Kind2ID");

                entity.Property(e => e.Kod).HasMaxLength(20);

                entity.Property(e => e.KodHilut).HasMaxLength(12);

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.KupaSnif).HasMaxLength(300);

                entity.Property(e => e.KupaSnifId).HasColumnName("KupaSnifID");

                entity.Property(e => e.Lang).HasMaxLength(30);

                entity.Property(e => e.Languages).HasMaxLength(254);

                entity.Property(e => e.LastTnuah).HasMaxLength(50);

                entity.Property(e => e.LastTnuahDate).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahDate2).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahId).HasColumnName("LastTnuahID");

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahlakaKindId).HasColumnName("MahlakaKindID");

                entity.Property(e => e.MahozName)
                    .HasMaxLength(70)
                    .HasColumnName("mahozName");

                entity.Property(e => e.MailBox).HasMaxLength(20);

                entity.Property(e => e.MarketingAgaf).HasMaxLength(100);

                entity.Property(e => e.MarketingRoom).HasMaxLength(30);

                entity.Property(e => e.MarketingTifkudStatus).HasMaxLength(50);

                entity.Property(e => e.MarketingTifkudStatusId).HasColumnName("MarketingTifkudStatusID");

                entity.Property(e => e.Meaaged).HasMaxLength(50);

                entity.Property(e => e.MedMemo).HasMaxLength(300);

                entity.Property(e => e.MedProp).HasMaxLength(300);

                entity.Property(e => e.MedadimHtml)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalGroup).HasMaxLength(50);

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NameViewZug).HasMaxLength(402);

                entity.Property(e => e.NimanAddress).HasMaxLength(100);

                entity.Property(e => e.NimanName).HasMaxLength(30);

                entity.Property(e => e.OptNiman).HasColumnName("optNiman");

                entity.Property(e => e.OsekId)
                    .HasMaxLength(50)
                    .HasColumnName("OsekID");

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone1Zug).HasMaxLength(43);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.PlaceHtml)
                    .HasMaxLength(84)
                    .HasColumnName("PlaceHTML");

                entity.Property(e => e.PriceBack).HasColumnType("money");

                entity.Property(e => e.PriceEnter).HasColumnType("money");

                entity.Property(e => e.Profile1).HasMaxLength(50);

                entity.Property(e => e.Properties).HasColumnType("ntext");

                entity.Property(e => e.RelatedName).HasMaxLength(25);

                entity.Property(e => e.RelatedNameBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedNameBCountry");

                entity.Property(e => e.RelatedNameBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedNameBDay");

                entity.Property(e => e.RelatedNameIdcard)
                    .HasMaxLength(14)
                    .HasColumnName("RelatedNameIDCard");

                entity.Property(e => e.RelatedNameWorkJob).HasMaxLength(20);

                entity.Property(e => e.RelatedWorkerBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedWorkerBCountry");

                entity.Property(e => e.RelatedWorkerBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedWorkerBDay");

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.Snif).HasMaxLength(50);

                entity.Property(e => e.Sochen).HasMaxLength(200);

                entity.Property(e => e.SochenId).HasColumnName("SochenID");

                entity.Property(e => e.Sponser).HasMaxLength(50);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold).HasColumnName("SponserIDOld");

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TbClientsiudyNew)
                    .HasMaxLength(4000)
                    .HasColumnName("tb_ClientsiudyNew");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TnuahDetails).HasMaxLength(255);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");

                entity.Property(e => e.Toaar).HasMaxLength(15);

                entity.Property(e => e.TtMedadimHtml)
                    .HasMaxLength(1000)
                    .HasColumnName("tt_MedadimHtml");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserPassport).HasMaxLength(25);

                entity.Property(e => e.WorkerJobEnd).HasColumnType("datetime");

                entity.Property(e => e.WorkerJobStart).HasColumnType("datetime");

                entity.Property(e => e.WorkerUserName).HasMaxLength(50);

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<ClientDetailsDoctor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ClientDetailsDoctor");

                entity.Property(e => e.Bactbact)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("bactbact");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarHtml).HasMaxLength(219);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Diabetes)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("diabetes");

                entity.Property(e => e.Dilution)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("dilution");

                entity.Property(e => e.Dnr)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DNR");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.LastDocReport).HasMaxLength(10);

                entity.Property(e => e.LastTnuahDate).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahDate2).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahId).HasColumnName("LastTnuahID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.Mainkind).HasColumnName("mainkind");

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.PlaceHtml)
                    .HasMaxLength(84)
                    .HasColumnName("PlaceHTML");

                entity.Property(e => e.Pounding)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("pounding");

                entity.Property(e => e.Sos)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SOS");

                entity.Property(e => e.TbClientsiudyNew)
                    .HasMaxLength(4000)
                    .HasColumnName("tb_ClientsiudyNew");

                entity.Property(e => e.TbLastDocReport)
                    .HasMaxLength(4000)
                    .HasColumnName("tb_LastDocReport");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TtMedadimHtml)
                    .HasMaxLength(1000)
                    .HasColumnName("tt_MedadimHtml");

                entity.Property(e => e.TtSos)
                    .HasMaxLength(4000)
                    .HasColumnName("tt_SOS");
            });

            modelBuilder.Entity<ClientDetailsDoctor2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ClientDetailsDoctor2");

                entity.Property(e => e.Account).HasMaxLength(20);

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.Bactbact)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("bactbact");

                entity.Property(e => e.Bank).HasMaxLength(50);

                entity.Property(e => e.BankId).HasColumnName("BankID");

                entity.Property(e => e.BirthCountry).HasMaxLength(30);

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.CarDetails).HasMaxLength(50);

                entity.Property(e => e.CarDetailsZug).HasMaxLength(103);

                entity.Property(e => e.CarNumZug).HasMaxLength(33);

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CityId).HasColumnName("CityID");

                entity.Property(e => e.ClientsiudyNew)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.CurrentStatus).HasMaxLength(10);

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarHtml).HasMaxLength(219);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.Diabetes)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("diabetes");

                entity.Property(e => e.Dilution)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("dilution");

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.EnglishName).HasMaxLength(30);

                entity.Property(e => e.FamilyStatus).HasMaxLength(4000);

                entity.Property(e => e.FatherName).HasMaxLength(25);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.Gender)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.GoremMafne).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.Job).HasMaxLength(30);

                entity.Property(e => e.KabalaDate).HasColumnType("datetime");

                entity.Property(e => e.Kind1).HasMaxLength(50);

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kind2).HasMaxLength(25);

                entity.Property(e => e.Kind2Id).HasColumnName("Kind2ID");

                entity.Property(e => e.Kod).HasMaxLength(20);

                entity.Property(e => e.KodHilut).HasMaxLength(12);

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.KupaSnifId).HasColumnName("KupaSnifID");

                entity.Property(e => e.Languages).HasMaxLength(254);

                entity.Property(e => e.LastDocReport).HasMaxLength(10);

                entity.Property(e => e.LastTnuah).HasMaxLength(50);

                entity.Property(e => e.LastTnuahDate).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahDate2).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahId).HasColumnName("LastTnuahID");

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahozName)
                    .HasMaxLength(70)
                    .HasColumnName("mahozName");

                entity.Property(e => e.MailBox).HasMaxLength(20);

                entity.Property(e => e.MarketingAgaf).HasMaxLength(100);

                entity.Property(e => e.MarketingRoom).HasMaxLength(30);

                entity.Property(e => e.MedMemo).HasMaxLength(300);

                entity.Property(e => e.MedProp).HasMaxLength(300);

                entity.Property(e => e.MedadimHtml)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NameViewZug).HasMaxLength(402);

                entity.Property(e => e.NimanAddress).HasMaxLength(100);

                entity.Property(e => e.NimanName).HasMaxLength(30);

                entity.Property(e => e.OptNiman).HasColumnName("optNiman");

                entity.Property(e => e.Pain).HasMaxLength(4000);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone1Zug).HasMaxLength(43);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.PlaceHtml)
                    .HasMaxLength(84)
                    .HasColumnName("PlaceHTML");

                entity.Property(e => e.PriceBack).HasColumnType("money");

                entity.Property(e => e.PriceEnter).HasColumnType("money");

                entity.Property(e => e.Properties).HasColumnType("ntext");

                entity.Property(e => e.RelatedNameBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedNameBCountry");

                entity.Property(e => e.RelatedNameBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedNameBDay");

                entity.Property(e => e.RelatedNameIdcard)
                    .HasMaxLength(14)
                    .HasColumnName("RelatedNameIDCard");

                entity.Property(e => e.RelatedNameWorkJob).HasMaxLength(20);

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.Snif).HasMaxLength(50);

                entity.Property(e => e.Sochen).HasMaxLength(200);

                entity.Property(e => e.SochenId).HasColumnName("SochenID");

                entity.Property(e => e.Sos)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SOS");

                entity.Property(e => e.Sponser).HasMaxLength(50);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TbClientsiudyNew)
                    .HasMaxLength(4000)
                    .HasColumnName("tb_ClientsiudyNew");

                entity.Property(e => e.TbLastDocReport)
                    .HasMaxLength(4000)
                    .HasColumnName("tb_LastDocReport");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TnuahDetails).HasMaxLength(255);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");

                entity.Property(e => e.Toaar).HasMaxLength(15);

                entity.Property(e => e.TtMedadimHtml)
                    .HasMaxLength(1000)
                    .HasColumnName("tt_MedadimHtml");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<ClientDetailsDoctor3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ClientDetailsDoctor3");

                entity.Property(e => e.Bactbact)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("bactbact");

                entity.Property(e => e.ClientsiudyNew)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarHtml).HasMaxLength(219);

                entity.Property(e => e.Diabetes)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("diabetes");

                entity.Property(e => e.Dilution)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("dilution");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("idcard");

                entity.Property(e => e.LastDocReport).HasMaxLength(10);

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.Mainkind).HasColumnName("mainkind");

                entity.Property(e => e.MedadimHtml)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.Nameview)
                    .HasMaxLength(200)
                    .HasColumnName("nameview");

                entity.Property(e => e.Pain).HasMaxLength(4000);

                entity.Property(e => e.PlaceHtml)
                    .HasMaxLength(84)
                    .HasColumnName("PlaceHTML");

                entity.Property(e => e.Sos)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SOS");

                entity.Property(e => e.TbClientsiudyNew)
                    .HasMaxLength(4000)
                    .HasColumnName("TB_ClientsiudyNew");

                entity.Property(e => e.TbLastDocReport)
                    .HasMaxLength(4000)
                    .HasColumnName("tb_LastDocReport");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TtMedadimHtml)
                    .HasMaxLength(1000)
                    .HasColumnName("TT_MedadimHtml");

                entity.Property(e => e.TtSos)
                    .HasMaxLength(4000)
                    .HasColumnName("tt_SOS");
            });

            modelBuilder.Entity<ClientDetailsDoctorR>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ClientDetailsDoctorR");

                entity.Property(e => e.Bactbact)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("bactbact");

                entity.Property(e => e.ClientsiudyNew).HasMaxLength(69);

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarHtml).HasMaxLength(219);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Diabetes)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("diabetes");

                entity.Property(e => e.Dilution)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("dilution");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.LastDocReport).HasMaxLength(10);

                entity.Property(e => e.LastTnuahDate).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahId).HasColumnName("LastTnuahID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.Mainkind).HasColumnName("mainkind");

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.PlaceHtml)
                    .HasMaxLength(84)
                    .HasColumnName("PlaceHTML");

                entity.Property(e => e.Sos)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SOS");

                entity.Property(e => e.TbLastDocReport)
                    .HasMaxLength(4000)
                    .HasColumnName("tb_LastDocReport");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TtMedadimHtml)
                    .HasMaxLength(1000)
                    .HasColumnName("tt_MedadimHtml");

                entity.Property(e => e.TtSos)
                    .HasMaxLength(4000)
                    .HasColumnName("tt_SOS");
            });

            modelBuilder.Entity<ClientDetailsDoctorTmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ClientDetailsDoctorTmp");

                entity.Property(e => e.Account).HasMaxLength(20);

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.Bactbact)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("bactbact");

                entity.Property(e => e.Bank).HasMaxLength(50);

                entity.Property(e => e.BankId).HasColumnName("BankID");

                entity.Property(e => e.BirthCountry).HasMaxLength(30);

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.CarDetails).HasMaxLength(50);

                entity.Property(e => e.CarDetailsZug).HasMaxLength(103);

                entity.Property(e => e.CarNumZug).HasMaxLength(33);

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CityId).HasColumnName("CityID");

                entity.Property(e => e.ClientsiudyNew)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.CurrentStatus).HasMaxLength(10);

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarHtml).HasMaxLength(219);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.Diabetes)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("diabetes");

                entity.Property(e => e.Dilution)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("dilution");

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.EnglishName).HasMaxLength(30);

                entity.Property(e => e.FamilyStatus).HasMaxLength(4000);

                entity.Property(e => e.FatherName).HasMaxLength(25);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.Gender)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.GoremMafne).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.Job).HasMaxLength(30);

                entity.Property(e => e.KabalaDate).HasColumnType("datetime");

                entity.Property(e => e.Kind1).HasMaxLength(50);

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kind2).HasMaxLength(25);

                entity.Property(e => e.Kind2Id).HasColumnName("Kind2ID");

                entity.Property(e => e.Kod).HasMaxLength(20);

                entity.Property(e => e.KodHilut).HasMaxLength(12);

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.KupaSnifId).HasColumnName("KupaSnifID");

                entity.Property(e => e.Languages).HasMaxLength(254);

                entity.Property(e => e.LastDocReport).HasMaxLength(10);

                entity.Property(e => e.LastTnuah).HasMaxLength(50);

                entity.Property(e => e.LastTnuahDate).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahDate2).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahId).HasColumnName("LastTnuahID");

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahozName)
                    .HasMaxLength(70)
                    .HasColumnName("mahozName");

                entity.Property(e => e.MailBox).HasMaxLength(20);

                entity.Property(e => e.MarketingAgaf).HasMaxLength(100);

                entity.Property(e => e.MarketingRoom).HasMaxLength(30);

                entity.Property(e => e.MedMemo).HasMaxLength(300);

                entity.Property(e => e.MedProp).HasMaxLength(300);

                entity.Property(e => e.MedadimHtml)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NameViewZug).HasMaxLength(402);

                entity.Property(e => e.NimanAddress).HasMaxLength(100);

                entity.Property(e => e.NimanName).HasMaxLength(30);

                entity.Property(e => e.OptNiman).HasColumnName("optNiman");

                entity.Property(e => e.Pain).HasMaxLength(4000);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone1Zug).HasMaxLength(43);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.PlaceHtml)
                    .HasMaxLength(84)
                    .HasColumnName("PlaceHTML");

                entity.Property(e => e.PriceBack).HasColumnType("money");

                entity.Property(e => e.PriceEnter).HasColumnType("money");

                entity.Property(e => e.Properties).HasColumnType("ntext");

                entity.Property(e => e.RelatedNameBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedNameBCountry");

                entity.Property(e => e.RelatedNameBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedNameBDay");

                entity.Property(e => e.RelatedNameIdcard)
                    .HasMaxLength(14)
                    .HasColumnName("RelatedNameIDCard");

                entity.Property(e => e.RelatedNameWorkJob).HasMaxLength(20);

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.Snif).HasMaxLength(50);

                entity.Property(e => e.Sochen).HasMaxLength(200);

                entity.Property(e => e.SochenId).HasColumnName("SochenID");

                entity.Property(e => e.Sos)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SOS");

                entity.Property(e => e.Sponser).HasMaxLength(50);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TbClientsiudyNew)
                    .HasMaxLength(4000)
                    .HasColumnName("tb_ClientsiudyNew");

                entity.Property(e => e.TbLastDocReport)
                    .HasMaxLength(4000)
                    .HasColumnName("tb_LastDocReport");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TnuahDetails).HasMaxLength(255);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");

                entity.Property(e => e.Toaar).HasMaxLength(15);

                entity.Property(e => e.TtMedadimHtml)
                    .HasMaxLength(1000)
                    .HasColumnName("tt_MedadimHtml");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<ClientDetailsMainTbl>(entity =>
            {
                entity.ToTable("ClientDetailsMainTBL");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Archive).HasDefaultValueSql("((0))");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.FName)
                    .HasMaxLength(30)
                    .HasColumnName("fName");

                entity.Property(e => e.IdCard)
                    .HasMaxLength(15)
                    .HasColumnName("idCard");

                entity.Property(e => e.LName)
                    .HasMaxLength(100)
                    .HasColumnName("lName");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NameView).HasMaxLength(200);
            });

            modelBuilder.Entity<ClientDetailsMedical>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ClientDetailsMedical");

                entity.Property(e => e.GoodMorningComments).HasMaxLength(400);

                entity.Property(e => e.HeshComments).HasMaxLength(400);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MirshamComments).HasMaxLength(400);
            });

            modelBuilder.Entity<ClientDetailsNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("clientDetailsNEW");

                entity.Property(e => e.Archive).HasColumnName("archive");

                entity.Property(e => e.Bactbact)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("bactbact");

                entity.Property(e => e.ClientsiudyNew)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarHtml).HasMaxLength(219);

                entity.Property(e => e.Diabetes)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("diabetes");

                entity.Property(e => e.Dilution)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("dilution");

                entity.Property(e => e.FiledStyle)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Insulation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("insulation");

                entity.Property(e => e.LastDocReport).HasMaxLength(30);

                entity.Property(e => e.Locationid).HasColumnName("locationid");

                entity.Property(e => e.Mainkind).HasColumnName("mainkind");

                entity.Property(e => e.MedadimHtml)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Nameview)
                    .HasMaxLength(200)
                    .HasColumnName("nameview");

                entity.Property(e => e.Pain).HasColumnType("ntext");

                entity.Property(e => e.PlaceHtml)
                    .HasMaxLength(84)
                    .HasColumnName("PlaceHTML");

                entity.Property(e => e.Sos)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SOS");

                entity.Property(e => e.TbClientsiudyNew)
                    .HasMaxLength(4000)
                    .HasColumnName("TB_ClientsiudyNew");

                entity.Property(e => e.TbLastDocReport)
                    .HasColumnType("ntext")
                    .HasColumnName("TB_LastDocReport");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TtMedadimHtml)
                    .HasMaxLength(1000)
                    .HasColumnName("TT_MedadimHtml");
            });

            modelBuilder.Entity<ClientDetailsNurse>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ClientDetailsNurse");

                entity.Property(e => e.Account).HasMaxLength(20);

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.Bactbact)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("bactbact");

                entity.Property(e => e.Bank).HasMaxLength(50);

                entity.Property(e => e.BankId).HasColumnName("BankID");

                entity.Property(e => e.BirthCountry).HasMaxLength(30);

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.CarDetails).HasMaxLength(50);

                entity.Property(e => e.CarDetailsZug).HasMaxLength(103);

                entity.Property(e => e.CarNumZug).HasMaxLength(33);

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CityId).HasColumnName("CityID");

                entity.Property(e => e.ClientsiudyNew)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.CurrentStatus).HasMaxLength(10);

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarHtml).HasMaxLength(219);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.Diabetes)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("diabetes");

                entity.Property(e => e.Dilution)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("dilution");

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.EnglishName).HasMaxLength(30);

                entity.Property(e => e.FamilyStatus).HasMaxLength(50);

                entity.Property(e => e.FatherName).HasMaxLength(25);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.Gender)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.GoremMafne).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.Job).HasMaxLength(30);

                entity.Property(e => e.KabalaDate).HasColumnType("datetime");

                entity.Property(e => e.Kind1).HasMaxLength(50);

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kind2).HasMaxLength(25);

                entity.Property(e => e.Kind2Id).HasColumnName("Kind2ID");

                entity.Property(e => e.Kod).HasMaxLength(20);

                entity.Property(e => e.KodHilut).HasMaxLength(12);

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.KupaSnifId).HasColumnName("KupaSnifID");

                entity.Property(e => e.Languages).HasMaxLength(254);

                entity.Property(e => e.LastDocReport).HasMaxLength(10);

                entity.Property(e => e.LastTnuah).HasMaxLength(50);

                entity.Property(e => e.LastTnuahDate).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahDate2).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahId).HasColumnName("LastTnuahID");

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahozName)
                    .HasMaxLength(70)
                    .HasColumnName("mahozName");

                entity.Property(e => e.MailBox).HasMaxLength(20);

                entity.Property(e => e.MarketingAgaf).HasMaxLength(100);

                entity.Property(e => e.MarketingRoom).HasMaxLength(30);

                entity.Property(e => e.MedMemo).HasMaxLength(300);

                entity.Property(e => e.MedProp).HasMaxLength(300);

                entity.Property(e => e.MedadimHtml)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NameViewZug).HasMaxLength(402);

                entity.Property(e => e.NimanAddress).HasMaxLength(100);

                entity.Property(e => e.NimanName).HasMaxLength(50);

                entity.Property(e => e.OptNiman).HasColumnName("optNiman");

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone1Zug).HasMaxLength(43);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.PlaceHtml)
                    .HasMaxLength(84)
                    .HasColumnName("PlaceHTML");

                entity.Property(e => e.PriceBack).HasColumnType("money");

                entity.Property(e => e.PriceEnter).HasColumnType("money");

                entity.Property(e => e.Properties).HasColumnType("ntext");

                entity.Property(e => e.RelatedNameBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedNameBCountry");

                entity.Property(e => e.RelatedNameBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedNameBDay");

                entity.Property(e => e.RelatedNameIdcard)
                    .HasMaxLength(14)
                    .HasColumnName("RelatedNameIDCard");

                entity.Property(e => e.RelatedNameWorkJob).HasMaxLength(20);

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.Snif).HasMaxLength(50);

                entity.Property(e => e.Sochen).HasMaxLength(200);

                entity.Property(e => e.SochenId).HasColumnName("SochenID");

                entity.Property(e => e.Sos)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SOS");

                entity.Property(e => e.Sponser).HasMaxLength(50);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TbClientsiudyNew)
                    .HasMaxLength(4000)
                    .HasColumnName("tb_ClientsiudyNew");

                entity.Property(e => e.TbLastDocReport)
                    .HasMaxLength(4000)
                    .HasColumnName("tb_LastDocReport");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TnuahDetails).HasMaxLength(255);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");

                entity.Property(e => e.Toaar).HasMaxLength(15);

                entity.Property(e => e.TtMedadimHtml)
                    .HasMaxLength(1000)
                    .HasColumnName("tt_MedadimHtml");

                entity.Property(e => e.TtSos)
                    .HasMaxLength(4000)
                    .HasColumnName("tt_SOS");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<ClientDetailsTelemarketing>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ClientDetails-Telemarketing");

                entity.Property(e => e.Account).HasMaxLength(20);

                entity.Property(e => e.AliaYear).HasMaxLength(4);

                entity.Property(e => e.ArmyId)
                    .HasMaxLength(12)
                    .HasColumnName("ArmyID");

                entity.Property(e => e.ArmyLevel).HasMaxLength(12);

                entity.Property(e => e.ArnonaProperties).HasMaxLength(50);

                entity.Property(e => e.B2bCity)
                    .HasMaxLength(100)
                    .HasColumnName("b2bCity");

                entity.Property(e => e.BSakeret).HasColumnName("bSakeret");

                entity.Property(e => e.BankId).HasColumnName("BankID");

                entity.Property(e => e.BirthCountryId).HasColumnName("BirthCountryID");

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.BituahId).HasColumnName("BituahID");

                entity.Property(e => e.BmwebKupa)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebKupa");

                entity.Property(e => e.BmwebPassword)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebPassword");

                entity.Property(e => e.BmwebUserName)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebUserName");

                entity.Property(e => e.CarDetails).HasMaxLength(50);

                entity.Property(e => e.CarNum).HasMaxLength(15);

                entity.Property(e => e.CardDate).HasMaxLength(10);

                entity.Property(e => e.CardKindId).HasColumnName("CardKindID");

                entity.Property(e => e.CardNum).HasMaxLength(50);

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CityId).HasColumnName("CityID");

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DateNikuyMakor).HasColumnType("datetime");

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.EmailInbox).HasMaxLength(50);

                entity.Property(e => e.EmailSent).HasMaxLength(50);

                entity.Property(e => e.EnglishName).HasMaxLength(30);

                entity.Property(e => e.Ext).HasMaxLength(4);

                entity.Property(e => e.FatherName).HasMaxLength(25);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.GoremMafneId).HasColumnName("GoremMafneID");

                entity.Property(e => e.Harshah).HasMaxLength(254);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.JobId).HasColumnName("JobID");

                entity.Property(e => e.KabalaDate).HasColumnType("datetime");

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kind2Id).HasColumnName("Kind2ID");

                entity.Property(e => e.Kod).HasMaxLength(12);

                entity.Property(e => e.KodHilut).HasMaxLength(12);

                entity.Property(e => e.KupaDoctor).HasMaxLength(25);

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.KupaSnifId).HasColumnName("KupaSnifID");

                entity.Property(e => e.LanguageId).HasColumnName("LanguageID");

                entity.Property(e => e.Languages).HasMaxLength(254);

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.MailBox).HasMaxLength(20);

                entity.Property(e => e.MainContactManId).HasColumnName("MainContactManID");

                entity.Property(e => e.MarketingSponserId).HasColumnName("MarketingSponserID");

                entity.Property(e => e.MarketingTifkudStatusId).HasColumnName("MarketingTifkudStatusID");

                entity.Property(e => e.MaxAshray).HasColumnType("money");

                entity.Property(e => e.Meaaged).HasMaxLength(50);

                entity.Property(e => e.MedicalGroupId).HasColumnName("MedicalGroupID");

                entity.Property(e => e.MotherName).HasMaxLength(15);

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NimanAddress).HasMaxLength(100);

                entity.Property(e => e.NimanName).HasMaxLength(30);

                entity.Property(e => e.OptNiman).HasColumnName("optNiman");

                entity.Property(e => e.OsekId)
                    .HasMaxLength(50)
                    .HasColumnName("OsekID");

                entity.Property(e => e.Password).HasMaxLength(20);

                entity.Property(e => e.PayLimitId).HasColumnName("PayLimitID");

                entity.Property(e => e.PersonImage).HasMaxLength(100);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.PriceBack).HasColumnType("money");

                entity.Property(e => e.PriceEnter).HasColumnType("money");

                entity.Property(e => e.Properties).HasColumnType("ntext");

                entity.Property(e => e.RelatedName).HasMaxLength(25);

                entity.Property(e => e.RelatedNameBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedNameBCountry");

                entity.Property(e => e.RelatedNameBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedNameBDay");

                entity.Property(e => e.RelatedNameIdcard)
                    .HasMaxLength(14)
                    .HasColumnName("RelatedNameIDCard");

                entity.Property(e => e.RelatedNameWorkJob).HasMaxLength(20);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.SidurPtira).HasMaxLength(254);

                entity.Property(e => e.Snif).HasMaxLength(50);

                entity.Property(e => e.SochenId).HasColumnName("SochenID");

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");

                entity.Property(e => e.ToaarId).HasColumnName("ToaarID");

                entity.Property(e => e.TransferalComments).HasColumnType("ntext");

                entity.Property(e => e.Tsavah).HasMaxLength(254);

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserPassport).HasMaxLength(25);

                entity.Property(e => e.WebSite).HasMaxLength(100);

                entity.Property(e => e.WorkerHourPrice).HasColumnType("money");

                entity.Property(e => e.WorkerJobEnd).HasColumnType("datetime");

                entity.Property(e => e.WorkerJobStart).HasColumnType("datetime");

                entity.Property(e => e.WorkerNesiotPrice).HasColumnType("money");

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<ClientDetailsWithOutArchive>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("clientDetailsWithOutArchive");

                entity.Property(e => e.Account).HasMaxLength(20);

                entity.Property(e => e.AliaYear).HasMaxLength(4);

                entity.Property(e => e.ArmyId)
                    .HasMaxLength(12)
                    .HasColumnName("ArmyID");

                entity.Property(e => e.ArmyLevel).HasMaxLength(12);

                entity.Property(e => e.ArnonaProperties).HasMaxLength(50);

                entity.Property(e => e.AtdId).HasColumnName("AtdID");

                entity.Property(e => e.B2bCity)
                    .HasMaxLength(100)
                    .HasColumnName("b2bCity");

                entity.Property(e => e.BArchiveGroup).HasColumnName("bArchiveGroup");

                entity.Property(e => e.BBlockedUser).HasColumnName("bBlockedUser");

                entity.Property(e => e.BCompany).HasColumnName("bCompany");

                entity.Property(e => e.BPassport).HasColumnName("bPassport");

                entity.Property(e => e.BSakeret).HasColumnName("bSakeret");

                entity.Property(e => e.BYoman).HasColumnName("bYoman");

                entity.Property(e => e.BankId).HasColumnName("BankID");

                entity.Property(e => e.BirthCountryId).HasColumnName("BirthCountryID");

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.BituahId).HasColumnName("BituahID");

                entity.Property(e => e.BmwebKupa)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebKupa");

                entity.Property(e => e.BmwebPassword)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebPassword");

                entity.Property(e => e.BmwebUserName)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebUserName");

                entity.Property(e => e.CarDetails).HasMaxLength(50);

                entity.Property(e => e.CarNum).HasMaxLength(15);

                entity.Property(e => e.CardDate).HasMaxLength(10);

                entity.Property(e => e.CardKindId).HasColumnName("CardKindID");

                entity.Property(e => e.CardNum).HasMaxLength(50);

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CityId).HasColumnName("CityID");

                entity.Property(e => e.ClientKod2).HasMaxLength(30);

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.CurrentStatus)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DateNikuyMakor).HasColumnType("datetime");

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.ElectricityCredit)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.ElectricityCreditPrice)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.EmailInbox).HasMaxLength(50);

                entity.Property(e => e.EmailSent).HasMaxLength(50);

                entity.Property(e => e.EnglishName).HasMaxLength(30);

                entity.Property(e => e.ExitForecast).HasColumnType("datetime");

                entity.Property(e => e.Ext).HasMaxLength(4);

                entity.Property(e => e.FatherName).HasMaxLength(25);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.FnameEng).IsRequired();

                entity.Property(e => e.GoremMafneId).HasColumnName("GoremMafneID");

                entity.Property(e => e.GuardianField).HasMaxLength(20);

                entity.Property(e => e.GuardianName).HasMaxLength(20);

                entity.Property(e => e.Harshah).HasMaxLength(254);

                entity.Property(e => e.Hospital).HasMaxLength(50);

                entity.Property(e => e.HospitalTransferId).HasColumnName("HospitalTransferID");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdCardImage).HasMaxLength(100);

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.IsShotefPay).HasColumnName("isShotefPay");

                entity.Property(e => e.JobId).HasColumnName("JobID");

                entity.Property(e => e.KabalaDate).HasColumnType("datetime");

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kind2Id).HasColumnName("Kind2ID");

                entity.Property(e => e.Kod).HasMaxLength(20);

                entity.Property(e => e.KodHilut).HasMaxLength(12);

                entity.Property(e => e.KupaDoctor).HasMaxLength(25);

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.KupaSnif).HasMaxLength(300);

                entity.Property(e => e.KupaSnifId).HasColumnName("KupaSnifID");

                entity.Property(e => e.Kvura)
                    .HasMaxLength(30)
                    .HasColumnName("kvura");

                entity.Property(e => e.LanguageId).HasColumnName("LanguageID");

                entity.Property(e => e.Languages).HasMaxLength(254);

                entity.Property(e => e.LastUpdatePassword).HasColumnType("datetime");

                entity.Property(e => e.LicenseId).HasMaxLength(50);

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LnameEng).IsRequired();

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.MailBox).HasMaxLength(20);

                entity.Property(e => e.MailToHesh)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.MainContactManId).HasColumnName("MainContactManID");

                entity.Property(e => e.MarketingSponserId).HasColumnName("MarketingSponserID");

                entity.Property(e => e.MarketingTifkudStatusId).HasColumnName("MarketingTifkudStatusID");

                entity.Property(e => e.MaxAshray).HasColumnType("money");

                entity.Property(e => e.Meaaged).HasMaxLength(50);

                entity.Property(e => e.MedMemo).HasMaxLength(300);

                entity.Property(e => e.MedProp).HasMaxLength(300);

                entity.Property(e => e.MedicalGroupId).HasColumnName("MedicalGroupID");

                entity.Property(e => e.MotherName).HasMaxLength(15);

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NimanAddress).HasMaxLength(100);

                entity.Property(e => e.NimanName).HasMaxLength(50);

                entity.Property(e => e.OptNiman).HasColumnName("optNiman");

                entity.Property(e => e.OsekId)
                    .HasMaxLength(50)
                    .HasColumnName("OsekID");

                entity.Property(e => e.Password).HasMaxLength(20);

                entity.Property(e => e.PayLimitId).HasColumnName("PayLimitID");

                entity.Property(e => e.PersonImage).HasMaxLength(100);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.Phone4).HasMaxLength(30);

                entity.Property(e => e.PriceBack).HasColumnType("money");

                entity.Property(e => e.PriceEnter).HasColumnType("money");

                entity.Property(e => e.PrioId)
                    .IsRequired()
                    .HasColumnName("prioID");

                entity.Property(e => e.PrioId2)
                    .IsRequired()
                    .HasColumnName("prioId2");

                entity.Property(e => e.Properties).HasColumnType("ntext");

                entity.Property(e => e.RelatedName).HasMaxLength(25);

                entity.Property(e => e.RelatedNameBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedNameBCountry");

                entity.Property(e => e.RelatedNameBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedNameBDay");

                entity.Property(e => e.RelatedNameIdcard)
                    .HasMaxLength(14)
                    .HasColumnName("RelatedNameIDCard");

                entity.Property(e => e.RelatedNameWorkJob).HasMaxLength(20);

                entity.Property(e => e.ReligionId).HasColumnName("ReligionID");

                entity.Property(e => e.ResponsibleId).HasColumnName("responsibleID");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.SidurPtira).HasMaxLength(254);

                entity.Property(e => e.Snif).HasMaxLength(50);

                entity.Property(e => e.SochenId).HasColumnName("SochenID");

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserKod).IsRequired();

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");

                entity.Property(e => e.ToaarId).HasColumnName("ToaarID");

                entity.Property(e => e.TransferalAddings).HasMaxLength(200);

                entity.Property(e => e.TransferalComments).HasColumnType("ntext");

                entity.Property(e => e.Tsavah).HasMaxLength(254);

                entity.Property(e => e.TypeHeshCollectBy).HasColumnName("typeHeshCollectBy");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserPassport).HasMaxLength(25);

                entity.Property(e => e.UserProfileId).HasColumnName("UserProfileID");

                entity.Property(e => e.WaterCredit)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.WaterCreditPrice)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.WebSite).HasMaxLength(100);

                entity.Property(e => e.WorkerHourPrice).HasColumnType("money");

                entity.Property(e => e.WorkerJobEnd).HasColumnType("datetime");

                entity.Property(e => e.WorkerJobStart).HasColumnType("datetime");

                entity.Property(e => e.WorkerNesiotPrice).HasColumnType("money");

                entity.Property(e => e.WorkerRoomId).HasMaxLength(300);

                entity.Property(e => e.WorkerRoomJobId)
                    .HasMaxLength(300)
                    .HasColumnName("WorkerRoomJobID");

                entity.Property(e => e.WorkerUserName).HasMaxLength(50);

                entity.Property(e => e.WriteLastDate).HasColumnType("datetime");

                entity.Property(e => e.YearsOfEducation).HasMaxLength(2);

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<ClientDoc>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaClientDocs_PK")
                    .IsClustered(false);

                entity.HasIndex(e => e.Csid, "CSID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ClientId, "ClientID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DocDirOld, "DirName")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DocCreate, "DocCreate")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DocNameOld, "FileName")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.KeyWords1, "Key1")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.KeyWords2, "KeyWords2")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.NumPages, "NumPages")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.RelatedA, "RelatedA")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ScannedDate, "ScannedDate")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.SnifId, "SnifID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.KindId, "TypeID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.UserId, "UserID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.FileType, "tblDocumentsFileType")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BTelemarketing).HasColumnName("bTelemarketing");

                entity.Property(e => e.Bsocial).HasColumnName("BSocial");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Csid)
                    .HasMaxLength(30)
                    .HasColumnName("CSID")
                    .HasComment("קוד מזהה הפקס במסוף הפקס");

                entity.Property(e => e.DateDoc)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DocCreate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))");

                entity.Property(e => e.DocDir).HasMaxLength(50);

                entity.Property(e => e.DocDirNew).HasMaxLength(50);

                entity.Property(e => e.DocDirOld).HasColumnName("DocDirOLD");

                entity.Property(e => e.DocFrom)
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DocName).HasMaxLength(250);

                entity.Property(e => e.DocNameNew).HasMaxLength(250);

                entity.Property(e => e.DocNameOld).HasColumnName("DocNameOLD");

                entity.Property(e => e.DocNameView).HasMaxLength(50);

                entity.Property(e => e.DocSize).HasDefaultValueSql("(0)");

                entity.Property(e => e.DocTheme).HasMaxLength(255);

                entity.Property(e => e.DocTo)
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DocUpdate).HasColumnType("datetime");

                entity.Property(e => e.FileStatus).HasMaxLength(50);

                entity.Property(e => e.FileType).HasMaxLength(4);

                entity.Property(e => e.FlagM).HasDefaultValueSql("((1))");

                entity.Property(e => e.FolderId)
                    .HasColumnName("FolderID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Goal)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsFax).HasDefaultValueSql("(0)");

                entity.Property(e => e.KeyWords1).HasDefaultValueSql("(0)");

                entity.Property(e => e.KeyWords2).HasDefaultValueSql("(0)");

                entity.Property(e => e.KindId).HasColumnName("KindID");

                entity.Property(e => e.NumPages).HasDefaultValueSql("(0)");

                entity.Property(e => e.RelatedA)
                    .HasDefaultValueSql("(0)")
                    .HasComment("קישור למידע נלווה:לדוג' קישור לדירה");

                entity.Property(e => e.RelatedB).HasDefaultValueSql("(0)");

                entity.Property(e => e.ScannedDate).HasColumnType("datetime");

                entity.Property(e => e.SnifId)
                    .HasColumnName("SnifID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SubjectDoc).HasMaxLength(200);

                entity.Property(e => e.SubjectDocId).HasColumnName("SubjectDocID");

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.WhoCreate).HasMaxLength(50);

                entity.Property(e => e.WhoUpdate).HasMaxLength(50);

                entity.HasOne(d => d.Client)
                    .WithMany(p => p.ClientDocs)
                    .HasForeignKey(d => d.ClientId)
                    .HasConstraintName("ClientDocs_FK00");
            });

            modelBuilder.Entity<Clientdetails1Comp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Clientdetails1_Comp1");

                entity.Property(e => e.Account).HasMaxLength(20);

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.AliaYear).HasMaxLength(4);

                entity.Property(e => e.ArmyId)
                    .HasMaxLength(12)
                    .HasColumnName("ArmyID");

                entity.Property(e => e.ArmyLevel).HasMaxLength(12);

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.BCompany).HasColumnName("bCompany");

                entity.Property(e => e.BPassport).HasColumnName("bPassport");

                entity.Property(e => e.Bank).HasMaxLength(50);

                entity.Property(e => e.BankId).HasColumnName("BankID");

                entity.Property(e => e.BedName)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.BirthCountry).HasMaxLength(30);

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.Bituah).HasMaxLength(50);

                entity.Property(e => e.BmwebKupa)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebKupa");

                entity.Property(e => e.BmwebPassword)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebPassword");

                entity.Property(e => e.BmwebUserName)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebUserName");

                entity.Property(e => e.CarDetails).HasMaxLength(50);

                entity.Property(e => e.CarDetailsZug).HasMaxLength(103);

                entity.Property(e => e.CarNum).HasMaxLength(15);

                entity.Property(e => e.CarNumZug).HasMaxLength(33);

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.City2).HasMaxLength(50);

                entity.Property(e => e.CityId).HasColumnName("CityID");

                entity.Property(e => e.ClientKod2).HasMaxLength(30);

                entity.Property(e => e.ClientsiudyNew)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.CurrentStatus).HasMaxLength(10);

                entity.Property(e => e.DateAsk).HasColumnType("datetime");

                entity.Property(e => e.DateEnterHospital).HasMaxLength(30);

                entity.Property(e => e.DateEnterMahlaka).HasMaxLength(30);

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.DateGetCode).HasColumnType("datetime");

                entity.Property(e => e.DateLeave).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarHtml).HasMaxLength(219);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.ElectricityCredit)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.EnglishName).HasMaxLength(30);

                entity.Property(e => e.ExitForecast).HasColumnType("datetime");

                entity.Property(e => e.FamilyStatus).HasMaxLength(50);

                entity.Property(e => e.FatherName).HasMaxLength(25);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.FullAddress)
                    .IsRequired()
                    .HasMaxLength(233);

                entity.Property(e => e.Gender)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.GoremMafne).HasMaxLength(50);

                entity.Property(e => e.GoremMafneId).HasColumnName("GoremMafneID");

                entity.Property(e => e.Hospital).HasMaxLength(50);

                entity.Property(e => e.HospitalTransfer).HasMaxLength(100);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.Insulation)
                    .HasMaxLength(500)
                    .HasColumnName("insulation");

                entity.Property(e => e.Job).HasMaxLength(30);

                entity.Property(e => e.KabalaDate).HasColumnType("datetime");

                entity.Property(e => e.Kind1).HasMaxLength(50);

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kind2).HasMaxLength(25);

                entity.Property(e => e.Kind2Id).HasColumnName("Kind2ID");

                entity.Property(e => e.Kod).HasMaxLength(20);

                entity.Property(e => e.KodHilut).HasMaxLength(12);

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.KupaDoctor)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.KupaSnif).HasMaxLength(300);

                entity.Property(e => e.KupaSnifId).HasColumnName("KupaSnifID");

                entity.Property(e => e.Lang).HasMaxLength(30);

                entity.Property(e => e.Languages).HasMaxLength(254);

                entity.Property(e => e.LastTnuah).HasMaxLength(50);

                entity.Property(e => e.LastTnuahDate).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahDate2).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahId).HasColumnName("LastTnuahID");

                entity.Property(e => e.LeaveKindDesc).HasMaxLength(255);

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahlakaKindId).HasColumnName("MahlakaKindID");

                entity.Property(e => e.MahozName)
                    .HasMaxLength(70)
                    .HasColumnName("mahozName");

                entity.Property(e => e.MailBox).HasMaxLength(20);

                entity.Property(e => e.MarketingAgaf).HasMaxLength(100);

                entity.Property(e => e.MarketingRoom).HasMaxLength(30);

                entity.Property(e => e.MarketingTifkudStatus).HasMaxLength(50);

                entity.Property(e => e.MarketingTifkudStatusId).HasColumnName("MarketingTifkudStatusID");

                entity.Property(e => e.Meaaged).HasMaxLength(50);

                entity.Property(e => e.MedMemo).HasMaxLength(300);

                entity.Property(e => e.MedProp).HasMaxLength(300);

                entity.Property(e => e.MedadimHtml)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalGroup).HasMaxLength(50);

                entity.Property(e => e.Mothername).HasMaxLength(15);

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NameViewZug).HasMaxLength(402);

                entity.Property(e => e.NameViewZug2).HasMaxLength(402);

                entity.Property(e => e.NimanAddress).HasMaxLength(100);

                entity.Property(e => e.NimanName).HasMaxLength(50);

                entity.Property(e => e.OptNiman).HasColumnName("optNiman");

                entity.Property(e => e.OsekId)
                    .HasMaxLength(50)
                    .HasColumnName("OsekID");

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone1Zug).HasMaxLength(43);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.PlaceHtml)
                    .HasMaxLength(84)
                    .HasColumnName("PlaceHTML");

                entity.Property(e => e.PriceBack).HasColumnType("money");

                entity.Property(e => e.PriceEnter).HasColumnType("money");

                entity.Property(e => e.Profile1).HasMaxLength(50);

                entity.Property(e => e.Properties).HasColumnType("ntext");

                entity.Property(e => e.RelatedName).HasMaxLength(25);

                entity.Property(e => e.RelatedNameBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedNameBCountry");

                entity.Property(e => e.RelatedNameBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedNameBDay");

                entity.Property(e => e.RelatedNameIdcard)
                    .HasMaxLength(14)
                    .HasColumnName("RelatedNameIDCard");

                entity.Property(e => e.RelatedNameView).HasMaxLength(200);

                entity.Property(e => e.RelatedNameWorkJob).HasMaxLength(20);

                entity.Property(e => e.RelatedWorkerBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedWorkerBCountry");

                entity.Property(e => e.RelatedWorkerBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedWorkerBDay");

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.Snif).HasMaxLength(50);

                entity.Property(e => e.Sochen).HasMaxLength(200);

                entity.Property(e => e.SochenId).HasColumnName("SochenID");

                entity.Property(e => e.Sponser).HasMaxLength(50);

                entity.Property(e => e.Sponser2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold).HasColumnName("SponserIDOld");

                entity.Property(e => e.SponserService)
                    .HasMaxLength(50)
                    .HasColumnName("sponserService");

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TnuahDetails).HasMaxLength(255);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");

                entity.Property(e => e.Toaar).HasMaxLength(15);

                entity.Property(e => e.UserCreateContact).HasMaxLength(200);

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserPassport).HasMaxLength(25);

                entity.Property(e => e.WorkerJobEnd).HasColumnType("datetime");

                entity.Property(e => e.WorkerJobStart).HasColumnType("datetime");

                entity.Property(e => e.WorkerUserName).HasMaxLength(50);

                entity.Property(e => e.YearsOfEducation).HasMaxLength(2);

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<ClientdetailsComp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("clientdetails_Comp1");

                entity.Property(e => e.Account).HasMaxLength(20);

                entity.Property(e => e.AliaYear).HasMaxLength(4);

                entity.Property(e => e.ArmyId)
                    .HasMaxLength(12)
                    .HasColumnName("ArmyID");

                entity.Property(e => e.ArmyLevel).HasMaxLength(12);

                entity.Property(e => e.ArnonaProperties).HasMaxLength(50);

                entity.Property(e => e.AtdId).HasColumnName("AtdID");

                entity.Property(e => e.B2bCity)
                    .HasMaxLength(100)
                    .HasColumnName("b2bCity");

                entity.Property(e => e.BArchiveGroup).HasColumnName("bArchiveGroup");

                entity.Property(e => e.BBlockedUser).HasColumnName("bBlockedUser");

                entity.Property(e => e.BPassport).HasColumnName("bPassport");

                entity.Property(e => e.BSakeret).HasColumnName("bSakeret");

                entity.Property(e => e.BYoman).HasColumnName("bYoman");

                entity.Property(e => e.BankId).HasColumnName("BankID");

                entity.Property(e => e.BirthCountryId).HasColumnName("BirthCountryID");

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.BituahId).HasColumnName("BituahID");

                entity.Property(e => e.BmwebKupa)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebKupa");

                entity.Property(e => e.BmwebPassword)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebPassword");

                entity.Property(e => e.BmwebUserName)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebUserName");

                entity.Property(e => e.CarDetails).HasMaxLength(50);

                entity.Property(e => e.CarNum).HasMaxLength(15);

                entity.Property(e => e.CardDate).HasMaxLength(10);

                entity.Property(e => e.CardKindId).HasColumnName("CardKindID");

                entity.Property(e => e.CardNum).HasMaxLength(50);

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CityId).HasColumnName("CityID");

                entity.Property(e => e.ClientKod2).HasMaxLength(30);

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.CurrentStatus)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DateNikuyMakor).HasColumnType("datetime");

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.ElectricityCredit)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.ElectricityCreditPrice)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.EmailInbox).HasMaxLength(50);

                entity.Property(e => e.EmailSent).HasMaxLength(50);

                entity.Property(e => e.EnglishName).HasMaxLength(30);

                entity.Property(e => e.ExitForecast).HasColumnType("datetime");

                entity.Property(e => e.Ext).HasMaxLength(4);

                entity.Property(e => e.FatherName).HasMaxLength(25);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.GoremMafneId).HasColumnName("GoremMafneID");

                entity.Property(e => e.GuardianField).HasMaxLength(20);

                entity.Property(e => e.GuardianName).HasMaxLength(20);

                entity.Property(e => e.Harshah).HasMaxLength(254);

                entity.Property(e => e.Hospital).HasMaxLength(50);

                entity.Property(e => e.HospitalTransferId).HasColumnName("HospitalTransferID");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.IsShotefPay).HasColumnName("isShotefPay");

                entity.Property(e => e.JobId).HasColumnName("JobID");

                entity.Property(e => e.KabalaDate).HasColumnType("datetime");

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kind2Id).HasColumnName("Kind2ID");

                entity.Property(e => e.Kod).HasMaxLength(20);

                entity.Property(e => e.KodHilut).HasMaxLength(12);

                entity.Property(e => e.KupaDoctor).HasMaxLength(25);

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.KupaSnif).HasMaxLength(300);

                entity.Property(e => e.KupaSnifId).HasColumnName("KupaSnifID");

                entity.Property(e => e.Kvura)
                    .HasMaxLength(30)
                    .HasColumnName("kvura");

                entity.Property(e => e.LanguageId).HasColumnName("LanguageID");

                entity.Property(e => e.Languages).HasMaxLength(254);

                entity.Property(e => e.LastUpdatePassword).HasColumnType("datetime");

                entity.Property(e => e.LicenseId).HasMaxLength(50);

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.MailBox).HasMaxLength(20);

                entity.Property(e => e.MailToHesh)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.MainContactManId).HasColumnName("MainContactManID");

                entity.Property(e => e.MarketingSponserId).HasColumnName("MarketingSponserID");

                entity.Property(e => e.MarketingTifkudStatusId).HasColumnName("MarketingTifkudStatusID");

                entity.Property(e => e.MaxAshray).HasColumnType("money");

                entity.Property(e => e.Meaaged).HasMaxLength(50);

                entity.Property(e => e.MedMemo).HasMaxLength(300);

                entity.Property(e => e.MedProp).HasMaxLength(300);

                entity.Property(e => e.MedicalGroupId).HasColumnName("MedicalGroupID");

                entity.Property(e => e.MotherName).HasMaxLength(15);

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NimanAddress).HasMaxLength(100);

                entity.Property(e => e.NimanName).HasMaxLength(50);

                entity.Property(e => e.OptNiman).HasColumnName("optNiman");

                entity.Property(e => e.OsekId)
                    .HasMaxLength(50)
                    .HasColumnName("OsekID");

                entity.Property(e => e.Password).HasMaxLength(20);

                entity.Property(e => e.PayLimitId).HasColumnName("PayLimitID");

                entity.Property(e => e.PersonImage).HasMaxLength(100);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.Phone4).HasMaxLength(30);

                entity.Property(e => e.PriceBack).HasColumnType("money");

                entity.Property(e => e.PriceEnter).HasColumnType("money");

                entity.Property(e => e.Properties).HasColumnType("ntext");

                entity.Property(e => e.RelatedName).HasMaxLength(25);

                entity.Property(e => e.RelatedNameBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedNameBCountry");

                entity.Property(e => e.RelatedNameBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedNameBDay");

                entity.Property(e => e.RelatedNameIdcard)
                    .HasMaxLength(14)
                    .HasColumnName("RelatedNameIDCard");

                entity.Property(e => e.RelatedNameWorkJob).HasMaxLength(20);

                entity.Property(e => e.ReligionId).HasColumnName("ReligionID");

                entity.Property(e => e.ResponsibleId).HasColumnName("responsibleID");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.SidurPtira).HasMaxLength(254);

                entity.Property(e => e.Snif).HasMaxLength(50);

                entity.Property(e => e.SochenId).HasColumnName("SochenID");

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserKod).IsRequired();

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");

                entity.Property(e => e.ToaarId).HasColumnName("ToaarID");

                entity.Property(e => e.TransferalAddings).HasMaxLength(200);

                entity.Property(e => e.TransferalComments).HasColumnType("ntext");

                entity.Property(e => e.Tsavah).HasMaxLength(254);

                entity.Property(e => e.TypeHeshCollectBy).HasColumnName("typeHeshCollectBy");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserPassport).HasMaxLength(25);

                entity.Property(e => e.UserProfileId).HasColumnName("UserProfileID");

                entity.Property(e => e.WaterCredit)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.WaterCreditPrice)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.WebSite).HasMaxLength(100);

                entity.Property(e => e.WorkerHourPrice).HasColumnType("money");

                entity.Property(e => e.WorkerJobEnd).HasColumnType("datetime");

                entity.Property(e => e.WorkerJobStart).HasColumnType("datetime");

                entity.Property(e => e.WorkerNesiotPrice).HasColumnType("money");

                entity.Property(e => e.WorkerRoomId).HasMaxLength(300);

                entity.Property(e => e.WorkerRoomJobId)
                    .HasMaxLength(300)
                    .HasColumnName("WorkerRoomJobID");

                entity.Property(e => e.WorkerUserName).HasMaxLength(50);

                entity.Property(e => e.WriteLastDate).HasColumnType("datetime");

                entity.Property(e => e.YearsOfEducation).HasMaxLength(2);

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<Contact>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaContacts_PK")
                    .IsClustered(false);

                entity.HasIndex(e => e.ClientId, "ClientDetailsContacts")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BIncludeHanhala)
                    .HasColumnName("bIncludeHanhala")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ContactTheme2).HasMaxLength(50);

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.KindId)
                    .HasColumnName("KindID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("סוג המגע עם הלקוח");

                entity.Property(e => e.LinkAddress).HasMaxLength(50);

                entity.Property(e => e.LinkFile)
                    .HasMaxLength(200)
                    .HasComment("קובץ מקושר");

                entity.Property(e => e.LinkFileId)
                    .HasColumnName("LinkFileID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.MeetCreate).HasMaxLength(50);

                entity.Property(e => e.MeetYozemId).HasColumnName("MeetYozemID");

                entity.Property(e => e.StaffInclude).HasMaxLength(500);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Theme).HasMaxLength(100);

                entity.Property(e => e.Time1).HasMaxLength(10);

                entity.Property(e => e.UserCreate).HasMaxLength(40);

                entity.Property(e => e.UserCreateid).HasDefaultValueSql("((0))");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UserIdcreate)
                    .HasColumnName("UserIDCreate")
                    .HasDefaultValueSql("(0)")
                    .HasComment("יוצר הרשומה");
            });

            modelBuilder.Entity<ContactMan>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaContactMen_PK")
                    .IsClustered(false);

                entity.HasIndex(e => e.ClientId, "ClientDetailsContactMen")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Idcard, "IDCard")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasComment("מזהה רשומה");

                entity.Property(e => e.BAllowSms).HasColumnName("bAllowSms");

                entity.Property(e => e.Birthday).HasMaxLength(10);

                entity.Property(e => e.ChkOutlook)
                    .HasColumnName("chkOutlook")
                    .HasDefaultValueSql("((0))")
                    .HasComment("מבצע בדיקה ורישום באאוטלוק");

                entity.Property(e => e.CityId)
                    .HasColumnName("CityID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("עיר");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("מצביע לתיק");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasComment("דואר אלקטרוני");

                entity.Property(e => e.Fax)
                    .HasMaxLength(20)
                    .HasComment("פקס");

                entity.Property(e => e.Fname)
                    .HasMaxLength(50)
                    .HasColumnName("FName");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(10)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Info)
                    .HasMaxLength(255)
                    .HasComment("הערות");

                entity.Property(e => e.JobId)
                    .HasColumnName("JobID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("תפקיד");

                entity.Property(e => e.KirvaId).HasColumnName("KirvaID");

                entity.Property(e => e.Lname)
                    .HasMaxLength(50)
                    .HasColumnName("LName");

                entity.Property(e => e.Main)
                    .HasDefaultValueSql("((0))")
                    .HasComment("איש הקשר העיקרי - בשביל מען למכתבים");

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(20)
                    .HasComment("טלפון 1");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(20)
                    .HasComment("טלפון 2");

                entity.Property(e => e.Phone3)
                    .HasMaxLength(20)
                    .HasComment("טלפון 3");

                entity.Property(e => e.Street)
                    .HasMaxLength(40)
                    .HasComment("כתובת");

                entity.Property(e => e.Street2).HasMaxLength(50);

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("מספר המשתמש");

                entity.Property(e => e.Zip).HasMaxLength(8);

                entity.HasOne(d => d.Client)
                    .WithMany(p => p.ContactMen)
                    .HasForeignKey(d => d.ClientId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("ContactMen_FK00");
            });

            modelBuilder.Entity<ContactMen1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ContactMen1");

                entity.Property(e => e.Address).HasMaxLength(91);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.FullName).HasMaxLength(103);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Kirva).HasMaxLength(20);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<Court>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaCourt_PK")
                    .IsClustered(false);

                entity.ToTable("Court");

                entity.HasIndex(e => e.Id, "Id")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Comments).HasMaxLength(50);

                entity.Property(e => e.Court1)
                    .HasMaxLength(50)
                    .HasColumnName("Court")
                    .HasComment("בית משפט");

                entity.Property(e => e.CourtCity)
                    .HasMaxLength(50)
                    .HasComment("עיר בית משפט");

                entity.Property(e => e.CourtFolder).HasMaxLength(50);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.FolderId)
                    .HasColumnName("FolderID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Judge)
                    .HasMaxLength(50)
                    .HasComment("שופט");

                entity.Property(e => e.Manager1).HasMaxLength(50);

                entity.Property(e => e.Manager2).HasMaxLength(50);

                entity.Property(e => e.ProcessKind)
                    .HasMaxLength(50)
                    .HasComment("סוג הליך");

                entity.Property(e => e.ProcessName)
                    .HasMaxLength(50)
                    .HasComment("שם הליך");

                entity.Property(e => e.ProcessTheme)
                    .HasMaxLength(50)
                    .HasComment("נושא");

                entity.Property(e => e.Time1).HasColumnType("datetime");
            });

            modelBuilder.Entity<Csvtest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CSVTest");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.KabalaDate).HasMaxLength(50);

                entity.Property(e => e.MisCheck)
                    .HasMaxLength(50)
                    .HasColumnName("misCheck");

                entity.Property(e => e.MisHeshbon).HasMaxLength(50);

                entity.Property(e => e.MisSnif)
                    .HasMaxLength(50)
                    .HasColumnName("misSnif");

                entity.Property(e => e.NameBank).HasMaxLength(50);

                entity.Property(e => e.NameSnif).HasMaxLength(50);

                entity.Property(e => e.TashlumDate).HasMaxLength(50);
            });

            modelBuilder.Entity<Csvtest1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CSVTest1");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.NameBank).HasMaxLength(50);
            });

            modelBuilder.Entity<Csvtest2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CSVTest2");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KabalaDate).HasColumnType("datetime");

                entity.Property(e => e.MisCheck).HasColumnName("misCheck");

                entity.Property(e => e.MisHeshbon)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MisSnif).HasColumnName("misSnif");

                entity.Property(e => e.NameBank).HasMaxLength(50);

                entity.Property(e => e.NameSnif).HasMaxLength(50);

                entity.Property(e => e.TashlumDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<Cust1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CUST-1");

                entity.Property(e => e.GoremMafne).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(50)
                    .HasColumnName("IDCard");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.דוארל)
                    .HasMaxLength(200)
                    .HasColumnName("דואר ל");

                entity.Property(e => e.הערות).HasColumnType("ntext");

                entity.Property(e => e.טלפון1)
                    .HasMaxLength(50)
                    .HasColumnName("טלפון-1");

                entity.Property(e => e.טלפון2)
                    .HasMaxLength(50)
                    .HasColumnName("טלפון-2");

                entity.Property(e => e.לפנותל)
                    .HasMaxLength(200)
                    .HasColumnName("לפנות ל");

                entity.Property(e => e.מיקוד).HasMaxLength(50);

                entity.Property(e => e.מסבית)
                    .HasMaxLength(50)
                    .HasColumnName("מס בית");

                entity.Property(e => e.מסחשבשבת)
                    .HasMaxLength(50)
                    .HasColumnName("מס חשבשבת");

                entity.Property(e => e.סטאטוס).HasMaxLength(50);

                entity.Property(e => e.פקס).HasMaxLength(50);

                entity.Property(e => e.קידומתטלפון1)
                    .HasMaxLength(50)
                    .HasColumnName("קידומת טלפון-1");

                entity.Property(e => e.קידומתטלפון2)
                    .HasMaxLength(50)
                    .HasColumnName("קידומת טלפון-2");

                entity.Property(e => e.קידומתפקס)
                    .HasMaxLength(50)
                    .HasColumnName("קידומת פקס");

                entity.Property(e => e.רחוב).HasMaxLength(50);

                entity.Property(e => e.שםישוב)
                    .HasMaxLength(50)
                    .HasColumnName("שם ישוב");

                entity.Property(e => e.שםמטפל)
                    .HasMaxLength(50)
                    .HasColumnName("שם מטפל");

                entity.Property(e => e.תטיפול)
                    .HasMaxLength(50)
                    .HasColumnName("ת.טיפול");

                entity.Property(e => e.תפתיחה)
                    .HasMaxLength(50)
                    .HasColumnName("ת.פתיחה");
            });

            modelBuilder.Entity<DashCapacity>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DashCapacity");

                entity.Property(e => e.Assisted).HasMaxLength(50);

                entity.Property(e => e.CompanyId).HasColumnName("CompanyID");

                entity.Property(e => e.Key1).HasMaxLength(50);

                entity.Property(e => e.Nursing).HasMaxLength(50);

                entity.Property(e => e.Support).HasMaxLength(50);
            });

            modelBuilder.Entity<DayarimFromxl>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.F11).HasColumnType("smalldatetime");

                entity.Property(e => e.F7).HasColumnType("smalldatetime");

                entity.Property(e => e.F8).HasColumnType("smalldatetime");

                entity.Property(e => e.Gender)
                    .HasMaxLength(255)
                    .HasColumnName("gender");

                entity.Property(e => e.Hanash).HasMaxLength(255);

                entity.Property(e => e.HeskemKind).HasMaxLength(255);

                entity.Property(e => e.Nameview).HasMaxLength(255);
            });

            modelBuilder.Entity<DietNutritionClient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DietNutritionClient");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Subject).IsRequired();

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserCreate)
                    .IsRequired()
                    .HasMaxLength(300);
            });

            modelBuilder.Entity<Discount>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaDiscounts_PK")
                    .IsClustered(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Details).HasMaxLength(50);

                entity.Property(e => e.OptDiscount)
                    .HasColumnName("optDiscount")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<DocDesign>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaDocDesign_PK")
                    .IsClustered(false);

                entity.ToTable("DocDesign");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.ImgPath)
                    .HasMaxLength(255)
                    .HasColumnName("imgPath")
                    .HasComment("תמונת הכותרת למסמך העסקי");

                entity.Property(e => e.LblDiscount)
                    .HasMaxLength(15)
                    .HasColumnName("lblDiscount");

                entity.Property(e => e.LblKod)
                    .HasMaxLength(15)
                    .HasColumnName("lblKod");

                entity.Property(e => e.LblParitName)
                    .HasMaxLength(20)
                    .HasColumnName("lblParitName");

                entity.Property(e => e.LblPrice)
                    .HasMaxLength(15)
                    .HasColumnName("lblPrice");

                entity.Property(e => e.LblQuantity)
                    .HasMaxLength(15)
                    .HasColumnName("lblQuantity");

                entity.Property(e => e.LblTotal)
                    .HasMaxLength(15)
                    .HasColumnName("lblTotal");
            });

            modelBuilder.Entity<DocType>(entity =>
            {
                entity.HasKey(e => e.TypeId)
                    .HasName("aaaaaDocType_PK")
                    .IsClustered(false);

                entity.ToTable("DocType");

                entity.Property(e => e.TypeId)
                    .ValueGeneratedNever()
                    .HasColumnName("TypeID");

                entity.Property(e => e.DocExt).HasMaxLength(4);
            });

            modelBuilder.Entity<DocType1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("DocType1");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DocDetails).HasMaxLength(82);

                entity.Property(e => e.DocId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("DocID");
            });

            modelBuilder.Entity<Email>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaEmail_PK")
                    .IsClustered(false);

                entity.ToTable("Email");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Body).HasColumnType("ntext");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.EmailAttach).HasMaxLength(255);

                entity.Property(e => e.EmailCopy).HasMaxLength(50);

                entity.Property(e => e.EmailFrom).HasMaxLength(50);

                entity.Property(e => e.EmailSubject).HasMaxLength(255);

                entity.Property(e => e.EmailTo).HasMaxLength(50);

                entity.Property(e => e.FolderId)
                    .HasColumnName("FolderID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.FormatHtml)
                    .HasDefaultValueSql("(0)")
                    .HasComment("בודק אם זהו פורמט html או טקסט");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .HasComment("בודק אם הemail נשלח או התקבל ?");

                entity.HasOne(d => d.Folder)
                    .WithMany(p => p.Emails)
                    .HasForeignKey(d => d.FolderId)
                    .HasConstraintName("Email_FK00");
            });

            modelBuilder.Entity<Email1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Email1");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.EmailDetails).HasColumnType("datetime");

                entity.Property(e => e.EmailFrom).HasMaxLength(50);

                entity.Property(e => e.EmailId).HasColumnName("EmailID");

                entity.Property(e => e.EmailTo).HasMaxLength(50);
            });

            modelBuilder.Entity<EmailAttach>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaEmailAttach_PK")
                    .IsClustered(false);

                entity.ToTable("EmailAttach");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EmailId)
                    .HasColumnName("EmailID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.FileName).HasMaxLength(100);
            });

            modelBuilder.Entity<Emp>(entity =>
            {
                entity.HasKey(e => e.EmpsId)
                    .HasName("emps_id_pk");

                entity.ToTable("emps");

                entity.Property(e => e.EmpsId)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("emps_id");

                entity.Property(e => e.EmpsDate)
                    .HasColumnType("date")
                    .HasColumnName("emps_date");

                entity.Property(e => e.EmpsName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("emps_name");

                entity.Property(e => e.EmpsSalary)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("emps_salary");
            });

            modelBuilder.Entity<ExchangeRate>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Rate)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("rate");

                entity.Property(e => e.RateDate)
                    .HasColumnType("date")
                    .HasColumnName("rateDate");
            });

            modelBuilder.Entity<FamilyHistoryClient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FamilyHistoryClient");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Illness).HasMaxLength(400);

                entity.Property(e => e.Kinship)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Relationship).HasMaxLength(200);

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserCreate)
                    .IsRequired()
                    .HasMaxLength(300);
            });

            modelBuilder.Entity<Fax>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFax_PK")
                    .IsClustered(false);

                entity.ToTable("Fax");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FaxDate).HasColumnType("datetime");

                entity.Property(e => e.FaxFrom).HasMaxLength(25);

                entity.Property(e => e.FaxName).HasMaxLength(50);

                entity.Property(e => e.FaxTheme).HasMaxLength(255);

                entity.Property(e => e.FaxTo).HasMaxLength(25);

                entity.Property(e => e.FolderId)
                    .HasColumnName("FolderID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<FeedBreakClient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FeedBreakClient");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DrugKod)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Reason).HasColumnType("ntext");

                entity.Property(e => e.SolFid).HasColumnName("SolFId");

                entity.Property(e => e.Time1).HasMaxLength(10);

                entity.Property(e => e.TimeB).HasMaxLength(10);

                entity.Property(e => e.TimeE).HasMaxLength(10);

                entity.Property(e => e.UserCreate).HasMaxLength(40);
            });

            modelBuilder.Entity<Feeding>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Feeding");

                entity.HasIndex(e => new { e.FeedingTubeName, e.Type, e.FeedTypeId }, "dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Archive).HasColumnName("archive");

                entity.Property(e => e.FeedingTubeName).HasMaxLength(40);

                entity.Property(e => e.FeedingTubeName2)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Type).HasMaxLength(10);
            });

            modelBuilder.Entity<Folder>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFolders_PK")
                    .IsClustered(false);

                entity.HasIndex(e => e.ClientId, "ClientDetailsFolders")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Archive).HasDefaultValueSql("(0)");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.DateCreate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))")
                    .HasComment("Auto Date()");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.FolderNum)
                    .HasMaxLength(20)
                    .HasComment("מס' התיק :לדוג' 1177/1");

                entity.Property(e => e.FolderPath)
                    .HasMaxLength(255)
                    .HasComment("מיקום קבצי הנתונים");

                entity.Property(e => e.KindId)
                    .HasColumnName("KindID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מאפיין התיק , לדוג':מקרקעין");

                entity.Property(e => e.ResponsibleId)
                    .HasColumnName("ResponsibleID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.StatusId)
                    .HasColumnName("StatusID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מצב התיק לדוג':פתוח,בטיפול");

                entity.Property(e => e.ThemeId)
                    .HasColumnName("ThemeID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<FollowInfection>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.ClientId, e.ParentId, e.BmId, e.Bdel }, "Dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.TsTamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tsTamp");
            });

            modelBuilder.Entity<FormBdikaYezumaDoctor>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormBdikaYezumaDoctor_PK")
                    .IsClustered(false);

                entity.ToTable("FormBdikaYezumaDoctor");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך יצירה");

                entity.Property(e => e.DoctorName1)
                    .HasMaxLength(25)
                    .HasComment("שם הרופא");

                entity.Property(e => e.RecStatus)
                    .HasDefaultValueSql("(0)")
                    .HasComment("12");

                entity.Property(e => e.Skira0)
                    .HasMaxLength(100)
                    .HasComment("סימנים רפואיים");

                entity.Property(e => e.Skira1)
                    .HasMaxLength(100)
                    .HasComment("לחץ דם");

                entity.Property(e => e.Skira10)
                    .HasMaxLength(50)
                    .HasComment("אף");

                entity.Property(e => e.Skira11)
                    .HasMaxLength(50)
                    .HasComment("פה, לוע");

                entity.Property(e => e.Skira12)
                    .HasMaxLength(100)
                    .HasComment("שיניים");

                entity.Property(e => e.Skira13)
                    .HasMaxLength(100)
                    .HasComment("צוואר");

                entity.Property(e => e.Skira14)
                    .HasMaxLength(100)
                    .HasComment("בלוטות לימפה");

                entity.Property(e => e.Skira15)
                    .HasMaxLength(100)
                    .HasComment("ריאות");

                entity.Property(e => e.Skira16)
                    .HasMaxLength(255)
                    .HasComment("לב-כלי דם");

                entity.Property(e => e.Skira17)
                    .HasMaxLength(100)
                    .HasComment("דופק");

                entity.Property(e => e.Skira18)
                    .HasMaxLength(100)
                    .HasComment("שדיים");

                entity.Property(e => e.Skira19)
                    .HasMaxLength(100)
                    .HasComment("בצקות");

                entity.Property(e => e.Skira2)
                    .HasMaxLength(50)
                    .HasComment("מצב הכרה");

                entity.Property(e => e.Skira20)
                    .HasMaxLength(100)
                    .HasComment("בטן");

                entity.Property(e => e.Skira21)
                    .HasMaxLength(100)
                    .HasComment("רקטום");

                entity.Property(e => e.Skira22)
                    .HasMaxLength(100)
                    .HasComment("אברי מין");

                entity.Property(e => e.Skira23)
                    .HasMaxLength(255)
                    .HasComment("שלד שרירים");

                entity.Property(e => e.Skira24)
                    .HasMaxLength(255)
                    .HasComment("בדיקת מצב מנטלי");

                entity.Property(e => e.Skira25)
                    .HasMaxLength(255)
                    .HasComment("בדיקת מצב נפשי");

                entity.Property(e => e.Skira26)
                    .HasColumnType("ntext")
                    .HasComment("בדיקה נוירולוגית");

                entity.Property(e => e.Skira27)
                    .HasColumnType("ntext")
                    .HasComment("סיכום והערות");

                entity.Property(e => e.Skira3)
                    .HasMaxLength(100)
                    .HasComment("מצב תזונתי");

                entity.Property(e => e.Skira4)
                    .HasMaxLength(255)
                    .HasComment("עור");

                entity.Property(e => e.Skira5)
                    .HasMaxLength(100)
                    .HasComment("ראש פנים");

                entity.Property(e => e.Skira6)
                    .HasMaxLength(50)
                    .HasComment("עינים");

                entity.Property(e => e.Skira7)
                    .HasMaxLength(100)
                    .HasComment("ראיה");

                entity.Property(e => e.Skira8)
                    .HasMaxLength(50)
                    .HasComment("משקפיים");

                entity.Property(e => e.Skira9)
                    .HasMaxLength(50)
                    .HasComment("שמיעה");

                entity.Property(e => e.SkiraTheme)
                    .HasMaxLength(255)
                    .HasComment("נושאי הסקירה מופרדים ע\"י @");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<FormBdikaYezumaSiudi>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormBdikaYezumaSiudi_PK")
                    .IsClustered(false);

                entity.ToTable("FormBdikaYezumaSiudi");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Details1)
                    .HasColumnType("ntext")
                    .HasComment("כל נתוני התפקוד לתאריך Date1");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.NurseName)
                    .HasMaxLength(25)
                    .HasComment("שם האחות");

                entity.Property(e => e.TifkudTheme)
                    .HasColumnType("ntext")
                    .HasComment("כל נושאי התפקוד עם המפריד @");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מס' המזהה ליוצר הטופס");
            });

            modelBuilder.Entity<FormChargeReportDetail>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormChargeReportDetails_PK")
                    .IsClustered(false);

                entity.HasIndex(e => e.ReportId, "tblChargesReportFormChargeReportDetails")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChargeDays)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מס' הימים לחיוב בחודש");

                entity.Property(e => e.ChargeSum)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("הסכום הכולל לחיוב");

                entity.Property(e => e.Comments)
                    .HasMaxLength(50)
                    .HasComment("הערות לחיוב");

                entity.Property(e => e.DayarKod).HasMaxLength(6);

                entity.Property(e => e.DayarName).HasMaxLength(30);

                entity.Property(e => e.Quantity).HasDefaultValueSql("(0)");

                entity.Property(e => e.ReportId)
                    .HasColumnName("ReportID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מספר מזהה ע\"פ לדוח החיובים ע\"פ FormChargesReport");

                entity.HasOne(d => d.Report)
                    .WithMany(p => p.FormChargeReportDetails)
                    .HasForeignKey(d => d.ReportId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FormChargeReportDetails_FK00");
            });

            modelBuilder.Entity<FormHospitalize>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormHospitalize_PK")
                    .IsClustered(false);

                entity.ToTable("FormHospitalize");

                entity.HasIndex(e => e.ClientId, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID1")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.UserId, "UserID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasMaxLength(50)
                    .HasColumnName("ClientID");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך יצירת המסמך");

                entity.Property(e => e.MainDetails)
                    .HasColumnType("ntext")
                    .HasComment("מופרד ע\"י @ ובין הרשומות ע\"י  ;");

                entity.Property(e => e.MainThemes)
                    .HasMaxLength(255)
                    .HasComment("מופרד ע\"י @");

                entity.Property(e => e.TifkudDetails)
                    .HasColumnType("ntext")
                    .HasComment("מופקד ע\"י @");

                entity.Property(e => e.TifkudThemes)
                    .HasMaxLength(255)
                    .HasComment("מופרד ע\"י @");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UserName).HasMaxLength(50);
            });

            modelBuilder.Entity<FormKabalaTifkud>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormKabalaTifkud_PK")
                    .IsClustered(false);

                entity.ToTable("FormKabalaTifkud");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DayarName).HasMaxLength(30);

                entity.Property(e => e.Height)
                    .HasDefaultValueSql("(0)")
                    .HasComment("גובה");

                entity.Property(e => e.KabalaDate).HasColumnType("datetime");

                entity.Property(e => e.Locked)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם הטופס נעול?");

                entity.Property(e => e.Mahlaka).HasMaxLength(20);

                entity.Property(e => e.NurseName)
                    .HasMaxLength(25)
                    .HasComment("שם האחות");

                entity.Property(e => e.TifkudFiziDetails)
                    .HasMaxLength(255)
                    .HasComment("נתוני התפקוד הפיזי עם המפריד.");

                entity.Property(e => e.TifkudFiziTheme)
                    .HasMaxLength(255)
                    .HasComment("רשימת כל נושאי התפקוד הפיזי עם המפריד: @");

                entity.Property(e => e.TifkudNafshiDetails)
                    .HasMaxLength(255)
                    .HasComment("נתוני התפקוד הנפשי עם המפריד.");

                entity.Property(e => e.TifkudNafshiTheme)
                    .HasMaxLength(255)
                    .HasComment("רשימת כל נושאי התפקוד הנפשי עם המפריד: @");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מס' המזהה ליוצר הטופס");

                entity.Property(e => e.Weight)
                    .HasDefaultValueSql("(0)")
                    .HasComment("משקל");
            });

            modelBuilder.Entity<FormKabalatHole>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormKabalatHole_PK")
                    .IsClustered(false);

                entity.ToTable("FormKabalatHole");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BAdminUnlock).HasColumnName("bAdminUnlock");

                entity.Property(e => e.BConv).HasColumnName("bConv");

                entity.Property(e => e.BConv2).HasColumnName("bConv2");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DeseaseCurrent)
                    .HasColumnType("ntext")
                    .HasComment("תיאור מחלה  נוכחית");

                entity.Property(e => e.DoctorName1)
                    .HasMaxLength(25)
                    .HasComment("שם הרופא");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.KabalaSummery).HasColumnType("ntext");

                entity.Property(e => e.ListLocked).HasMaxLength(300);

                entity.Property(e => e.Locked)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם הטופס נעול ? (מרגע זה לא ניתן להוסיף/לערוך נתונים)");

                entity.Property(e => e.MentalStatus).HasMaxLength(255);

                entity.Property(e => e.NafshiStatus).HasMaxLength(255);

                entity.Property(e => e.Prognoza).HasMaxLength(255);

                entity.Property(e => e.RecStatus).HasDefaultValueSql("(0)");

                entity.Property(e => e.RekaId).HasColumnName("RekaID");

                entity.Property(e => e.SikumId).HasColumnName("SikumID");

                entity.Property(e => e.Skira1)
                    .HasMaxLength(255)
                    .HasComment("מצב כללי");

                entity.Property(e => e.Skira10)
                    .HasMaxLength(255)
                    .HasComment("שדיים");

                entity.Property(e => e.Skira11)
                    .HasMaxLength(255)
                    .HasComment("חזה");

                entity.Property(e => e.Skira12)
                    .HasMaxLength(255)
                    .HasComment("ריאות");

                entity.Property(e => e.Skira13)
                    .HasMaxLength(255)
                    .HasComment("לב");

                entity.Property(e => e.Skira14)
                    .HasMaxLength(255)
                    .HasComment("דפקים פריפרים");

                entity.Property(e => e.Skira15)
                    .HasMaxLength(255)
                    .HasComment("בטן");

                entity.Property(e => e.Skira16)
                    .HasMaxLength(255)
                    .HasComment("בצקות");

                entity.Property(e => e.Skira17)
                    .HasMaxLength(255)
                    .HasComment("בדיקה נוירולוגית (הכרה, דיבור, מצב נפשי)");

                entity.Property(e => e.Skira18)
                    .HasMaxLength(255)
                    .HasComment("אישונים");

                entity.Property(e => e.Skira19)
                    .HasColumnType("ntext")
                    .HasComment("גפיים (תנועות, כח גס, טונוס שרירים)");

                entity.Property(e => e.Skira2)
                    .HasMaxLength(255)
                    .HasComment("עור");

                entity.Property(e => e.Skira20)
                    .HasMaxLength(255)
                    .HasComment("הליכה");

                entity.Property(e => e.Skira21)
                    .HasMaxLength(255)
                    .HasComment("עמידה");

                entity.Property(e => e.Skira22)
                    .HasMaxLength(255)
                    .HasComment("תחושה שטחית");

                entity.Property(e => e.Skira23)
                    .HasMaxLength(255)
                    .HasComment("תחושה עמוקה");

                entity.Property(e => e.Skira24)
                    .HasMaxLength(255)
                    .HasComment("החזרים גידיים");

                entity.Property(e => e.Skira25)
                    .HasMaxLength(255)
                    .HasComment("החזרים פתלוגיים");

                entity.Property(e => e.Skira26)
                    .HasMaxLength(255)
                    .HasComment("סוגרים");

                entity.Property(e => e.Skira2Id).HasColumnName("Skira2ID");

                entity.Property(e => e.Skira3)
                    .HasMaxLength(255)
                    .HasComment("בלוטות לימפה");

                entity.Property(e => e.Skira4)
                    .HasMaxLength(255)
                    .HasComment("ראש");

                entity.Property(e => e.Skira5)
                    .HasMaxLength(255)
                    .HasComment("עיניים");

                entity.Property(e => e.Skira6)
                    .HasMaxLength(255)
                    .HasComment("אוזניים");

                entity.Property(e => e.Skira7)
                    .HasMaxLength(255)
                    .HasComment("אף");

                entity.Property(e => e.Skira8)
                    .HasMaxLength(255)
                    .HasComment("פה ולוע");

                entity.Property(e => e.Skira9)
                    .HasMaxLength(255)
                    .HasComment("צוואר");

                entity.Property(e => e.SkiraId).HasColumnName("SkiraID");

                entity.Property(e => e.SkiraTheme).HasColumnType("ntext");

                entity.Property(e => e.TifkudStatus).HasMaxLength(255);

                entity.Property(e => e.TipulPlan).HasMaxLength(255);

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<FormMaakavPhiziotrapium>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormMaakavPhiziotrapia_PK")
                    .IsClustered(false);

                entity.HasIndex(e => e.Theme, "Theme")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך רישום הטיפול/האבחנה");

                entity.Property(e => e.Item)
                    .HasMaxLength(255)
                    .HasComment("פירוט המחלה והטיפול");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("(0)");

                entity.Property(e => e.Theme)
                    .HasMaxLength(30)
                    .HasComment("נושא הרשומה");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UserName).HasMaxLength(25);
            });

            modelBuilder.Entity<FormMaakavRefuee>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormMaakavRefuee_PK")
                    .IsClustered(false);

                entity.ToTable("FormMaakavRefuee");

                entity.HasIndex(e => e.Theme, "Theme")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך רישום הטיפול/האבחנה");

                entity.Property(e => e.Item)
                    .HasMaxLength(255)
                    .HasComment("פירוט המחלה והטיפול");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("(0)");

                entity.Property(e => e.Theme)
                    .HasMaxLength(30)
                    .HasComment("נושא הרשומה");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UserName).HasMaxLength(25);
            });

            modelBuilder.Entity<FormMaakavSiudi>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormMaakavSiudi_PK")
                    .IsClustered(false);

                entity.ToTable("FormMaakavSiudi");

                entity.HasIndex(e => e.Theme, "Theme")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך רישום הטיפול/האבחנה");

                entity.Property(e => e.Item)
                    .HasMaxLength(255)
                    .HasComment("פירוט המחלה והטיפול");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("(0)");

                entity.Property(e => e.Theme)
                    .HasMaxLength(30)
                    .HasComment("נושא הרשומה");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UserName).HasMaxLength(25);
            });

            modelBuilder.Entity<FormMaakavSocial>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormMaakavSocial_PK")
                    .IsClustered(false);

                entity.ToTable("FormMaakavSocial");

                entity.HasIndex(e => e.Theme, "Theme")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך רישום הטיפול/האבחנה");

                entity.Property(e => e.Item)
                    .HasMaxLength(255)
                    .HasComment("פירוט המחלה והטיפול");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("(0)");

                entity.Property(e => e.Theme)
                    .HasMaxLength(30)
                    .HasComment("נושא הרשומה");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UserName).HasMaxLength(25);
            });

            modelBuilder.Entity<FormMarketing>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormMarketing_PK")
                    .IsClustered(false);

                entity.ToTable("FormMarketing");

                entity.HasIndex(e => e.AgafId, "AgafID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ClientId, "ClientID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DiminutionEnterReasonId, "DiminutionEnterReasonID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DiminutionStayReasonId, "DiminutionEnterReasonID1")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.RoomId, "RoomID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.SugestId, "SugestID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TifkudStatusId, "TifkudStatusID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AgafId)
                    .HasColumnName("AgafID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AgafIdV)
                    .HasColumnName("AgafID_V")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מבקר-אגף");

                entity.Property(e => e.BVisitor)
                    .HasColumnName("bVisitor")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DateAsk).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DateVisit1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך אורח");

                entity.Property(e => e.DateVisit2)
                    .HasColumnType("datetime")
                    .HasComment("תאריך סיום אורח");

                entity.Property(e => e.DiminutionEnterPer).HasDefaultValueSql("(0)");

                entity.Property(e => e.DiminutionEnterReasonId)
                    .HasColumnName("DiminutionEnterReasonID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DiminutionStayPer).HasDefaultValueSql("(0)");

                entity.Property(e => e.DiminutionStayReasonId)
                    .HasColumnName("DiminutionStayReasonID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DiurKindId)
                    .HasColumnName("DiurKindID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.EnterMaslul).HasDefaultValueSql("(0)");

                entity.Property(e => e.HilutMax).HasMaxLength(5);

                entity.Property(e => e.HilutMon).HasMaxLength(5);

                entity.Property(e => e.PriceBack).HasMaxLength(50);

                entity.Property(e => e.PriceEnter).HasMaxLength(50);

                entity.Property(e => e.PriceStay).HasMaxLength(50);

                entity.Property(e => e.PriceStaySiudi).HasMaxLength(50);

                entity.Property(e => e.RoomId)
                    .HasColumnName("RoomID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RoomIdV)
                    .HasColumnName("RoomID_V")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מבקר-חדר");

                entity.Property(e => e.SugestId)
                    .HasColumnName("SugestID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מס' הצעה");

                entity.Property(e => e.TifkudStatusId)
                    .HasColumnName("TifkudStatusID")
                    .HasDefaultValueSql("(0)");

                entity.HasOne(d => d.Agaf)
                    .WithMany(p => p.FormMarketings)
                    .HasForeignKey(d => d.AgafId)
                    .HasConstraintName("FormMarketing_FK01");

                entity.HasOne(d => d.Room)
                    .WithMany(p => p.FormMarketings)
                    .HasForeignKey(d => d.RoomId)
                    .HasConstraintName("FormMarketing_FK02");
            });

            modelBuilder.Entity<FormMedahRefuee>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormMedahRefuee_PK")
                    .IsClustered(false);

                entity.ToTable("FormMedahRefuee");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AliaYear).HasMaxLength(4);

                entity.Property(e => e.BClosed)
                    .HasColumnName("bClosed")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם הטופס סגור מפני עריכה");

                entity.Property(e => e.BirthCountry).HasMaxLength(15);

                entity.Property(e => e.BirthYear).HasMaxLength(4);

                entity.Property(e => e.Bituah).HasMaxLength(50);

                entity.Property(e => e.Childs).HasDefaultValueSql("(0)");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.FamilyStatus).HasMaxLength(10);

                entity.Property(e => e.FatherName).HasMaxLength(15);

                entity.Property(e => e.Fname)
                    .HasMaxLength(15)
                    .HasColumnName("FName");

                entity.Property(e => e.Job).HasMaxLength(50);

                entity.Property(e => e.Lname)
                    .HasMaxLength(15)
                    .HasColumnName("LName");

                entity.Property(e => e.MotherName).HasMaxLength(15);

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<FormPkudot>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormPkudot_PK")
                    .IsClustered(false);

                entity.ToTable("FormPkudot");

                entity.HasIndex(e => new { e.ClientId, e.DateS }, "<Name of Missing Index, sysname,>")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DrugFormat, "DrugFormat")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DrugKod, "DrugKod")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DrugMinunType, "DrugMinunType")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.ClientId, e.RecKind, e.TStamp }, "IX_FormPkudot_ClientID_RecKind_tStamp")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.NumToInvite, "NumToInvite")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.Id, e.ClientId, e.RecKind, e.RecStatus, e.UserName }, "idd")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.ClientId, e.RecKind, e.RecStatus, e.DateE }, "idx_FormPkudot_ClientID_RecKind_RecStatus_DateE_inc_DrugName_DrugKod_KabalaID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.BlisterMainId, "idx_FormPkudot_inc_BlisterData")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TStamp, "idx_FormPkudot_tStamp_inc_ClientID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BConv).HasColumnName("bConv");

                entity.Property(e => e.BConv2).HasColumnName("bConv2");

                entity.Property(e => e.BMoveToActive).HasColumnName("bMoveToActive");

                entity.Property(e => e.BZzz).HasColumnName("bZZZ");

                entity.Property(e => e.BackClientId).HasColumnName("BackClientID");

                entity.Property(e => e.BackDateE).HasColumnType("datetime");

                entity.Property(e => e.BackDateS).HasColumnType("datetime");

                entity.Property(e => e.BackE).HasColumnType("datetime");

                entity.Property(e => e.Bexp).HasColumnName("bexp");

                entity.Property(e => e.BlisterMainId).HasColumnName("BlisterMainID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientProtocolCourseId).HasColumnName("ClientProtocolCourseID");

                entity.Property(e => e.Comments).HasMaxLength(50);

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך רישום הטיפול/האבחנה");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateEy)
                    .HasColumnType("datetime")
                    .HasColumnName("DateEY");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DateStartNurse)
                    .HasColumnType("datetime")
                    .HasComment("תאריך ההתחלה בפועל ע\"י האחות");

                entity.Property(e => e.DateStopDoctor)
                    .HasColumnType("datetime")
                    .HasComment("תאריך ההפסקה בפקודת הרופא");

                entity.Property(e => e.DateStopDoctorOld)
                    .HasMaxLength(10)
                    .HasComment("תאריך ההפסקה הקודם -במידה ובוצעו 2 הפסקות");

                entity.Property(e => e.DateStopNurse)
                    .HasColumnType("datetime")
                    .HasComment("תאריך ההפסקה בפועל ע\"י האחות");

                entity.Property(e => e.DateUpdate).HasColumnType("datetime");

                entity.Property(e => e.DatesY).HasColumnType("datetime");

                entity.Property(e => e.Dosage)
                    .HasMaxLength(255)
                    .HasComment("מינון");

                entity.Property(e => e.DrugAvhanaDesc).HasMaxLength(400);

                entity.Property(e => e.DrugAvhanaId).HasColumnName("DrugAvhanaID");

                entity.Property(e => e.DrugAvhanaKod).HasMaxLength(12);

                entity.Property(e => e.DrugFormat)
                    .HasMaxLength(50)
                    .HasComment("tab,capsule");

                entity.Property(e => e.DrugGenricName).HasMaxLength(800);

                entity.Property(e => e.DrugKind)
                    .HasDefaultValueSql("((0))")
                    .HasComment("1-זמני,0-כרוני,2-SOS");

                entity.Property(e => e.DrugKod).HasMaxLength(50);

                entity.Property(e => e.DrugMinunNum).HasMaxLength(20);

                entity.Property(e => e.DrugMinunType).HasMaxLength(50);

                entity.Property(e => e.DrugName)
                    .HasMaxLength(255)
                    .HasComment("שם התרופה/הטיפול");

                entity.Property(e => e.DrugTakeDays).HasMaxLength(30);

                entity.Property(e => e.DrugTakeJumpDays)
                    .HasDefaultValueSql("((0))")
                    .HasComment("ימים לדילוג בנטילת תרופה");

                entity.Property(e => e.DrugTakeKind).HasMaxLength(20);

                entity.Property(e => e.DrugTakeTimes).HasMaxLength(100);

                entity.Property(e => e.DrugType)
                    .HasDefaultValueSql("((0))")
                    .HasComment("0-chr,1-sos,2-acut");

                entity.Property(e => e.DrugkodOld).HasColumnName("drugkodOld");

                entity.Property(e => e.ExportAva).HasMaxLength(100);

                entity.Property(e => e.ExportAvaDate).HasColumnType("datetime");

                entity.Property(e => e.FirstDate)
                    .HasColumnType("datetime")
                    .HasColumnName("firstDate");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Frequency)
                    .HasMaxLength(4)
                    .HasComment("תדירות");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.GvKod)
                    .HasMaxLength(50)
                    .HasColumnName("gvKod");

                entity.Property(e => e.Helbon).HasDefaultValueSql("((0))");

                entity.Property(e => e.Hours)
                    .HasMaxLength(20)
                    .HasComment("שעות נטילה");

                entity.Property(e => e.IdInh).HasColumnName("IdINH");

                entity.Property(e => e.Irpa).HasMaxLength(30);

                entity.Property(e => e.Item)
                    .HasMaxLength(200)
                    .HasComment("שדה זמני בגירסה ישנה");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.Kalory).HasDefaultValueSql("((0))");

                entity.Property(e => e.LastUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("lastUpdate");

                entity.Property(e => e.MirshamDate).HasColumnType("datetime");

                entity.Property(e => e.Monthly)
                    .HasDefaultValueSql("((0))")
                    .HasComment("כמות חודשית");

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.NumToInvite).HasDefaultValueSql("((0))");

                entity.Property(e => e.NurseNameStart)
                    .HasMaxLength(25)
                    .HasComment("שם האחות המתחילה");

                entity.Property(e => e.NurseNameStop)
                    .HasMaxLength(25)
                    .HasComment("שם האחות המפסיקה");

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.PlanId).HasColumnName("PlanID");

                entity.Property(e => e.RecKind)
                    .HasDefaultValueSql("((0))")
                    .HasComment("0-תרופה, 1-טיפול");

                entity.Property(e => e.RecStatus)
                    .HasDefaultValueSql("((0))")
                    .HasComment("0-פתוח, 1-נעול, 2- הופסק");

                entity.Property(e => e.ResponsibleGroupId)
                    .HasColumnName("ResponsibleGroupID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SolutionDesc)
                    .IsRequired()
                    .HasMaxLength(300)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SolutionKod)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SolutionMinunNum)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SolutionMinunType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.StopUserName).HasMaxLength(50);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TakePerDay).HasDefaultValueSql("((0))");

                entity.Property(e => e.TakePerOne).HasDefaultValueSql("((0))");

                entity.Property(e => e.Taken)
                    .HasDefaultValueSql("((0))")
                    .HasComment("אופן לקיחה");

                entity.Property(e => e.TipulName)
                    .HasMaxLength(100)
                    .HasComment("שם הטיפול:חבישה,אינהלציה וכו'");

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UserName)
                    .HasMaxLength(25)
                    .HasComment("הרופא נותן הפקודה");
            });

            modelBuilder.Entity<FormPkudotCardexView>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("FormPkudotCardex_view");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.DateE).HasMaxLength(30);

                entity.Property(e => e.DateS).HasMaxLength(30);

                entity.Property(e => e.DateS2).HasColumnType("datetime");

                entity.Property(e => e.Datee2)
                    .HasColumnType("datetime")
                    .HasColumnName("datee2");

                entity.Property(e => e.DatesCardex).HasMaxLength(28);

                entity.Property(e => e.Days).HasMaxLength(4000);

                entity.Property(e => e.DrugDetails).HasMaxLength(516);

                entity.Property(e => e.DrugMinun).HasMaxLength(65);

                entity.Property(e => e.DrugTakeDays).HasMaxLength(30);

                entity.Property(e => e.DrugTakeTimes).HasMaxLength(4000);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.StopResone).HasColumnName("stopResone");

                entity.Property(e => e.StopUserName)
                    .HasMaxLength(50)
                    .HasColumnName("stopUserName");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.TimeE).HasMaxLength(5);

                entity.Property(e => e.TimeS).HasMaxLength(5);

                entity.Property(e => e.TipulDetails)
                    .IsRequired()
                    .HasMaxLength(383);

                entity.Property(e => e.TipulName).HasMaxLength(703);

                entity.Property(e => e.TtDateE).HasColumnName("TT_DateE");

                entity.Property(e => e.UserCreate).HasMaxLength(30);
            });

            modelBuilder.Entity<FormPkudotComp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("FormPkudot_comp1");

                entity.Property(e => e.BConv).HasColumnName("bConv");

                entity.Property(e => e.BConv2).HasColumnName("bConv2");

                entity.Property(e => e.BMoveToActive).HasColumnName("bMoveToActive");

                entity.Property(e => e.BZzz).HasColumnName("bZZZ");

                entity.Property(e => e.BackClientId).HasColumnName("BackClientID");

                entity.Property(e => e.BackDateE).HasColumnType("datetime");

                entity.Property(e => e.BackDateS).HasColumnType("datetime");

                entity.Property(e => e.BackE).HasColumnType("datetime");

                entity.Property(e => e.Bexp).HasColumnName("bexp");

                entity.Property(e => e.BlisterMainId).HasColumnName("BlisterMainID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasMaxLength(50);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateEy)
                    .HasColumnType("datetime")
                    .HasColumnName("DateEY");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DateStartNurse).HasColumnType("datetime");

                entity.Property(e => e.DateStopDoctor).HasColumnType("datetime");

                entity.Property(e => e.DateStopDoctorOld).HasMaxLength(10);

                entity.Property(e => e.DateStopNurse).HasColumnType("datetime");

                entity.Property(e => e.DateUpdate).HasColumnType("datetime");

                entity.Property(e => e.DatesY).HasColumnType("datetime");

                entity.Property(e => e.Dosage).HasMaxLength(255);

                entity.Property(e => e.DrugAvhanaDesc).HasMaxLength(400);

                entity.Property(e => e.DrugAvhanaId).HasColumnName("DrugAvhanaID");

                entity.Property(e => e.DrugAvhanaKod).HasMaxLength(12);

                entity.Property(e => e.DrugComments).HasMaxLength(250);

                entity.Property(e => e.DrugFormat).HasMaxLength(50);

                entity.Property(e => e.DrugGenricName).HasMaxLength(800);

                entity.Property(e => e.DrugKod).HasMaxLength(50);

                entity.Property(e => e.DrugMinunNum).HasMaxLength(20);

                entity.Property(e => e.DrugMinunType).HasMaxLength(50);

                entity.Property(e => e.DrugName).HasMaxLength(255);

                entity.Property(e => e.DrugTakeDays).HasMaxLength(30);

                entity.Property(e => e.DrugTakeKind).HasMaxLength(20);

                entity.Property(e => e.DrugTakeTimes).HasMaxLength(100);

                entity.Property(e => e.DrugkodOld).HasColumnName("drugkodOld");

                entity.Property(e => e.ExportAva).HasMaxLength(100);

                entity.Property(e => e.ExportAvaDate).HasColumnType("datetime");

                entity.Property(e => e.FirstDate)
                    .HasColumnType("datetime")
                    .HasColumnName("firstDate");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Frequency).HasMaxLength(4);

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.GvKod)
                    .HasMaxLength(50)
                    .HasColumnName("gvKod");

                entity.Property(e => e.Hours).HasMaxLength(20);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IdInh).HasColumnName("IdINH");

                entity.Property(e => e.Irpa).HasMaxLength(30);

                entity.Property(e => e.Item).HasMaxLength(200);

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.LastUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("lastUpdate");

                entity.Property(e => e.MirshamDate).HasColumnType("datetime");

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.NurseNameStart).HasMaxLength(25);

                entity.Property(e => e.NurseNameStop).HasMaxLength(25);

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.PlanId).HasColumnName("PlanID");

                entity.Property(e => e.ResponsibleGroupId).HasColumnName("ResponsibleGroupID");

                entity.Property(e => e.StopUserName).HasMaxLength(50);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.TipulDetails).HasMaxLength(300);

                entity.Property(e => e.TipulName).HasMaxLength(100);

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserName).HasMaxLength(25);
            });

            modelBuilder.Entity<FormTipulPlan>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaFormTipulPlan_PK")
                    .IsClustered(false);

                entity.ToTable("FormTipulPlan");

                entity.HasIndex(e => e.Id, "ID")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Estimation)
                    .HasMaxLength(255)
                    .HasComment("הערכה");

                entity.Property(e => e.RecStatus)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מצב הרשומה:0-פתוח, 1-סגור, 2-מחוק");

                entity.Property(e => e.Siudi)
                    .HasMaxLength(255)
                    .HasComment("התערבות סיעודית");

                entity.Property(e => e.Target)
                    .HasMaxLength(255)
                    .HasComment("מטרות הטיפול");

                entity.Property(e => e.Theme).HasMaxLength(50);

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<GynecologicalHclient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GynecologicalHClient");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.ContraceptionCurrent).HasMaxLength(500);

                entity.Property(e => e.ContraceptionPast).HasMaxLength(500);

                entity.Property(e => e.CurrentHrt)
                    .HasMaxLength(100)
                    .HasColumnName("CurrentHRT");

                entity.Property(e => e.CurrentHrtid).HasColumnName("CurrentHRTId");

                entity.Property(e => e.Datefirstperiod).HasColumnType("datetime");

                entity.Property(e => e.EndometriosisId).HasMaxLength(200);

                entity.Property(e => e.FertilityProblemsId).HasMaxLength(200);

                entity.Property(e => e.Hypomenorrhea).HasMaxLength(400);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Lastmenstruationdate).HasColumnType("datetime");

                entity.Property(e => e.PastHrt)
                    .HasMaxLength(100)
                    .HasColumnName("PastHRT");

                entity.Property(e => e.PastHrtid).HasColumnName("PastHRTId");

                entity.Property(e => e.Pms)
                    .HasMaxLength(700)
                    .HasColumnName("PMS");

                entity.Property(e => e.ProblemsDeliveryId).HasMaxLength(200);

                entity.Property(e => e.ProblemsPregnancyId).HasMaxLength(200);

                entity.Property(e => e.StdorPid)
                    .HasMaxLength(400)
                    .HasColumnName("STDOrPID");

                entity.Property(e => e.Symptoms).HasMaxLength(400);

                entity.Property(e => e.TreatmentsId).HasMaxLength(200);

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserCreate)
                    .IsRequired()
                    .HasMaxLength(300);
            });

            modelBuilder.Entity<IConnectRequest>(entity =>
            {
                entity.ToTable("iConnectRequests");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Sla).HasColumnName("SLA");

                entity.Property(e => e.הפניה).IsRequired();

                entity.Property(e => e.מחוז)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.מרפאה)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.סטאטוס)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.שםיועץ)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("שם_יועץ");

                entity.Property(e => e.תאריךפניה)
                    .HasColumnType("datetime")
                    .HasColumnName("תאריך_פניה");

                entity.Property(e => e.תחום)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<IConnectRequestsEng>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("iConnectRequests_ENG");

                entity.Property(e => e.Area)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Clinic)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Doctor)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Priority).HasMaxLength(50);

                entity.Property(e => e.Request).IsRequired();

                entity.Property(e => e.RequestDate).HasColumnType("datetime");

                entity.Property(e => e.Sla).HasColumnName("SLA");

                entity.Property(e => e.Speciality)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<LogFile>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("LogFile");

                entity.Property(e => e.Action).HasMaxLength(50);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.TableName).HasMaxLength(50);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<MabarAv>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("mabarAv");

                entity.Property(e => e.Item)
                    .HasMaxLength(500)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<Madadim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Madadim");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.MadadZarhan).HasMaxLength(255);

                entity.Property(e => e.שדה3).HasMaxLength(255);

                entity.Property(e => e.שדה4).HasMaxLength(255);
            });

            modelBuilder.Entity<MbrPrice>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("mbr_price");

                entity.Property(e => e.F1).HasMaxLength(255);

                entity.Property(e => e.F2).HasMaxLength(255);

                entity.Property(e => e.F7).HasColumnType("datetime");

                entity.Property(e => e.F8).HasColumnType("datetime");
            });

            modelBuilder.Entity<MedGroupAtc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MedGroupAtc");

                entity.HasIndex(e => e.KodAtc, "UQ__MedGroup__6AA8A8920E6F33AC")
                    .IsUnique();

                entity.HasIndex(e => e.GroupName, "UQ__MedGroup__6EFCD434172D00C3")
                    .IsUnique();

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Ddd).HasColumnName("DDD");

                entity.Property(e => e.GroupName)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.KodAtc)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<Medicine>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => e.DrugKod, "IX_Medicines_DrugKod")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.AtcKodId).HasColumnName("AtcKodID");

                entity.Property(e => e.BInviteFromSapak).HasColumnName("bInviteFromSapak");

                entity.Property(e => e.BManual).HasColumnName("bManual");

                entity.Property(e => e.BNeedAllow).HasColumnName("bNeedAllow");

                entity.Property(e => e.BNotShowInCradex).HasColumnName("bNotShowInCradex");

                entity.Property(e => e.BNotShowInMirsham).HasColumnName("bNotShowInMirsham");

                entity.Property(e => e.BSal).HasColumnName("bSal");

                entity.Property(e => e.BToNurse).HasColumnName("bToNurse");

                entity.Property(e => e.ClalitSal).HasColumnName("Clalit_Sal");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.DrugByNurse).HasDefaultValueSql("((0))");

                entity.Property(e => e.DrugFormat).HasMaxLength(50);

                entity.Property(e => e.DrugGroup).HasMaxLength(10);

                entity.Property(e => e.DrugKod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DrugMemo).IsRequired();

                entity.Property(e => e.DrugMirshamKind).HasMaxLength(10);

                entity.Property(e => e.DrugOrders)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.DrugTakeKind).HasMaxLength(20);

                entity.Property(e => e.Drugkodold).HasColumnName("drugkodold");

                entity.Property(e => e.Genric1Desc).HasMaxLength(50);

                entity.Property(e => e.Genric2Desc).HasMaxLength(50);

                entity.Property(e => e.Genric2Unit).HasMaxLength(20);

                entity.Property(e => e.Genric3Desc).HasMaxLength(50);

                entity.Property(e => e.Genric3Unit).HasMaxLength(50);

                entity.Property(e => e.GvKod)
                    .HasMaxLength(100)
                    .HasColumnName("gvKod");

                entity.Property(e => e.HorimKod).HasMaxLength(255);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KodMbr)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.LeumitSal).HasColumnName("Leumit_Sal");

                entity.Property(e => e.MacabiSal).HasColumnName("Macabi_Sal");

                entity.Property(e => e.MelayKod).HasMaxLength(50);

                entity.Property(e => e.MelaykodOld).HasColumnName("melaykodOld");

                entity.Property(e => e.MeuhedetSal).HasColumnName("Meuhedet_Sal");

                entity.Property(e => e.MinunType).HasMaxLength(50);

                entity.Property(e => e.MinunType2).HasMaxLength(20);

                entity.Property(e => e.MiunId).HasColumnName("MiunID");

                entity.Property(e => e.OtcDrug).HasDefaultValueSql("((0))");

                entity.Property(e => e.PackingSize)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.PharmaDescription).HasMaxLength(50);

                entity.Property(e => e.PriceComments).HasMaxLength(100);

                entity.Property(e => e.PriceUpdateDate).HasColumnType("smalldatetime");

                entity.Property(e => e.PriceUpdateUser).HasMaxLength(30);

                entity.Property(e => e.RegishutMsg).HasMaxLength(50);

                entity.Property(e => e.SeegnalCode)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TipuliDescription).HasMaxLength(50);

                entity.Property(e => e.TipulikodMbr).HasColumnName("tipulikodMbr");

                entity.Property(e => e.TipulikodMbrDesc)
                    .HasMaxLength(500)
                    .HasColumnName("tipulikodMbrDesc");

                entity.Property(e => e.TradeName).HasMaxLength(255);

                entity.Property(e => e.TradeNameShort).HasMaxLength(100);

                entity.Property(e => e.Vat).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<MedicineGeneric>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MedicineGeneric");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.DrugKod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.MinunType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<MedicinesComp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Medicines_comp1");

                entity.Property(e => e.AtcKodId).HasColumnName("AtcKodID");

                entity.Property(e => e.BInviteFromSapak).HasColumnName("bInviteFromSapak");

                entity.Property(e => e.BManual).HasColumnName("bManual");

                entity.Property(e => e.BNeedAllow).HasColumnName("bNeedAllow");

                entity.Property(e => e.BNotShowInCradex).HasColumnName("bNotShowInCradex");

                entity.Property(e => e.BNotShowInMirsham).HasColumnName("bNotShowInMirsham");

                entity.Property(e => e.BSal).HasColumnName("bSal");

                entity.Property(e => e.BToNurse).HasColumnName("bToNurse");

                entity.Property(e => e.ClalitSal).HasColumnName("Clalit_Sal");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.DrugFormat).HasMaxLength(50);

                entity.Property(e => e.DrugGroup).HasMaxLength(10);

                entity.Property(e => e.DrugKod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DrugMemo).IsRequired();

                entity.Property(e => e.DrugMirshamKind).HasMaxLength(10);

                entity.Property(e => e.DrugOrders)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.DrugTakeKind).HasMaxLength(20);

                entity.Property(e => e.Drugkodold).HasColumnName("drugkodold");

                entity.Property(e => e.Genric1Desc).HasMaxLength(50);

                entity.Property(e => e.Genric2Desc).HasMaxLength(50);

                entity.Property(e => e.Genric2Unit).HasMaxLength(20);

                entity.Property(e => e.Genric3Desc).HasMaxLength(50);

                entity.Property(e => e.Genric3Unit).HasMaxLength(50);

                entity.Property(e => e.GvKod)
                    .HasMaxLength(100)
                    .HasColumnName("gvKod");

                entity.Property(e => e.HorimKod).HasMaxLength(255);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KodMbr)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.LeumitSal).HasColumnName("Leumit_Sal");

                entity.Property(e => e.MacabiSal).HasColumnName("Macabi_Sal");

                entity.Property(e => e.MelayKod).HasMaxLength(50);

                entity.Property(e => e.MelaykodOld).HasColumnName("melaykodOld");

                entity.Property(e => e.MeuhedetSal).HasColumnName("Meuhedet_Sal");

                entity.Property(e => e.MinunType).HasMaxLength(50);

                entity.Property(e => e.MinunType2).HasMaxLength(20);

                entity.Property(e => e.MiunId).HasColumnName("MiunID");

                entity.Property(e => e.PackingSize)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.PharmaDescription).HasMaxLength(50);

                entity.Property(e => e.PriceComments).HasMaxLength(100);

                entity.Property(e => e.PriceUpdateDate).HasColumnType("datetime");

                entity.Property(e => e.PriceUpdateUser).HasMaxLength(30);

                entity.Property(e => e.RegishutMsg).HasMaxLength(50);

                entity.Property(e => e.TipuliDescription).HasMaxLength(50);

                entity.Property(e => e.TipulikodMbr).HasColumnName("tipulikodMbr");

                entity.Property(e => e.TipulikodMbrDesc)
                    .HasMaxLength(500)
                    .HasColumnName("tipulikodMbrDesc");

                entity.Property(e => e.TradeName).HasMaxLength(255);

                entity.Property(e => e.TradeNameShort).HasMaxLength(100);
            });

            modelBuilder.Entity<MedicinesTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MedicinesTemp");

                entity.Property(e => e.BInviteFromSapak).HasColumnName("bInviteFromSapak");

                entity.Property(e => e.BManual).HasColumnName("bManual");

                entity.Property(e => e.BNeedAllow).HasColumnName("bNeedAllow");

                entity.Property(e => e.BNotShowInCradex).HasColumnName("bNotShowInCradex");

                entity.Property(e => e.BNotShowInMirsham).HasColumnName("bNotShowInMirsham");

                entity.Property(e => e.BSal).HasColumnName("bSal");

                entity.Property(e => e.BToNurse).HasColumnName("bToNurse");

                entity.Property(e => e.ClalitSal).HasColumnName("Clalit_Sal");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.DrugFormat).HasMaxLength(50);

                entity.Property(e => e.DrugGroup).HasMaxLength(10);

                entity.Property(e => e.DrugKod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DrugMirshamKind).HasMaxLength(10);

                entity.Property(e => e.DrugOrders)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Drugkodold).HasColumnName("drugkodold");

                entity.Property(e => e.Genric1Desc).HasMaxLength(50);

                entity.Property(e => e.Genric2Desc).HasMaxLength(50);

                entity.Property(e => e.Genric2Unit).HasMaxLength(20);

                entity.Property(e => e.Genric3Desc).HasMaxLength(50);

                entity.Property(e => e.Genric3Unit).HasMaxLength(50);

                entity.Property(e => e.GvKod)
                    .HasMaxLength(100)
                    .HasColumnName("gvKod");

                entity.Property(e => e.HorimKod).HasMaxLength(255);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LeumitSal).HasColumnName("Leumit_Sal");

                entity.Property(e => e.MacabiSal).HasColumnName("Macabi_Sal");

                entity.Property(e => e.MelayKod).HasMaxLength(50);

                entity.Property(e => e.MelaykodOld).HasColumnName("melaykodOld");

                entity.Property(e => e.MeuhedetSal).HasColumnName("Meuhedet_Sal");

                entity.Property(e => e.MinunType).HasMaxLength(50);

                entity.Property(e => e.MinunType2).HasMaxLength(20);

                entity.Property(e => e.MiunId).HasColumnName("MiunID");

                entity.Property(e => e.PharmaDescription).HasMaxLength(50);

                entity.Property(e => e.PriceComments).HasMaxLength(100);

                entity.Property(e => e.PriceUpdateDate).HasColumnType("datetime");

                entity.Property(e => e.PriceUpdateUser).HasMaxLength(30);

                entity.Property(e => e.RegishutMsg).HasMaxLength(50);

                entity.Property(e => e.TipuliDescription).HasMaxLength(50);

                entity.Property(e => e.TradeName).HasMaxLength(255);

                entity.Property(e => e.TradeNameOld).HasMaxLength(255);

                entity.Property(e => e.TradeNameShort).HasMaxLength(100);
            });

            modelBuilder.Entity<Message>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AddToOutlook).HasDefaultValueSql("(0)");

                entity.Property(e => e.Answer).HasColumnType("ntext");

                entity.Property(e => e.GotMessage).HasDefaultValueSql("(0)");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.MessageDate).HasColumnType("datetime");

                entity.Property(e => e.MessageFrom).HasMaxLength(25);

                entity.Property(e => e.MessageTo).HasMaxLength(25);

                entity.Property(e => e.MsgToId)
                    .HasColumnName("MsgToID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NType)
                    .HasColumnName("nType")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Request).HasColumnType("ntext");

                entity.Property(e => e.SenderId)
                    .HasColumnName("SenderID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Status)
                    .HasDefaultValueSql("(0)")
                    .HasComment("12");

                entity.Property(e => e.Task2Id)
                    .HasColumnName("Task2ID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<Order>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("orders");

                entity.Property(e => e.NumOfRooms).HasColumnName("num_of_rooms");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("order_date");

                entity.Property(e => e.OrderNum).HasColumnName("order_num");

                entity.Property(e => e.OrderStatus).HasColumnName("order_status");

                entity.Property(e => e.User)
                    .HasMaxLength(50)
                    .HasColumnName("user");
            });

            modelBuilder.Entity<OrderRoom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("order_rooms");

                entity.Property(e => e.Adults).HasColumnName("adults");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.ArriveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("arrive_date");

                entity.Property(e => e.Babies).HasColumnName("babies");

                entity.Property(e => e.Children).HasColumnName("children");

                entity.Property(e => e.ClientId)
                    .HasMaxLength(50)
                    .HasColumnName("client_id");

                entity.Property(e => e.DaysNum).HasColumnName("days_num");

                entity.Property(e => e.DepartureDate)
                    .HasColumnType("datetime")
                    .HasColumnName("departure_date");

                entity.Property(e => e.DoorNum)
                    .HasMaxLength(50)
                    .HasColumnName("door_num");

                entity.Property(e => e.OrderNum).HasColumnName("order_num");

                entity.Property(e => e.Price)
                    .HasColumnType("money")
                    .HasColumnName("price");

                entity.Property(e => e.RoomKindCode).HasColumnName("room_kind_code");

                entity.Property(e => e.RoomNum).HasColumnName("room_num");

                entity.Property(e => e.ServiceCode).HasColumnName("service_code");
            });

            modelBuilder.Entity<OrdersListPrice>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Orders_ListPrice");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .HasColumnName("name");

                entity.Property(e => e.Price)
                    .HasColumnType("money")
                    .HasColumnName("price");
            });

            modelBuilder.Entity<OsTest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("os_test");

                entity.Property(e => e.Code).HasColumnName("code");

                entity.Property(e => e.Msg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("msg");
            });

            modelBuilder.Entity<PasteError>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Paste Errors");

                entity.Property(e => e.Field0).HasColumnType("ntext");

                entity.Property(e => e.Field1).HasColumnType("ntext");
            });

            modelBuilder.Entity<Payment>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaPayments_PK")
                    .IsClustered(false);

                entity.HasIndex(e => e.DocId, "PaymentsChargeID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DocId, "tblHeshDocumentsPayments")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Account).HasMaxLength(15);

                entity.Property(e => e.Active).HasDefaultValueSql("(0)");

                entity.Property(e => e.BMove)
                    .HasColumnName("bMove")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BNoShowOnKupa).HasColumnName("bNoShowOnKupa");

                entity.Property(e => e.Bank).HasMaxLength(50);

                entity.Property(e => e.CheckId)
                    .HasMaxLength(20)
                    .HasColumnName("CheckID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ConfirmCreditNum)
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CreditKind).HasMaxLength(30);

                entity.Property(e => e.CreditLastDate).HasColumnType("datetime");

                entity.Property(e => e.CreditOwner)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DocId).HasColumnName("DocID");

                entity.Property(e => e.HafkadaId).HasColumnName("HafkadaID");

                entity.Property(e => e.Memo1).HasMaxLength(100);

                entity.Property(e => e.MoveDate).HasColumnType("datetime");

                entity.Property(e => e.PayDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))");

                entity.Property(e => e.PayMethod).HasDefaultValueSql("(0)");

                entity.Property(e => e.PaySum)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Snif).HasDefaultValueSql("(0)");

                entity.HasOne(d => d.Doc)
                    .WithMany(p => p.Payments)
                    .HasForeignKey(d => d.DocId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("Payments_FK00");
            });

            modelBuilder.Entity<Prj>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("prj");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .HasColumnName("name");

                entity.Property(e => e.Parentid).HasColumnName("parentid");
            });

            modelBuilder.Entity<ProivRequest>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");
            });

            modelBuilder.Entity<QAppointcheck>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qAppointcheck");

                entity.Property(e => e.AppointAddress).HasMaxLength(50);

                entity.Property(e => e.AppointDate).HasColumnType("datetime");

                entity.Property(e => e.AppointTheme).HasMaxLength(255);

                entity.Property(e => e.AppointWith).HasMaxLength(25);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.CompleteSign)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.OptKind).HasColumnName("optKind");

                entity.Property(e => e.Responsible).HasMaxLength(50);

                entity.Property(e => e.TheKind)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.Time1).HasMaxLength(10);

                entity.Property(e => e.Time2).HasMaxLength(10);

                entity.Property(e => e.UserCreate).HasMaxLength(50);

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<QBedStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qBedStatus");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.Hospital).HasMaxLength(25);

                entity.Property(e => e.HospitalMahlaka).HasMaxLength(25);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahlakaKindId).HasColumnName("MahlakaKindID");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.RoomNameOld).HasMaxLength(30);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold).HasColumnName("SponserIDOld");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.Tnuah).HasMaxLength(50);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");
            });

            modelBuilder.Entity<QBusMedah>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qBusMedah");

                entity.Property(e => e.Asmachta).HasMaxLength(15);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Hatsmada).HasMaxLength(25);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Medah).HasMaxLength(255);

                entity.Property(e => e.MedahDate).HasColumnType("datetime");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Sum1).HasColumnType("money");

                entity.Property(e => e.Theme).HasMaxLength(30);
            });

            modelBuilder.Entity<QCharge>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qCharges");

                entity.Property(e => e.BCharge).HasColumnName("bCharge");

                entity.Property(e => e.BMelayKodDrug).HasColumnName("bMelayKodDrug");

                entity.Property(e => e.ChargeDate).HasColumnType("datetime");

                entity.Property(e => e.ChargeKod).HasMaxLength(30);

                entity.Property(e => e.ChargeKod2).HasMaxLength(50);

                entity.Property(e => e.ChargeKod2Old).HasColumnName("chargeKod2Old");

                entity.Property(e => e.ChargeKodOld).HasColumnName("chargeKodOld");

                entity.Property(e => e.ChargeMonth).HasColumnType("datetime");

                entity.Property(e => e.ChargeName).HasMaxLength(100);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Coin).HasMaxLength(25);

                entity.Property(e => e.CoinId).HasColumnName("CoinID");

                entity.Property(e => e.Date1).HasMaxLength(10);

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.HatsmadaId).HasColumnName("HatsmadaID");

                entity.Property(e => e.HeshId).HasColumnName("HeshID");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.KindId).HasColumnName("KindID");

                entity.Property(e => e.LinkedDoc).HasMaxLength(50);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.MelayKod).HasMaxLength(50);

                entity.Property(e => e.MelayKodOld).HasColumnName("melayKodOld");

                entity.Property(e => e.MonimNum).HasMaxLength(8);

                entity.Property(e => e.MonimTime).HasMaxLength(8);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.ParitId).HasColumnName("ParitID");

                entity.Property(e => e.PayDetails).HasMaxLength(100);

                entity.Property(e => e.Rate).HasColumnType("money");

                entity.Property(e => e.RelateClientId).HasColumnName("RelateClientID");

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.TotalSum).HasColumnType("money");

                entity.Property(e => e.Unit).HasMaxLength(30);

                entity.Property(e => e.UnitPrice).HasColumnType("money");

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<QChargeShehium>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qChargeShehia");

                entity.Property(e => e.ChargeCoin).HasMaxLength(10);

                entity.Property(e => e.ChargeKod).HasMaxLength(50);

                entity.Property(e => e.ChargeLastMadad).HasColumnType("money");

                entity.Property(e => e.ChargeMadadBasis).HasColumnType("money");

                entity.Property(e => e.ChargeShehiaType)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ChargeText).HasMaxLength(255);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.Date2)
                    .HasColumnType("datetime")
                    .HasColumnName("date2");

                entity.Property(e => e.DateE).HasMaxLength(10);

                entity.Property(e => e.DateS).HasMaxLength(10);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LastCharge).HasColumnType("datetime");

                entity.Property(e => e.LastChargeMonth)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.Memo1)
                    .HasMaxLength(500)
                    .HasColumnName("memo1");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.RoomName).HasMaxLength(50);
            });

            modelBuilder.Entity<QChargesSum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qChargesSum");

                entity.Property(e => e.ChargeName).HasMaxLength(50);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.TotalSum).HasColumnType("money");

                entity.Property(e => e.UnitPrice).HasColumnType("money");
            });

            modelBuilder.Entity<QClentTransferal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClentTransferal");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BIncludeIshpuzim).HasColumnName("bIncludeIshpuzim");

                entity.Property(e => e.BIncludeLastFollowNurse).HasColumnName("bIncludeLastFollowNurse");

                entity.Property(e => e.BIncludeLastKeev).HasColumnName("bIncludeLastKeev");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasMaxLength(12);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IncludeBm).HasColumnName("IncludeBM");

                entity.Property(e => e.Item)
                    .HasMaxLength(339)
                    .HasColumnName("item");

                entity.Property(e => e.NcludeLastTifkud).HasColumnName("ncludeLastTifkud");

                entity.Property(e => e.Place1).HasMaxLength(255);

                entity.Property(e => e.PrintFormat).HasColumnName("printFormat");

                entity.Property(e => e.Reason1).HasMaxLength(255);

                entity.Property(e => e.Result1).HasColumnType("ntext");

                entity.Property(e => e.Typ1).HasMaxLength(70);

                entity.Property(e => e.Typ2).HasMaxLength(70);

                entity.Property(e => e.UserCreate).HasMaxLength(40);
            });

            modelBuilder.Entity<QClientAccident>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientAccidents");

                entity.Property(e => e.Bakara).HasMaxLength(240);

                entity.Property(e => e.BakaraDate).HasColumnType("datetime");

                entity.Property(e => e.BakaraUserId).HasColumnName("BakaraUserID");

                entity.Property(e => e.CheckDetails).HasMaxLength(240);

                entity.Property(e => e.DateEvent).HasColumnType("datetime");

                entity.Property(e => e.Details)
                    .HasMaxLength(240)
                    .HasColumnName("details");

                entity.Property(e => e.DocCheck).HasMaxLength(240);

                entity.Property(e => e.DocCheckDate).HasColumnType("datetime");

                entity.Property(e => e.DocCheckTime).HasMaxLength(20);

                entity.Property(e => e.DocTime).HasMaxLength(20);

                entity.Property(e => e.DoctorId).HasColumnName("DoctorID");

                entity.Property(e => e.EventKind).HasMaxLength(100);

                entity.Property(e => e.EventReason).HasMaxLength(250);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MainNurseId).HasColumnName("MainNurseID");

                entity.Property(e => e.ManagerDate).HasColumnType("datetime");

                entity.Property(e => e.ManagerNote).HasMaxLength(240);

                entity.Property(e => e.ManagerUserId).HasColumnName("ManagerUserID");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.ReporterId).HasColumnName("ReporterID");

                entity.Property(e => e.TimeEvent)
                    .HasMaxLength(20)
                    .HasColumnName("timeEvent");

                entity.Property(e => e.Witness)
                    .HasMaxLength(50)
                    .HasColumnName("witness");

                entity.Property(e => e.WitnessDayar).HasColumnName("witnessDayar");

                entity.Property(e => e.WitnessWorker)
                    .HasMaxLength(50)
                    .HasColumnName("witnessWorker");
            });

            modelBuilder.Entity<QClientAvhanotToWebAdvice>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientAvhanotToWebAdvice");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.אבחנה).HasMaxLength(621);

                entity.Property(e => e.סטאטוס).HasMaxLength(50);

                entity.Property(e => e.קוד).HasMaxLength(150);

                entity.Property(e => e.תאריךהתחלה)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("תאריך התחלה");

                entity.Property(e => e.תאריךסיום)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("תאריך סיום");
            });

            modelBuilder.Entity<QClientBlister>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientBlisters");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BlisterDateAppear).HasColumnType("datetime");

                entity.Property(e => e.BlisterKindDesc).HasMaxLength(50);

                entity.Property(e => e.BlisterLevel).HasMaxLength(30);

                entity.Property(e => e.BlisterPlace).HasMaxLength(50);

                entity.Property(e => e.BlisterPlaceDetails).HasMaxLength(200);

                entity.Property(e => e.BlisterSide)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.BlisterStatus).HasMaxLength(50);

                entity.Property(e => e.BlisterStatusId).HasColumnName("BlisterStatusID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasColumnType("ntext");

                entity.Property(e => e.DateFolloeB).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Img1)
                    .HasMaxLength(200)
                    .HasColumnName("img1");

                entity.Property(e => e.IsBlisterAppearInMahlaka)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PrevBlisterId).HasColumnName("PrevBlisterID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.UserCreate).HasMaxLength(50);
            });

            modelBuilder.Entity<QClientBlistersComp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientBlisters_comp1");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BlisterDateAppear).HasColumnType("datetime");

                entity.Property(e => e.BlisterKindDesc).HasMaxLength(50);

                entity.Property(e => e.BlisterLevel).HasMaxLength(30);

                entity.Property(e => e.BlisterPlace).HasMaxLength(50);

                entity.Property(e => e.BlisterPlaceDetails).HasMaxLength(200);

                entity.Property(e => e.BlisterSide)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.BlisterStatus).HasMaxLength(50);

                entity.Property(e => e.BlisterStatusId).HasColumnName("BlisterStatusID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasColumnType("ntext");

                entity.Property(e => e.DateFolloeB).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Img1)
                    .HasMaxLength(200)
                    .HasColumnName("img1");

                entity.Property(e => e.IsBlisterAppearInMahlaka)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PrevBlisterId).HasColumnName("PrevBlisterID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.UserCreate).HasMaxLength(50);
            });

            modelBuilder.Entity<QClientBlistersWithPlace>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientBlistersWithPlace");

                entity.Property(e => e.BlisterStatusId).HasColumnName("BlisterStatusID");

                entity.Property(e => e.ClientId).HasColumnName("clientID");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(53);
            });

            modelBuilder.Entity<QClientCurse>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientCurses");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Theme).HasMaxLength(50);
            });

            modelBuilder.Entity<QClientDiet>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientDiet");

                entity.Property(e => e.Account).HasMaxLength(20);

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.AliaYear).HasMaxLength(4);

                entity.Property(e => e.ArmyId)
                    .HasMaxLength(12)
                    .HasColumnName("ArmyID");

                entity.Property(e => e.ArmyLevel).HasMaxLength(12);

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.Bactbact)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("bactbact");

                entity.Property(e => e.Bank).HasMaxLength(50);

                entity.Property(e => e.BankId).HasColumnName("BankID");

                entity.Property(e => e.BirthCountry).HasMaxLength(30);

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.Bituah).HasMaxLength(50);

                entity.Property(e => e.Bmi)
                    .HasMaxLength(500)
                    .HasColumnName("BMI");

                entity.Property(e => e.BmwebKupa)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebKupa");

                entity.Property(e => e.BmwebPassword)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebPassword");

                entity.Property(e => e.BmwebUserName)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebUserName");

                entity.Property(e => e.CarDetails).HasMaxLength(50);

                entity.Property(e => e.CarDetailsZug).HasMaxLength(103);

                entity.Property(e => e.CarNum).HasMaxLength(15);

                entity.Property(e => e.CarNumZug).HasMaxLength(33);

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CityId).HasColumnName("CityID");

                entity.Property(e => e.ClientsiudyNew).HasMaxLength(10);

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.CurrentStatus).HasMaxLength(10);

                entity.Property(e => e.DateAsk).HasColumnType("datetime");

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarHtml).HasMaxLength(219);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.Diabetes)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("diabetes");

                entity.Property(e => e.Dilution)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("dilution");

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.EnglishName).HasMaxLength(30);

                entity.Property(e => e.FamilyStatus).HasMaxLength(50);

                entity.Property(e => e.FatherName).HasMaxLength(25);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.Gender)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.GoremMafne).HasMaxLength(50);

                entity.Property(e => e.GoremMafneId).HasColumnName("GoremMafneID");

                entity.Property(e => e.Hospital).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.Job).HasMaxLength(30);

                entity.Property(e => e.KabalaDate).HasColumnType("datetime");

                entity.Property(e => e.KalkalaKind).HasMaxLength(500);

                entity.Property(e => e.Kind1).HasMaxLength(50);

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kind2).HasMaxLength(25);

                entity.Property(e => e.Kind2Id).HasColumnName("Kind2ID");

                entity.Property(e => e.KneeHeight)
                    .HasMaxLength(500)
                    .HasColumnName("kneeHeight");

                entity.Property(e => e.Kod).HasMaxLength(20);

                entity.Property(e => e.KodHilut).HasMaxLength(12);

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.KupaSnifId).HasColumnName("KupaSnifID");

                entity.Property(e => e.Lang).HasMaxLength(30);

                entity.Property(e => e.Languages).HasMaxLength(254);

                entity.Property(e => e.LastDocReport).HasMaxLength(10);

                entity.Property(e => e.LastTnuah).HasMaxLength(50);

                entity.Property(e => e.LastTnuahDate).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahDate2).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahId).HasColumnName("LastTnuahID");

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahozName)
                    .HasMaxLength(70)
                    .HasColumnName("mahozName");

                entity.Property(e => e.MailBox).HasMaxLength(20);

                entity.Property(e => e.MarketingAgaf).HasMaxLength(100);

                entity.Property(e => e.MarketingRoom).HasMaxLength(30);

                entity.Property(e => e.MarketingTifkudStatus).HasMaxLength(50);

                entity.Property(e => e.MarketingTifkudStatusId).HasColumnName("MarketingTifkudStatusID");

                entity.Property(e => e.Meaaged).HasMaxLength(50);

                entity.Property(e => e.MedMemo).HasMaxLength(300);

                entity.Property(e => e.MedProp).HasMaxLength(300);

                entity.Property(e => e.MedadimHtml)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalGroup).HasMaxLength(50);

                entity.Property(e => e.MirkamKalkala).HasMaxLength(500);

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NameViewZug).HasMaxLength(402);

                entity.Property(e => e.NimanAddress).HasMaxLength(100);

                entity.Property(e => e.NimanName).HasMaxLength(30);

                entity.Property(e => e.OptNiman).HasColumnName("optNiman");

                entity.Property(e => e.OsekId)
                    .HasMaxLength(50)
                    .HasColumnName("OsekID");

                entity.Property(e => e.Pain).HasColumnType("ntext");

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone1Zug).HasMaxLength(43);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.PlaceHtml)
                    .HasMaxLength(84)
                    .HasColumnName("PlaceHTML");

                entity.Property(e => e.PriceBack).HasColumnType("money");

                entity.Property(e => e.PriceEnter).HasColumnType("money");

                entity.Property(e => e.Properties).HasColumnType("ntext");

                entity.Property(e => e.RelatedName).HasMaxLength(25);

                entity.Property(e => e.RelatedNameBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedNameBCountry");

                entity.Property(e => e.RelatedNameBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedNameBDay");

                entity.Property(e => e.RelatedNameIdcard)
                    .HasMaxLength(14)
                    .HasColumnName("RelatedNameIDCard");

                entity.Property(e => e.RelatedNameWorkJob).HasMaxLength(20);

                entity.Property(e => e.RelatedWorkerBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedWorkerBCountry");

                entity.Property(e => e.RelatedWorkerBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedWorkerBDay");

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.Snif).HasMaxLength(50);

                entity.Property(e => e.Sochen).HasMaxLength(200);

                entity.Property(e => e.SochenId).HasColumnName("SochenID");

                entity.Property(e => e.Sos)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SOS");

                entity.Property(e => e.Sponser).HasMaxLength(50);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold).HasColumnName("SponserIDOld");

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TbClientsiudyNew)
                    .HasMaxLength(4000)
                    .HasColumnName("tb_ClientsiudyNew");

                entity.Property(e => e.TbLastDocReport)
                    .HasColumnType("ntext")
                    .HasColumnName("tb_LastDocReport");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TnuahDetails).HasMaxLength(255);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");

                entity.Property(e => e.Toaar).HasMaxLength(15);

                entity.Property(e => e.TtMedadimHtml)
                    .HasMaxLength(1000)
                    .HasColumnName("tt_MedadimHtml");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserPassport).HasMaxLength(25);

                entity.Property(e => e.Weight).HasMaxLength(500);

                entity.Property(e => e.WorkerJobEnd).HasColumnType("datetime");

                entity.Property(e => e.WorkerJobStart).HasColumnType("datetime");

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<QClientDoc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientDocs");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Bsocial).HasColumnName("BSocial");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateDoc).HasColumnType("datetime");

                entity.Property(e => e.DocAddress).HasMaxLength(16);

                entity.Property(e => e.DocCreate).HasColumnType("datetime");

                entity.Property(e => e.DocFrom).HasMaxLength(255);

                entity.Property(e => e.DocKind).HasMaxLength(30);

                entity.Property(e => e.DocName).HasMaxLength(250);

                entity.Property(e => e.DocNameView).HasMaxLength(50);

                entity.Property(e => e.DocTheme).HasMaxLength(255);

                entity.Property(e => e.DocTo).HasMaxLength(255);

                entity.Property(e => e.Docdir)
                    .HasMaxLength(50)
                    .HasColumnName("docdir");

                entity.Property(e => e.FileType).HasMaxLength(4);

                entity.Property(e => e.FolderId).HasColumnName("FolderID");

                entity.Property(e => e.Goal)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.KindId).HasColumnName("KindID");

                entity.Property(e => e.SubjectDocsName).HasMaxLength(200);

                entity.Property(e => e.UserCreate).HasMaxLength(200);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<QClientFoodFollow>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientFoodFollow");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.FoodFollow).HasMaxLength(2000);

                entity.Property(e => e.Usercreate)
                    .HasMaxLength(2000)
                    .HasColumnName("usercreate");
            });

            modelBuilder.Entity<QClientFormDetailA10>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientFormDetailA10");

                entity.Property(e => e.AvhanaDescription).HasMaxLength(300);

                entity.Property(e => e.AvhanaKod).HasMaxLength(25);

                entity.Property(e => e.BCardex).HasColumnName("bCardex");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BEdit).HasColumnName("bEdit");

                entity.Property(e => e.BNoAutoFollow).HasColumnName("bNoAutoFollow");

                entity.Property(e => e.BSadir).HasColumnName("bSadir");

                entity.Property(e => e.BT).HasColumnName("bT");

                entity.Property(e => e.BackClientId).HasColumnName("BackClientID");

                entity.Property(e => e.Bdend).HasColumnName("bdend");

                entity.Property(e => e.Bexp).HasColumnName("bexp");

                entity.Property(e => e.Bsend).HasColumnName("bsend");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateTime1).HasColumnType("smalldatetime");

                entity.Property(e => e.DoctorName).HasMaxLength(50);

                entity.Property(e => e.FamilyId)
                    .HasMaxLength(500)
                    .HasColumnName("familyId");

                entity.Property(e => e.FiverUnder).HasMaxLength(10);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.Memo1).HasMaxLength(1000);

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.SCurrentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sCurrentDate");

                entity.Property(e => e.SatoUnder).HasMaxLength(10);

                entity.Property(e => e.Subject1)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.SubjectId2).HasColumnName("SubjectID2");

                entity.Property(e => e.SubjectId3).HasColumnName("subjectId3");

                entity.Property(e => e.SubjectId4).HasColumnName("subjectID4");

                entity.Property(e => e.TStemp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStemp");

                entity.Property(e => e.TempSubject).HasMaxLength(100);

                entity.Property(e => e.Time1).HasMaxLength(12);

                entity.Property(e => e.TypFormName)
                    .HasMaxLength(100)
                    .HasColumnName("typFormName");

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.Val1).HasColumnType("ntext");

                entity.Property(e => e.Val10).HasMaxLength(250);

                entity.Property(e => e.Val11).HasMaxLength(20);

                entity.Property(e => e.Val12)
                    .HasMaxLength(500)
                    .HasColumnName("val12");

                entity.Property(e => e.Val3).HasColumnType("ntext");

                entity.Property(e => e.Val4).HasColumnType("ntext");

                entity.Property(e => e.Val5).HasColumnType("ntext");

                entity.Property(e => e.Val6).HasColumnType("ntext");

                entity.Property(e => e.Val7).HasColumnType("ntext");

                entity.Property(e => e.Val8).HasColumnType("ntext");

                entity.Property(e => e.Val9).HasColumnType("ntext");
            });

            modelBuilder.Entity<QClientFormDetailA3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientFormDetailA3");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientFormId).HasColumnName("ClientFormID");

                entity.Property(e => e.ClsName).HasMaxLength(200);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.NConv).HasColumnName("nConv");
            });

            modelBuilder.Entity<QClientGeneralKnowledge>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientGeneralKnowledge");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Theme).HasMaxLength(30);
            });

            modelBuilder.Entity<QClientHobby>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientHobbies");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Theme).HasMaxLength(30);
            });

            modelBuilder.Entity<QClientMedSign>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientMedSign");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(100);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MedSign).HasMaxLength(50);
            });

            modelBuilder.Entity<QClientMedicine>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientMedicine");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.TradeKind).HasMaxLength(30);

                entity.Property(e => e.TradeName).HasMaxLength(100);
            });

            modelBuilder.Entity<QClientNursingPlan>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientNursingPlans");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateEnd).HasColumnType("datetime");

                entity.Property(e => e.DateStart).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ImmedItem).HasMaxLength(50);

                entity.Property(e => e.KindKey).HasMaxLength(20);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.Problem).HasMaxLength(1000);

                entity.Property(e => e.ProblemDetails).HasMaxLength(1000);

                entity.Property(e => e.ProblemId)
                    .HasMaxLength(100)
                    .HasColumnName("ProblemID");

                entity.Property(e => e.Results).HasMaxLength(250);

                entity.Property(e => e.SiudTheme).HasMaxLength(100);

                entity.Property(e => e.SiudThemeId).HasColumnName("SiudThemeID");

                entity.Property(e => e.Symptoms).HasMaxLength(1000);

                entity.Property(e => e.Targets).HasMaxLength(1000);

                entity.Property(e => e.TipulPlan).HasMaxLength(250);

                entity.Property(e => e.UserDone).HasMaxLength(50);
            });

            modelBuilder.Entity<QClientPain>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientPain");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BOmdanAgain).HasColumnName("bOmdanAgain");

                entity.Property(e => e.ClientId).HasColumnName("clientId");

                entity.Property(e => e.Comments).HasMaxLength(200);

                entity.Property(e => e.Date1)
                    .HasMaxLength(10)
                    .HasColumnName("date1");

                entity.Property(e => e.DateTime1).HasColumnType("datetime");

                entity.Property(e => e.Formid).HasColumnName("formid");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.LevelDesc).HasMaxLength(20);

                entity.Property(e => e.LevelSelectedId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("levelSelectedId");

                entity.Property(e => e.NStatus).HasColumnName("nStatus");

                entity.Property(e => e.NameviewAndStatus).HasMaxLength(235);

                entity.Property(e => e.PainKind).HasMaxLength(100);

                entity.Property(e => e.Place).HasMaxLength(100);

                entity.Property(e => e.StatusDesc)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.Symptoms).HasMaxLength(100);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.Time)
                    .HasMaxLength(5)
                    .HasColumnName("time");

                entity.Property(e => e.TipulKind).HasMaxLength(100);

                entity.Property(e => e.UserCreate).HasMaxLength(50);
            });

            modelBuilder.Entity<QClientTelemarketing>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientTelemarketing");

                entity.Property(e => e.Bakashot).HasColumnType("ntext");

                entity.Property(e => e.Comments).HasColumnType("ntext");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.Responsible).HasMaxLength(50);

                entity.Property(e => e.ResponsibleId).HasColumnName("ResponsibleID");
            });

            modelBuilder.Entity<QClientTelemarketing2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientTelemarketing2");

                entity.Property(e => e.Bakashot).HasColumnType("ntext");

                entity.Property(e => e.Comments).HasColumnType("ntext");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.Responsible).HasMaxLength(50);

                entity.Property(e => e.ResponsibleId).HasColumnName("ResponsibleID");
            });

            modelBuilder.Entity<QClientTifkud>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientTifkud");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Tifkud).HasMaxLength(50);
            });

            modelBuilder.Entity<QClientTipulim>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientTipulim");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasMaxLength(50);

                entity.Property(e => e.Drug).HasMaxLength(100);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Place).HasMaxLength(100);

                entity.Property(e => e.Reason).HasMaxLength(50);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Tipul).HasMaxLength(50);
            });

            modelBuilder.Entity<QClientTnuot>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientTnuot");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.BituahId).HasColumnName("BituahID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date12)
                    .HasColumnType("datetime")
                    .HasColumnName("Date1_2");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DateT1).HasMaxLength(4000);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.GoremMafne).HasMaxLength(50);

                entity.Property(e => e.Hospital).HasMaxLength(25);

                entity.Property(e => e.HospitalMahlaka).HasMaxLength(25);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kupa)
                    .HasMaxLength(30)
                    .HasColumnName("kupa");

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.KupaSnif).HasMaxLength(100);

                entity.Property(e => e.LeaveKindDesc).HasMaxLength(255);

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahlakaKindId).HasColumnName("MahlakaKindID");

                entity.Property(e => e.Mahoz).HasMaxLength(70);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NumDaysIshpuz)
                    .HasMaxLength(30)
                    .HasColumnName("numDaysIshpuz");

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.RoomNameOld).HasMaxLength(30);

                entity.Property(e => e.Sponser).HasMaxLength(50);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold).HasColumnName("SponserIDOld");

                entity.Property(e => e.SponserService).HasMaxLength(50);

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TifkudStatusIdold).HasColumnName("TifkudStatusIDOLD");

                entity.Property(e => e.Time1)
                    .HasMaxLength(5)
                    .HasColumnName("time1");

                entity.Property(e => e.TntStamp).HasColumnType("datetime");

                entity.Property(e => e.Tnuah).HasMaxLength(50);

                entity.Property(e => e.TnuahDetails).HasMaxLength(255);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");
            });

            modelBuilder.Entity<QClientTnuot2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientTnuot2");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.BituahId).HasColumnName("BituahID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.Hospital).HasMaxLength(25);

                entity.Property(e => e.HospitalMahlaka).HasMaxLength(25);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kupa)
                    .HasMaxLength(30)
                    .HasColumnName("kupa");

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.KupaSnif).HasMaxLength(100);

                entity.Property(e => e.LeaveKindDesc).HasMaxLength(255);

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahlakaKindId).HasColumnName("MahlakaKindID");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.RoomNameOld).HasMaxLength(30);

                entity.Property(e => e.Sponser).HasMaxLength(50);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold).HasColumnName("SponserIDOld");

                entity.Property(e => e.SponserService).HasMaxLength(50);

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TntStamp).HasColumnType("datetime");

                entity.Property(e => e.Tnuah).HasMaxLength(50);

                entity.Property(e => e.TnuahDetails).HasMaxLength(255);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");
            });

            modelBuilder.Entity<QClientTnuotNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientTnuotNew");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.Hospital).HasMaxLength(25);

                entity.Property(e => e.HospitalMahlaka).HasMaxLength(25);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LeaveKindDesc).HasMaxLength(255);

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahlakaKindId).HasColumnName("MahlakaKindID");

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.RoomNameOld).HasMaxLength(30);

                entity.Property(e => e.Sponser).HasMaxLength(50);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold).HasColumnName("SponserIDOld");

                entity.Property(e => e.SponserService).HasMaxLength(50);

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TntStamp).HasColumnType("datetime");

                entity.Property(e => e.Tnuah).HasMaxLength(50);

                entity.Property(e => e.TnuahDetails).HasMaxLength(255);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");
            });

            modelBuilder.Entity<QClientTransferal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientTransferal");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BIncludeIshpuzim).HasColumnName("bIncludeIshpuzim");

                entity.Property(e => e.BIncludeLastFollowNurse).HasColumnName("bIncludeLastFollowNurse");

                entity.Property(e => e.BIncludeLastKeev).HasColumnName("bIncludeLastKeev");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasMaxLength(12);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IncludeBm).HasColumnName("IncludeBM");

                entity.Property(e => e.Item)
                    .HasMaxLength(339)
                    .HasColumnName("item");

                entity.Property(e => e.NcludeLastTifkud).HasColumnName("ncludeLastTifkud");

                entity.Property(e => e.Place1).HasMaxLength(255);

                entity.Property(e => e.PrintFormat).HasColumnName("printFormat");

                entity.Property(e => e.Reason1).HasMaxLength(255);

                entity.Property(e => e.Result1).HasColumnType("ntext");

                entity.Property(e => e.Typ1).HasMaxLength(70);

                entity.Property(e => e.Typ2).HasMaxLength(70);

                entity.Property(e => e.UserCreate).HasMaxLength(40);
            });

            modelBuilder.Entity<QClientYediah>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientYediah");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Yediah).HasMaxLength(50);
            });

            modelBuilder.Entity<QClientYeshivotTsevet>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientYeshivotTsevet");

                entity.Property(e => e.AddParticipates)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BLocked).HasColumnName("bLocked");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.DateInfo).HasColumnType("datetime");

                entity.Property(e => e.DateInfoId).HasColumnName("DateInfoID");

                entity.Property(e => e.DateLocked).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasMaxLength(49);

                entity.Property(e => e.DayarName).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LastYeshivaRef).HasMaxLength(1000);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NextYeshivaDate).HasColumnType("datetime");

                entity.Property(e => e.RecommendedClinics).HasMaxLength(300);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.Target).HasMaxLength(100);

                entity.Property(e => e.UserCreateId).HasColumnName("userCreateId");
            });

            modelBuilder.Entity<QClientpkudotToWebAdvice>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qClientpkudotToWebAdvice");

                entity.Property(e => e.Clientid).HasColumnName("CLIENTID");

                entity.Property(e => e.דרךמתן)
                    .HasMaxLength(20)
                    .HasColumnName("דרך מתן");

                entity.Property(e => e.הערות).HasMaxLength(546);

                entity.Property(e => e.התרופה).HasMaxLength(255);

                entity.Property(e => e.ימים).HasMaxLength(4000);

                entity.Property(e => e.מינון).HasMaxLength(16);

                entity.Property(e => e.סיווג)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.צורתהגשה)
                    .HasMaxLength(50)
                    .HasColumnName("צורת הגשה");

                entity.Property(e => e.שעות).HasMaxLength(4000);

                entity.Property(e => e.תהתחלה)
                    .HasMaxLength(10)
                    .HasColumnName("ת.התחלה");

                entity.Property(e => e.תסיום)
                    .HasMaxLength(10)
                    .HasColumnName("ת.סיום");
            });

            modelBuilder.Entity<QConstCharge>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qConstCharges");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Coin).HasMaxLength(25);

                entity.Property(e => e.CurrentDate).HasColumnType("datetime");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Kod).HasMaxLength(30);

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.ParitId).HasColumnName("ParitID");

                entity.Property(e => e.ParitName).HasMaxLength(50);
            });

            modelBuilder.Entity<QConstTipulit>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qConstTipulit");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasColumnName("item");

                entity.Property(e => e.Mainid).HasColumnName("mainid");
            });

            modelBuilder.Entity<QContact>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qContacts");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.ContactTheme).HasMaxLength(255);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kind).HasMaxLength(30);

                entity.Property(e => e.LinkAddress).HasMaxLength(50);

                entity.Property(e => e.LinkFile).HasMaxLength(200);

                entity.Property(e => e.LongDate).HasColumnType("datetime");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.Time1).HasMaxLength(10);

                entity.Property(e => e.TsTamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tsTamp");

                entity.Property(e => e.UserCreate).HasMaxLength(40);

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<QContractGuest>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qContractGuest");

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CompanyAddress).HasMaxLength(255);

                entity.Property(e => e.CompanyName).HasMaxLength(50);

                entity.Property(e => e.GuestMadadMonth)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.GuestPrice).HasMaxLength(15);

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.RelatedCity).HasMaxLength(100);

                entity.Property(e => e.RelatedIdcard)
                    .HasMaxLength(15)
                    .HasColumnName("RelatedIDCard");

                entity.Property(e => e.RelatedNameView).HasMaxLength(200);

                entity.Property(e => e.RelatedStreet).HasMaxLength(100);

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");
            });

            modelBuilder.Entity<QCurrentRoomPricelist>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qCurrentRoomPricelist");

                entity.Property(e => e.Price1).HasColumnType("money");

                entity.Property(e => e.Price2).HasColumnType("money");

                entity.Property(e => e.Price3).HasColumnType("money");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");
            });

            modelBuilder.Entity<QDefTifkud>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qDefTifkud");

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.Theme).HasMaxLength(50);
            });

            modelBuilder.Entity<QDefYediah>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qDefYediah");

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.Theme).HasMaxLength(50);
            });

            modelBuilder.Entity<QDefmahlaka>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qDefmahlaka");

                entity.Property(e => e.DefaultRoomId).HasColumnName("DefaultRoomID");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(113);

                entity.Property(e => e.MabarId).HasColumnName("MabarID");

                entity.Property(e => e.MabarId2)
                    .HasMaxLength(12)
                    .HasColumnName("MabarID2");

                entity.Property(e => e.MabarKod)
                    .HasMaxLength(10)
                    .HasColumnName("mabarKod");

                entity.Property(e => e.MacKod).HasColumnName("macKod");

                entity.Property(e => e.MahlakaKindId).HasColumnName("MahlakaKindID");

                entity.Property(e => e.MahlakaManager).HasMaxLength(30);

                entity.Property(e => e.MainNurse).HasMaxLength(50);

                entity.Property(e => e.Phone).HasMaxLength(20);

                entity.Property(e => e.RefueeManager).HasMaxLength(50);

                entity.Property(e => e.Workers).HasMaxLength(500);
            });

            modelBuilder.Entity<QDietDetails1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qDietDetails1");

                entity.Property(e => e.Bmi)
                    .HasMaxLength(100)
                    .HasColumnName("BMI");

                entity.Property(e => e.ClientFormId).HasColumnName("ClientFormID");

                entity.Property(e => e.Height).HasMaxLength(100);

                entity.Property(e => e.KalkalaKind).HasMaxLength(100);

                entity.Property(e => e.KneeHeight)
                    .HasMaxLength(100)
                    .HasColumnName("kneeHeight");

                entity.Property(e => e.MirkamKalkala).HasMaxLength(100);

                entity.Property(e => e.TosefetMazon).HasMaxLength(100);

                entity.Property(e => e.Weight).HasMaxLength(100);

                entity.Property(e => e.WeightMetuknan).HasMaxLength(100);

                entity.Property(e => e.WeightRange)
                    .HasMaxLength(100)
                    .HasColumnName("weightRange");
            });

            modelBuilder.Entity<QDrugLastPrice>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qDrugLastPrice");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.DocNameId).HasColumnName("DocNameID");

                entity.Property(e => e.ParitKod).HasMaxLength(20);
            });

            modelBuilder.Entity<QDrugsGaveDeleted>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qDrugsGaveDeleted");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateDrug)
                    .HasMaxLength(30)
                    .HasColumnName("dateDrug");

                entity.Property(e => e.DateSign)
                    .HasMaxLength(30)
                    .HasColumnName("dateSign");

                entity.Property(e => e.Dd)
                    .HasColumnType("datetime")
                    .HasColumnName("dd");

                entity.Property(e => e.DrugDetails).HasMaxLength(358);

                entity.Property(e => e.DrugMinun).HasMaxLength(99);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.TimeDrug)
                    .HasMaxLength(6)
                    .HasColumnName("timeDrug");

                entity.Property(e => e.TimeSign)
                    .HasMaxLength(30)
                    .HasColumnName("timeSign");
            });

            modelBuilder.Entity<QEnterExitTime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qEnterExitTimes");

                entity.Property(e => e.Comment).HasMaxLength(255);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.EnterTime).HasColumnType("datetime");

                entity.Property(e => e.ExitTime).HasColumnType("datetime");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.ThemeId).HasColumnName("ThemeID");
            });

            modelBuilder.Entity<QEventList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qEventList");

                entity.Property(e => e.Asm)
                    .IsRequired()
                    .HasColumnName("asm");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Datecreated)
                    .HasColumnType("datetime")
                    .HasColumnName("datecreated");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Locationid).HasColumnName("locationid");

                entity.Property(e => e.Nameview)
                    .HasMaxLength(200)
                    .HasColumnName("nameview");

                entity.Property(e => e.Roomname)
                    .HasMaxLength(30)
                    .HasColumnName("roomname");

                entity.Property(e => e.StatusForm)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("statusForm");

                entity.Property(e => e.TypeEvent1)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.TypeEventCap).HasMaxLength(1000);

                entity.Property(e => e.TypeEventId1).HasColumnName("TypeEventID1");
            });

            modelBuilder.Entity<QExpertsAdvisesToWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qExpertsAdvisesToWeb");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.DoctorName)
                    .HasMaxLength(200)
                    .HasColumnName("doctorName");

                entity.Property(e => e.DoctorTel).HasMaxLength(20);

                entity.Property(e => e.Doctorid).HasColumnName("doctorid");

                entity.Property(e => e.Gender)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("gender");

                entity.Property(e => e.Uid).HasColumnName("uid");
            });

            modelBuilder.Entity<QExpertsAdvisesToWebRetDatum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qExpertsAdvisesToWebRetData");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.DoctorName)
                    .HasMaxLength(200)
                    .HasColumnName("doctorName");

                entity.Property(e => e.DoctorTel).HasMaxLength(20);

                entity.Property(e => e.Doctorid).HasColumnName("doctorid");

                entity.Property(e => e.Gender)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("gender");

                entity.Property(e => e.Uid).HasColumnName("uid");
            });

            modelBuilder.Entity<QFolder>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qFolders");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.FolderDetails).HasMaxLength(35);

                entity.Property(e => e.FolderNum).HasMaxLength(20);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Kind).HasMaxLength(20);

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.Responsible).HasMaxLength(50);

                entity.Property(e => e.ResponsibleId).HasColumnName("ResponsibleID");

                entity.Property(e => e.Status).HasMaxLength(15);

                entity.Property(e => e.Theme).HasMaxLength(30);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<QFormChargeReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qFormChargeReport");

                entity.Property(e => e.ChargeDate).HasColumnType("datetime");

                entity.Property(e => e.ChargeKod).HasMaxLength(30);

                entity.Property(e => e.ChargeName).HasMaxLength(20);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.Kod).HasMaxLength(6);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.NameView).HasMaxLength(30);

                entity.Property(e => e.ReportId).HasColumnName("ReportID");

                entity.Property(e => e.TotalSum).HasColumnType("money");

                entity.Property(e => e.UnitPrice).HasColumnType("money");
            });

            modelBuilder.Entity<QFormMaakavSiudi>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qFormMaakavSiudi");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Item).HasMaxLength(255);

                entity.Property(e => e.NameView).HasMaxLength(50);
            });

            modelBuilder.Entity<QFormPkudot>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qFormPkudot");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateStartNurse).HasColumnType("datetime");

                entity.Property(e => e.DateStopDoctor).HasColumnType("datetime");

                entity.Property(e => e.DateStopNurse).HasColumnType("datetime");

                entity.Property(e => e.Item).HasMaxLength(200);

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.NurseNameStart).HasMaxLength(25);

                entity.Property(e => e.NurseNameStop).HasMaxLength(25);

                entity.Property(e => e.UserName).HasMaxLength(25);
            });

            modelBuilder.Entity<QGetDate>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qGetDate");

                entity.Property(e => e.Dt)
                    .HasColumnType("datetime")
                    .HasColumnName("dt");
            });

            modelBuilder.Entity<QHeshDocItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qHeshDocItems");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.DocNameId).HasColumnName("DocNameID");

                entity.Property(e => e.Mahsan).HasMaxLength(50);

                entity.Property(e => e.MahsanId).HasColumnName("MahsanID");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.ParitKod).HasMaxLength(20);

                entity.Property(e => e.SapakId).HasColumnName("SapakID");
            });

            modelBuilder.Entity<QHeshDocument>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qHeshDocuments");

                entity.Property(e => e.Asmachta2).HasMaxLength(100);

                entity.Property(e => e.BIncome).HasColumnName("bIncome");

                entity.Property(e => e.BPikadon).HasColumnName("bPikadon");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.DateSendByMail)
                    .HasColumnType("datetime")
                    .HasColumnName("dateSendByMail");

                entity.Property(e => e.DayarName).HasMaxLength(50);

                entity.Property(e => e.DocDetails).HasMaxLength(83);

                entity.Property(e => e.DocName).HasMaxLength(50);

                entity.Property(e => e.DocNameId).HasColumnName("DocNameID");

                entity.Property(e => e.DocSum).HasColumnType("money");

                entity.Property(e => e.FolderId).HasColumnName("FolderID");

                entity.Property(e => e.H)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.HeshKod).HasMaxLength(30);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.KodMiunId).HasColumnName("KodMiunID");

                entity.Property(e => e.KodMiunName).HasMaxLength(30);

                entity.Property(e => e.LocationId).HasColumnName("locationId");

                entity.Property(e => e.M)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.MahamSum).HasColumnType("money");

                entity.Property(e => e.MahsanId).HasColumnName("MahsanID");

                entity.Property(e => e.MaintenanceRequestId).HasColumnName("MaintenanceRequestID");

                entity.Property(e => e.Month).HasMaxLength(10);

                entity.Property(e => e.NimanName)
                    .HasMaxLength(50)
                    .HasColumnName("nimanName");

                entity.Property(e => e.Printed).HasColumnName("printed");

                entity.Property(e => e.Roomname)
                    .HasMaxLength(30)
                    .HasColumnName("roomname");

                entity.Property(e => e.UserCreate).HasMaxLength(30);
            });

            modelBuilder.Entity<QHeshGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qHeshGroups");

                entity.Property(e => e.ItemAndKod).HasMaxLength(78);
            });

            modelBuilder.Entity<QHeshParitMiun>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qHeshParitMiun");

                entity.Property(e => e.HeshId).HasColumnName("HeshID");

                entity.Property(e => e.HeshIn).HasMaxLength(6);

                entity.Property(e => e.HeshOut).HasMaxLength(6);

                entity.Property(e => e.MiunId).HasColumnName("MiunID");

                entity.Property(e => e.ParitId).HasColumnName("ParitID");

                entity.Property(e => e.ParitKod).HasMaxLength(30);
            });

            modelBuilder.Entity<QHeshTkind>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qHeshTKind");

                entity.Property(e => e.HeshDetails).HasMaxLength(91);

                entity.Property(e => e.HeshbonId).HasColumnName("HeshbonID");

                entity.Property(e => e.HeshbonName).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Kod).HasMaxLength(6);

                entity.Property(e => e.TkindId).HasColumnName("TKindID");
            });

            modelBuilder.Entity<QKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qKind");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(76)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<QKodMiun>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qKodMiun");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.KodMiunName).HasMaxLength(30);

                entity.Property(e => e.MahamKind).HasMaxLength(30);

                entity.Property(e => e.RevahCaption).HasMaxLength(30);
            });

            modelBuilder.Entity<QListPriceRule>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qListPriceRules");

                entity.Property(e => e.AddSum).HasColumnType("money");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientKind).HasMaxLength(50);

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.ParitKod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ParitName).HasMaxLength(50);

                entity.Property(e => e.RuleName)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<QMahlakaMabar>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qMahlakaMabar");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MahlakaMabar).HasMaxLength(30);

                entity.Property(e => e.MahlakaMosad).HasMaxLength(50);
            });

            modelBuilder.Entity<QMahlakaToRep>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qMahlakaToRep");

                entity.Property(e => e.Active).HasColumnName("active");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<QMaintenance>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qMaintenance");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.BClosed).HasColumnName("bClosed");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BSentByMail).HasColumnName("bSentByMail");

                entity.Property(e => e.ClosedDate).HasColumnType("datetime");

                entity.Property(e => e.ClosedTime).HasColumnType("datetime");

                entity.Property(e => e.DateD).HasColumnType("datetime");

                entity.Property(e => e.DateP).HasColumnType("datetime");

                entity.Property(e => e.DateR).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DayarPhone).HasMaxLength(300);

                entity.Property(e => e.DoneComments).HasMaxLength(255);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InnerNum)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.InventarKod).HasMaxLength(50);

                entity.Property(e => e.Level1).HasMaxLength(30);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.NLevel).HasColumnName("nLevel");

                entity.Property(e => e.NStatus).HasColumnName("nStatus");

                entity.Property(e => e.NWorkerKind).HasColumnName("nWorkerKind");

                entity.Property(e => e.ParitName).HasMaxLength(50);

                entity.Property(e => e.Place1).HasMaxLength(133);

                entity.Property(e => e.RequestKind)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.RequestKindId).HasColumnName("RequestKindID");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.Roomname).HasMaxLength(30);

                entity.Property(e => e.Subject1)
                    .IsRequired()
                    .HasMaxLength(511);

                entity.Property(e => e.TakalaDescription).HasColumnType("ntext");

                entity.Property(e => e.TakalaKindMiunName).HasMaxLength(255);

                entity.Property(e => e.TaskStatus).HasMaxLength(30);

                entity.Property(e => e.TimeD).HasColumnType("datetime");

                entity.Property(e => e.TimeP).HasColumnType("datetime");

                entity.Property(e => e.TimeR).HasColumnType("datetime");

                entity.Property(e => e.TimeS).HasColumnType("datetime");

                entity.Property(e => e.UserRequestName).HasMaxLength(200);

                entity.Property(e => e.WorkerDoneId).HasColumnName("WorkerDoneID");

                entity.Property(e => e.WorkerName).HasMaxLength(200);

                entity.Property(e => e.Yozem)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<QMange17New>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qMange17New");

                entity.Property(e => e.BNotIncLastDay).HasColumnName("bNotIncLastDay");

                entity.Property(e => e.BUnLock).HasColumnName("bUnLock");

                entity.Property(e => e.BUseAll).HasColumnName("bUseAll");

                entity.Property(e => e.BZzz).HasColumnName("bZZZ");

                entity.Property(e => e.BackDateUse).HasMaxLength(12);

                entity.Property(e => e.BackDateUse2).HasColumnType("datetime");

                entity.Property(e => e.BikurNum).HasMaxLength(50);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DateTemp).HasColumnType("datetime");

                entity.Property(e => e.DateUse).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdRes).HasMaxLength(50);

                entity.Property(e => e.Kod1).HasMaxLength(20);

                entity.Property(e => e.KodId).HasColumnName("KodID");

                entity.Property(e => e.LastCharge).HasColumnType("datetime");

                entity.Property(e => e.Memo1).HasMaxLength(300);

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.NCount).HasColumnName("nCount");

                entity.Property(e => e.Nnn1).HasColumnName("nnn1");

                entity.Property(e => e.ParitWithDate).HasMaxLength(74);

                entity.Property(e => e.Price1).HasColumnType("money");

                entity.Property(e => e.PriceNoMaham).HasColumnType("money");

                entity.Property(e => e.PriceWithMaham).HasColumnType("money");

                entity.Property(e => e.SapakId).HasColumnName("SapakID");

                entity.Property(e => e.SnifId).HasColumnName("SnifID");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<QMarketingSugest>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qMarketingSugests");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.AskToEnterDate).HasMaxLength(30);

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.CompanyAddress).HasMaxLength(255);

                entity.Property(e => e.CompanyName).HasMaxLength(60);

                entity.Property(e => e.DateAsk).HasMaxLength(30);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.EnterMaslul).HasMaxLength(255);

                entity.Property(e => e.EnterPriceInWords).HasMaxLength(200);

                entity.Property(e => e.HilutMax).HasMaxLength(5);

                entity.Property(e => e.HilutMaxPerMon).HasColumnType("numeric(9, 6)");

                entity.Property(e => e.HilutMon).HasMaxLength(5);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.ListPriceBo)
                    .HasMaxLength(15)
                    .HasColumnName("ListPriceBO");

                entity.Property(e => e.ListPriceFb)
                    .HasMaxLength(15)
                    .HasColumnName("ListPriceFB");

                entity.Property(e => e.ListPriceHb)
                    .HasMaxLength(15)
                    .HasColumnName("ListPriceHB");

                entity.Property(e => e.MadadMonth).HasMaxLength(7);

                entity.Property(e => e.MadadPointsInWords).HasMaxLength(200);

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MaslulService).HasMaxLength(20);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NeedToEnterDate).HasMaxLength(30);

                entity.Property(e => e.PriceBack).HasMaxLength(15);

                entity.Property(e => e.PriceEnter).HasMaxLength(15);

                entity.Property(e => e.PriceStay).HasMaxLength(15);

                entity.Property(e => e.PriceStaySiudi).HasMaxLength(15);

                entity.Property(e => e.PriceStayTashush).HasMaxLength(15);

                entity.Property(e => e.PriceTashushOut).HasMaxLength(15);

                entity.Property(e => e.RelatedCity).HasMaxLength(100);

                entity.Property(e => e.RelatedIdcard)
                    .HasMaxLength(15)
                    .HasColumnName("RelatedIDCard");

                entity.Property(e => e.RelatedNameView).HasMaxLength(200);

                entity.Property(e => e.RelatedStreet).HasMaxLength(100);

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.RoomNum).HasColumnName("roomNum");

                entity.Property(e => e.RoomSize).HasMaxLength(20);

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.SugestId).HasColumnName("SugestID");
            });

            modelBuilder.Entity<QMedadim>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qMedadim");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BSadir).HasColumnName("bSadir");

                entity.Property(e => e.BreathNotes)
                    .HasMaxLength(100)
                    .HasColumnName("breathNotes");

                entity.Property(e => e.BreathbDel).HasColumnName("breathbDel");

                entity.Property(e => e.Date1)
                    .HasMaxLength(30)
                    .HasColumnName("date1");

                entity.Property(e => e.DateTime1).HasColumnType("datetime");

                entity.Property(e => e.Etco2).HasColumnName("ETCO2");

                entity.Property(e => e.Etnotes)
                    .HasMaxLength(100)
                    .HasColumnName("ETNotes");

                entity.Property(e => e.FiverNotes).HasMaxLength(100);

                entity.Property(e => e.FiverWay).HasMaxLength(10);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.GiveWay).HasMaxLength(10);

                entity.Property(e => e.Height1).HasMaxLength(40);

                entity.Property(e => e.HeightNotes).HasColumnName("heightNotes");

                entity.Property(e => e.Hsnotes)
                    .HasMaxLength(100)
                    .HasColumnName("HSNotes");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.KneeHeight).HasColumnName("kneeHeight");

                entity.Property(e => e.KneeheightNotes).HasColumnName("kneeheightNotes");

                entity.Property(e => e.LdNotes).HasMaxLength(100);

                entity.Property(e => e.Ldall)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("LDAll");

                entity.Property(e => e.Menstruation)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.MenstruationNotes).HasMaxLength(200);

                entity.Property(e => e.PrBnotes)
                    .HasMaxLength(100)
                    .HasColumnName("PrBNotes");

                entity.Property(e => e.PressB).HasMaxLength(20);

                entity.Property(e => e.ProvDrainNotes).HasMaxLength(100);

                entity.Property(e => e.ProvZondaNotes).HasMaxLength(100);

                entity.Property(e => e.PulseNotes).HasMaxLength(100);

                entity.Property(e => e.SatoNotes).HasMaxLength(150);

                entity.Property(e => e.SatoWay).HasMaxLength(150);

                entity.Property(e => e.SolName).HasMaxLength(50);

                entity.Property(e => e.SugarNotes).HasMaxLength(100);

                entity.Property(e => e.SugarView)
                    .HasMaxLength(30)
                    .HasColumnName("sugarView");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.Time1).HasMaxLength(5);

                entity.Property(e => e.Tzoa).HasMaxLength(50);

                entity.Property(e => e.TzoaNotes).HasMaxLength(200);

                entity.Property(e => e.Urine).HasMaxLength(50);

                entity.Property(e => e.UrineNotes).HasMaxLength(200);

                entity.Property(e => e.UserName).HasMaxLength(50);

                entity.Property(e => e.Weight).HasColumnName("weight");

                entity.Property(e => e.Weight1)
                    .HasMaxLength(34)
                    .HasColumnName("weight1");

                entity.Property(e => e.WeightNotes).HasMaxLength(100);
            });

            modelBuilder.Entity<QMedicalGroupsMainId>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qMedicalGroupsMainId");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("item");

                entity.Property(e => e.Mainid).HasColumnName("mainid");
            });

            modelBuilder.Entity<QMelayOninvite>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qMelayONInvite");

                entity.Property(e => e.ParitKod).HasMaxLength(50);
            });

            modelBuilder.Entity<QMelayRest>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qMelayRest");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.מחסן).HasMaxLength(50);

                entity.Property(e => e.קבוצה).HasMaxLength(50);

                entity.Property(e => e.קודפריט)
                    .HasMaxLength(50)
                    .HasColumnName("קוד_פריט");

                entity.Property(e => e.שםפריט)
                    .HasMaxLength(50)
                    .HasColumnName("שם_פריט");
            });

            modelBuilder.Entity<QMelayValue>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qMelayValue");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ID");

                entity.Property(e => e.עלותממוצעת)
                    .HasColumnType("money")
                    .HasColumnName("עלות_ממוצעת");

                entity.Property(e => e.ערך).HasColumnType("money");

                entity.Property(e => e.קבוצה).HasMaxLength(50);

                entity.Property(e => e.קודפריט)
                    .HasMaxLength(50)
                    .HasColumnName("קוד_פריט");

                entity.Property(e => e.שםפריט)
                    .HasMaxLength(50)
                    .HasColumnName("שם_פריט");
            });

            modelBuilder.Entity<QPhizioMonthActivity>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qPhizioMonthActivities");

                entity.Property(e => e.Activity)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.ActivityId).HasColumnName("ActivityID");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Month1).HasMaxLength(7);

                entity.Property(e => e.Month2).HasColumnType("datetime");
            });

            modelBuilder.Entity<QPritim>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qPritim");

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.BConst).HasColumnName("bConst");

                entity.Property(e => e.BMelay).HasColumnName("bMelay");

                entity.Property(e => e.BNeedId).HasColumnName("bNeedID");

                entity.Property(e => e.BPriceList).HasColumnName("bPriceList");

                entity.Property(e => e.BSale).HasColumnName("bSale");

                entity.Property(e => e.BService).HasColumnName("bService");

                entity.Property(e => e.BZikuy).HasColumnName("bZikuy");

                entity.Property(e => e.Barkod).HasMaxLength(50);

                entity.Property(e => e.CoinBuy).HasMaxLength(25);

                entity.Property(e => e.CoinIdbuy).HasColumnName("CoinIDBuy");

                entity.Property(e => e.CoinIdsale).HasColumnName("CoinIDSale");

                entity.Property(e => e.CoinSale).HasMaxLength(25);

                entity.Property(e => e.HeshInKod).HasMaxLength(15);

                entity.Property(e => e.HeshInName).HasMaxLength(15);

                entity.Property(e => e.HeshKodIn).HasMaxLength(15);

                entity.Property(e => e.HeshKodOut).HasMaxLength(15);

                entity.Property(e => e.HeshOutKod).HasMaxLength(15);

                entity.Property(e => e.HeshOutName).HasMaxLength(15);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ImageName).HasMaxLength(50);

                entity.Property(e => e.KeyWords).HasMaxLength(250);

                entity.Property(e => e.Kod).HasMaxLength(30);

                entity.Property(e => e.MahsanId).HasColumnName("MahsanID");

                entity.Property(e => e.MainMahsan).HasMaxLength(50);

                entity.Property(e => e.MainMahsanId).HasColumnName("MainMahsanID");

                entity.Property(e => e.MainSapakId).HasColumnName("MainSapakID");

                entity.Property(e => e.MelayDate).HasColumnType("datetime");

                entity.Property(e => e.Miun).HasMaxLength(50);

                entity.Property(e => e.MiunId).HasColumnName("MiunID");

                entity.Property(e => e.Mkt).HasMaxLength(10);

                entity.Property(e => e.MktSapak).HasMaxLength(20);

                entity.Property(e => e.Num1)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ParitName).HasMaxLength(50);

                entity.Property(e => e.ParitUnit).HasMaxLength(20);

                entity.Property(e => e.UnitId).HasColumnName("UnitID");

                entity.Property(e => e.UnitIdbuy).HasColumnName("UnitIDBuy");

                entity.Property(e => e.UnitIdsale).HasColumnName("UnitIDSale");

                entity.Property(e => e.Weight).HasMaxLength(15);
            });

            modelBuilder.Entity<QRepClientDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qRepClientDetails");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.אגף).HasMaxLength(100);

                entity.Property(e => e.אחראי).HasMaxLength(200);

                entity.Property(e => e.ארץלידה)
                    .HasMaxLength(30)
                    .HasColumnName("ארץ_לידה");

                entity.Property(e => e.בנק).HasMaxLength(50);

                entity.Property(e => e.גורםמממן)
                    .HasMaxLength(50)
                    .HasColumnName("גורם_מממן");

                entity.Property(e => e.השם).HasMaxLength(200);

                entity.Property(e => e.השםאנג)
                    .IsRequired()
                    .HasColumnName("השם_אנג");

                entity.Property(e => e.חברה).HasMaxLength(60);

                entity.Property(e => e.חברה0).HasMaxLength(50);

                entity.Property(e => e.חדר).HasMaxLength(30);

                entity.Property(e => e.חשבון).HasMaxLength(20);

                entity.Property(e => e.טלחברה)
                    .HasMaxLength(20)
                    .HasColumnName("טל_חברה");

                entity.Property(e => e.טלפון1)
                    .HasMaxLength(20)
                    .HasColumnName("טלפון_1");

                entity.Property(e => e.טלפון2)
                    .HasMaxLength(20)
                    .HasColumnName("טלפון_2");

                entity.Property(e => e.מחלקה).HasMaxLength(50);

                entity.Property(e => e.מין)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.מיןאות)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("מין_אות");

                entity.Property(e => e.מיקוד).HasMaxLength(10);

                entity.Property(e => e.מצבמשפחתי)
                    .HasMaxLength(50)
                    .HasColumnName("מצב_משפחתי");

                entity.Property(e => e.סוגדיור)
                    .HasMaxLength(50)
                    .HasColumnName("סוג_דיור");

                entity.Property(e => e.סיווגמשני)
                    .HasMaxLength(25)
                    .HasColumnName("סיווג_משני");

                entity.Property(e => e.סיווגראשי)
                    .HasMaxLength(50)
                    .HasColumnName("סיווג_ראשי");

                entity.Property(e => e.סניף).HasMaxLength(50);

                entity.Property(e => e.עיר).HasMaxLength(100);

                entity.Property(e => e.פקס).HasMaxLength(20);

                entity.Property(e => e.פקסחברה)
                    .HasMaxLength(20)
                    .HasColumnName("פקס_חברה");

                entity.Property(e => e.קודמזהה)
                    .HasMaxLength(20)
                    .HasColumnName("קוד_מזהה");

                entity.Property(e => e.קופתחולים)
                    .HasMaxLength(30)
                    .HasColumnName("קופת_חולים");

                entity.Property(e => e.רחוב).HasMaxLength(100);

                entity.Property(e => e.שםבניזוג)
                    .HasMaxLength(402)
                    .HasColumnName("שם_בני_זוג");

                entity.Property(e => e.שםהאב)
                    .HasMaxLength(25)
                    .HasColumnName("שם_האב");

                entity.Property(e => e.שםלועזי)
                    .HasMaxLength(30)
                    .HasColumnName("שם_לועזי");

                entity.Property(e => e.שםמשפחה)
                    .HasMaxLength(100)
                    .HasColumnName("שם_משפחה");

                entity.Property(e => e.שםפרטי)
                    .HasMaxLength(30)
                    .HasColumnName("שם_פרטי");

                entity.Property(e => e.שנתלידה).HasColumnName("שנת_לידה");

                entity.Property(e => e.תאריך).HasMaxLength(30);

                entity.Property(e => e.תד)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ת_ד");

                entity.Property(e => e.תואר).HasMaxLength(15);

                entity.Property(e => e.תזהות)
                    .HasMaxLength(15)
                    .HasColumnName("ת_זהות");

                entity.Property(e => e.תיבתדואר)
                    .HasMaxLength(20)
                    .HasColumnName("תיבת_דואר");

                entity.Property(e => e.תכניסה)
                    .HasMaxLength(10)
                    .HasColumnName("ת_כניסה");

                entity.Property(e => e.תלידה)
                    .HasMaxLength(10)
                    .HasColumnName("ת_לידה");

                entity.Property(e => e.תקןמיטה).HasColumnName("תקן_מיטה");
            });

            modelBuilder.Entity<QRepContactMan>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qRepContactMen");

                entity.Property(e => e.BAllowSms).HasColumnName("bAllowSms");

                entity.Property(e => e.CarNum).HasMaxLength(15);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.ContactManAddress).HasMaxLength(92);

                entity.Property(e => e.ContactManAddresses).HasMaxLength(196);

                entity.Property(e => e.ContactManAddressesXl)
                    .HasMaxLength(193)
                    .HasColumnName("ContactManAddressesXL");

                entity.Property(e => e.ContactManBirthday).HasMaxLength(10);

                entity.Property(e => e.ContactManEmail).HasMaxLength(100);

                entity.Property(e => e.ContactManFax).HasMaxLength(20);

                entity.Property(e => e.ContactManIdCard).HasMaxLength(10);

                entity.Property(e => e.ContactManKirva).HasMaxLength(20);

                entity.Property(e => e.ContactManName)
                    .IsRequired()
                    .HasMaxLength(101);

                entity.Property(e => e.ContactManPhone1).HasMaxLength(20);

                entity.Property(e => e.ContactManPhone2).HasMaxLength(20);

                entity.Property(e => e.ContactManPhone3).HasMaxLength(20);

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.Dateleave).HasColumnType("datetime");

                entity.Property(e => e.DayarCellular).HasMaxLength(20);

                entity.Property(e => e.DayarCellular2).HasMaxLength(20);

                entity.Property(e => e.DayarCellular3).HasMaxLength(20);

                entity.Property(e => e.DayarDetails).HasColumnType("ntext");

                entity.Property(e => e.DayarEmail).HasMaxLength(100);

                entity.Property(e => e.DayarFax)
                    .HasMaxLength(20)
                    .HasColumnName("DayarFAX");

                entity.Property(e => e.DayarKod).HasMaxLength(20);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Email1)
                    .HasMaxLength(100)
                    .HasColumnName("EMAIL1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Interkum).HasMaxLength(30);

                entity.Property(e => e.Job)
                    .HasMaxLength(30)
                    .HasColumnName("JOB");

                entity.Property(e => e.Kind1).HasMaxLength(50);

                entity.Property(e => e.Kind2).HasMaxLength(25);

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NameViewZug).HasMaxLength(402);

                entity.Property(e => e.Relatedclient).HasColumnName("relatedclient");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.Sponser).HasMaxLength(50);
            });

            modelBuilder.Entity<QRepContactMen1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qRepContactMen1");

                entity.Property(e => e.CarNum).HasMaxLength(15);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.ContactManAddress).HasMaxLength(92);

                entity.Property(e => e.ContactManAddresses).HasMaxLength(196);

                entity.Property(e => e.ContactManAddressesXl)
                    .HasMaxLength(193)
                    .HasColumnName("ContactManAddressesXL");

                entity.Property(e => e.ContactManBirthday).HasMaxLength(10);

                entity.Property(e => e.ContactManEmail).HasMaxLength(100);

                entity.Property(e => e.ContactManFax).HasMaxLength(20);

                entity.Property(e => e.ContactManIdCard).HasMaxLength(10);

                entity.Property(e => e.ContactManKirva).HasMaxLength(20);

                entity.Property(e => e.ContactManName)
                    .IsRequired()
                    .HasMaxLength(101);

                entity.Property(e => e.ContactManPhone1).HasMaxLength(20);

                entity.Property(e => e.ContactManPhone2).HasMaxLength(20);

                entity.Property(e => e.ContactManPhone3).HasMaxLength(20);

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.Dateleave).HasColumnType("datetime");

                entity.Property(e => e.DayarCellular).HasMaxLength(20);

                entity.Property(e => e.DayarCellular2).HasMaxLength(20);

                entity.Property(e => e.DayarCellular3).HasMaxLength(20);

                entity.Property(e => e.DayarDetails).HasColumnType("ntext");

                entity.Property(e => e.DayarEmail).HasMaxLength(100);

                entity.Property(e => e.DayarFax)
                    .HasMaxLength(20)
                    .HasColumnName("DayarFAX");

                entity.Property(e => e.DayarKod).HasMaxLength(20);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Interkum).HasMaxLength(30);

                entity.Property(e => e.Job)
                    .HasMaxLength(30)
                    .HasColumnName("JOB");

                entity.Property(e => e.Kind1).HasMaxLength(50);

                entity.Property(e => e.Kind2).HasMaxLength(25);

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NameViewZug).HasMaxLength(402);

                entity.Property(e => e.Relatedclient).HasColumnName("relatedclient");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.Sponser).HasMaxLength(50);
            });

            modelBuilder.Entity<QRepGuardian>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qRepGuardians");

                entity.Property(e => e.CarNum).HasMaxLength(15);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarCellular).HasMaxLength(20);

                entity.Property(e => e.DayarCellular2).HasMaxLength(20);

                entity.Property(e => e.DayarCellular3).HasMaxLength(20);

                entity.Property(e => e.DayarDetails).HasColumnType("ntext");

                entity.Property(e => e.DayarFax)
                    .HasMaxLength(20)
                    .HasColumnName("DayarFAX");

                entity.Property(e => e.DayarKod).HasMaxLength(20);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.GuardianAddress).HasMaxLength(92);

                entity.Property(e => e.GuardianFax).HasMaxLength(20);

                entity.Property(e => e.GuardianField).HasMaxLength(50);

                entity.Property(e => e.GuardianKirva).HasMaxLength(20);

                entity.Property(e => e.GuardianName).HasMaxLength(28);

                entity.Property(e => e.GuardianPhone1).HasMaxLength(20);

                entity.Property(e => e.GuardianPhone2).HasMaxLength(20);

                entity.Property(e => e.GuardianPhone3).HasMaxLength(20);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Interkum).HasMaxLength(30);

                entity.Property(e => e.Kind1).HasMaxLength(50);

                entity.Property(e => e.Kind2).HasMaxLength(25);

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NameViewZug).HasMaxLength(402);

                entity.Property(e => e.RoomName).HasMaxLength(30);
            });

            modelBuilder.Entity<QRepHobby>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qRepHobbies");

                entity.Property(e => e.טלבית)
                    .HasMaxLength(20)
                    .HasColumnName("טל_בית");

                entity.Property(e => e.כתובת).HasMaxLength(151);

                entity.Property(e => e.סלולרי).HasMaxLength(20);

                entity.Property(e => e.שם).HasMaxLength(50);

                entity.Property(e => e.תחביב).HasMaxLength(30);
            });

            modelBuilder.Entity<QRepMaham>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qRepMaham");

                entity.Property(e => e.MahamKindId).HasColumnName("MahamKindID");

                entity.Property(e => e.SumמתוךMahamSum).HasColumnType("money");
            });

            modelBuilder.Entity<QRepMedadim>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qRepMedadim");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Breath)
                    .HasMaxLength(134)
                    .HasColumnName("breath");

                entity.Property(e => e.BreathbDel).HasColumnName("breathbDel");

                entity.Property(e => e.Date1)
                    .HasMaxLength(30)
                    .HasColumnName("date1");

                entity.Property(e => e.DateTime1).HasColumnType("datetime");

                entity.Property(e => e.Etco2)
                    .HasMaxLength(134)
                    .HasColumnName("ETCO2");

                entity.Property(e => e.Fiver)
                    .HasMaxLength(145)
                    .HasColumnName("fiver");

                entity.Property(e => e.HeadScope).HasMaxLength(134);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Ld).HasMaxLength(165);

                entity.Property(e => e.Menstruation).HasMaxLength(205);

                entity.Property(e => e.OnlyMenstruation)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.OnlySugar).HasMaxLength(30);

                entity.Property(e => e.OnlyTzoa).HasMaxLength(50);

                entity.Property(e => e.OnlyUrine).HasMaxLength(50);

                entity.Property(e => e.PressB).HasMaxLength(134);

                entity.Property(e => e.ProvDrain).HasMaxLength(134);

                entity.Property(e => e.ProvZonda).HasMaxLength(134);

                entity.Property(e => e.Pulse).HasMaxLength(142);

                entity.Property(e => e.Sato).HasMaxLength(335);

                entity.Property(e => e.SolGive).HasMaxLength(95);

                entity.Property(e => e.Sugar).HasMaxLength(134);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.Time1).HasMaxLength(5);

                entity.Property(e => e.Tzoa).HasMaxLength(254);

                entity.Property(e => e.Urine).HasMaxLength(254);

                entity.Property(e => e.UserName).HasMaxLength(50);

                entity.Property(e => e.Weight).HasMaxLength(134);
            });

            modelBuilder.Entity<QRepRevah>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qRepRevah");

                entity.Property(e => e.KodMiunName).HasMaxLength(30);

                entity.Property(e => e.MahamKindId).HasColumnName("MahamKindID");

                entity.Property(e => e.MiunSum).HasColumnType("money");

                entity.Property(e => e.PayDate).HasColumnType("datetime");

                entity.Property(e => e.RevahCaption).HasMaxLength(30);
            });

            modelBuilder.Entity<QRepTipulPlan>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qRepTipulPlan");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.הערכה).HasMaxLength(50);

                entity.Property(e => e.סוגטיפול)
                    .HasMaxLength(50)
                    .HasColumnName("סוג_טיפול");

                entity.Property(e => e.סיבתהטיפול)
                    .HasMaxLength(50)
                    .HasColumnName("סיבת_הטיפול");

                entity.Property(e => e.תאריךהתחלה)
                    .HasColumnType("datetime")
                    .HasColumnName("תאריך_התחלה");

                entity.Property(e => e.תאריךסיום)
                    .HasColumnType("datetime")
                    .HasColumnName("תאריך_סיום");
            });

            modelBuilder.Entity<QRoomAgafAsMainId>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qRoomAgafAsMainId");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .HasMaxLength(90)
                    .HasColumnName("item");

                entity.Property(e => e.Mainid).HasColumnName("mainid");
            });

            modelBuilder.Entity<QRoomDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qRoomDetails");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.AssistantFreeDays)
                    .HasMaxLength(10)
                    .HasColumnName("assistantFreeDays");

                entity.Property(e => e.AssistantId).HasColumnName("assistantID");

                entity.Property(e => e.AssistantName)
                    .HasMaxLength(200)
                    .HasColumnName("assistantName");

                entity.Property(e => e.AssistantPhone)
                    .HasMaxLength(20)
                    .HasColumnName("assistantPhone");

                entity.Property(e => e.BGander).HasColumnName("bGander");

                entity.Property(e => e.City).HasColumnName("city");

                entity.Property(e => e.CityName)
                    .HasMaxLength(50)
                    .HasColumnName("cityName");

                entity.Property(e => e.GannenetFreeDays).HasMaxLength(10);

                entity.Property(e => e.GannenetId).HasColumnName("GannenetID");

                entity.Property(e => e.GannenetName).HasMaxLength(200);

                entity.Property(e => e.GannenetPhone).HasMaxLength(20);

                entity.Property(e => e.GannenetPhone2).HasMaxLength(20);

                entity.Property(e => e.GeneralState).HasMaxLength(500);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InnerNum).HasMaxLength(50);

                entity.Property(e => e.KeyKind).HasMaxLength(50);

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Maslul).HasMaxLength(50);

                entity.Property(e => e.MedicalGroupId).HasColumnName("MedicalGroupID");

                entity.Property(e => e.MivneKind).HasMaxLength(50);

                entity.Property(e => e.Neighbor)
                    .HasMaxLength(50)
                    .HasColumnName("neighbor");

                entity.Property(e => e.PersonalEval).HasMaxLength(500);

                entity.Property(e => e.Phone).HasMaxLength(50);

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Storage).HasMaxLength(50);

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.Suppervision).HasMaxLength(200);

                entity.Property(e => e.SuppervisionId).HasColumnName("SuppervisionID");

                entity.Property(e => e.Symbole).HasMaxLength(50);

                entity.Property(e => e.WorkerId).HasColumnName("WorkerID");

                entity.Property(e => e.YardState).HasMaxLength(50);
            });

            modelBuilder.Entity<QRoomsWithLocation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qRoomsWithLocation");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Locationid).HasColumnName("locationid");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MaslulId).HasColumnName("MaslulID");

                entity.Property(e => e.NObj).HasColumnName("nObj");

                entity.Property(e => e.OwnerDetails).IsRequired();

                entity.Property(e => e.OwnerId).HasColumnName("OwnerID");

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomDefs).HasMaxLength(255);

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.RoomNum).HasMaxLength(10);

                entity.Property(e => e.RoomPrice).HasMaxLength(10);

                entity.Property(e => e.RoomSize).HasMaxLength(20);
            });

            modelBuilder.Entity<QServiceContract>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qServiceContracts");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Coin).HasMaxLength(10);

                entity.Property(e => e.Comments).HasColumnType("ntext");

                entity.Property(e => e.Date1).HasColumnType("smalldatetime");

                entity.Property(e => e.Date2).HasColumnType("smalldatetime");

                entity.Property(e => e.HatsmadaId).HasColumnName("HatsmadaID");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ResponsibleId).HasColumnName("ResponsibleID");

                entity.Property(e => e.SapakDetails).HasMaxLength(258);

                entity.Property(e => e.SapakId).HasColumnName("SapakID");

                entity.Property(e => e.SapakName).HasMaxLength(200);

                entity.Property(e => e.ServiceId).HasColumnName("ServiceID");

                entity.Property(e => e.ServiceKod).HasMaxLength(50);

                entity.Property(e => e.ServiceName).HasMaxLength(50);

                entity.Property(e => e.ServicePrice).HasColumnType("money");

                entity.Property(e => e.ServicePrice1).HasMaxLength(41);
            });

            modelBuilder.Entity<QSidurWorkerRoom>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qSidurWorkerRooms");

                entity.Property(e => e.Action1)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.DayarLastStatus).HasMaxLength(50);

                entity.Property(e => e.DayarName).HasMaxLength(200);

                entity.Property(e => e.Days)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FromDate).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.RoomId).HasColumnName("roomID");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.Time1)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Time2)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ToDate).HasColumnType("datetime");

                entity.Property(e => e.WorkerId).HasColumnName("workerID");

                entity.Property(e => e.WorkerIdcard)
                    .HasMaxLength(15)
                    .HasColumnName("WorkerIDCard");

                entity.Property(e => e.WorkerName).HasMaxLength(200);
            });

            modelBuilder.Entity<QTasks2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qTasks2");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.Phone).HasMaxLength(15);

                entity.Property(e => e.Place).HasMaxLength(50);

                entity.Property(e => e.Responsible).HasMaxLength(50);

                entity.Property(e => e.ResponsibleId).HasColumnName("ResponsibleID");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Status).HasMaxLength(30);

                entity.Property(e => e.StatusId).HasColumnName("StatusID");

                entity.Property(e => e.TaskId).HasColumnName("TaskID");

                entity.Property(e => e.TaskTheme).HasMaxLength(255);

                entity.Property(e => e.UserCreate).HasMaxLength(50);

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<QTelemarketing>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qTelemarketing");

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CityId).HasColumnName("CityID");

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Gender)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("gender");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mafne)
                    .HasMaxLength(50)
                    .HasColumnName("mafne");

                entity.Property(e => e.MailBox).HasMaxLength(20);

                entity.Property(e => e.MarketingStatus).HasMaxLength(100);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.Sponser).HasMaxLength(50);

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<QTelemarketingDoc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qTelemarketingDocs");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.ContractName).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Stype)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("stype");

                entity.Property(e => e.SuggestId).HasColumnName("suggestID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.Username)
                    .HasMaxLength(50)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<QTestTnuot>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qTestTnuot");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.MaxId).HasColumnName("MaxID");
            });

            modelBuilder.Entity<QTestTnuotWithIshpuz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qTestTnuotWithIshpuz");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.MaxId).HasColumnName("MaxID");
            });

            modelBuilder.Entity<QTifkudSponser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qTifkudSponser");

                entity.Property(e => e.Idd)
                    .HasMaxLength(61)
                    .HasColumnName("IDD");

                entity.Property(e => e.Item)
                    .HasMaxLength(26)
                    .IsUnicode(false);

                entity.Property(e => e.NewId1).HasColumnName("NewID1");

                entity.Property(e => e.Sponser)
                    .HasMaxLength(50)
                    .HasColumnName("sponser");

                entity.Property(e => e.SponserId).HasColumnName("sponserID");

                entity.Property(e => e.Tifkud).HasMaxLength(50);

                entity.Property(e => e.TifkudId).HasColumnName("tifkudID");
            });

            modelBuilder.Entity<QTnuot>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qTnuot");

                entity.Property(e => e.Asmachta1).HasMaxLength(25);

                entity.Property(e => e.BZmani).HasColumnName("bZmani");

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DocName).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.KodMiunName).HasMaxLength(30);

                entity.Property(e => e.MahamSum).HasColumnType("money");

                entity.Property(e => e.ManaId).HasColumnName("ManaID");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.PayDate).HasColumnType("datetime");

                entity.Property(e => e.PaySum).HasColumnType("money");

                entity.Property(e => e.RevahCaption).HasMaxLength(30);
            });

            modelBuilder.Entity<QTnuot2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qTnuot2");

                entity.Property(e => e.Asmachta1).HasMaxLength(25);

                entity.Property(e => e.Asmachta2).HasMaxLength(25);

                entity.Property(e => e.BHashavshevet).HasColumnName("bHashavshevet");

                entity.Property(e => e.BZmani).HasColumnName("bZmani");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DocId).HasColumnName("DocID");

                entity.Property(e => e.HeshId).HasColumnName("HeshID");

                entity.Property(e => e.HeshKod).HasMaxLength(15);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ManaId).HasColumnName("ManaID");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.PayDate).HasColumnType("datetime");

                entity.Property(e => e.SumHova).HasColumnType("money");

                entity.Property(e => e.SumZchut).HasColumnType("money");

                entity.Property(e => e.TkindKod)
                    .HasMaxLength(20)
                    .HasColumnName("TKindKod");
            });

            modelBuilder.Entity<QTnuotAgafReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qTnuotAgafReport");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");
            });

            modelBuilder.Entity<QTnuotBedStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qTnuotBedStatus");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.Hospital).HasMaxLength(25);

                entity.Property(e => e.HospitalMahlaka).HasMaxLength(25);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.Lname)
                    .HasMaxLength(30)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahlakaKindId).HasColumnName("MahlakaKindID");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.RoomNameOld).HasMaxLength(30);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold).HasColumnName("SponserIDOld");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.Tnuah).HasMaxLength(50);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");
            });

            modelBuilder.Entity<QTnuotBedStatusNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qTnuotBedStatusNew");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");
            });

            modelBuilder.Entity<QTnuotBedStatusOld>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qTnuotBedStatusOld");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.Hospital).HasMaxLength(25);

                entity.Property(e => e.HospitalMahlaka).HasMaxLength(25);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.Lname)
                    .HasMaxLength(30)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahlakaKindId).HasColumnName("MahlakaKindID");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.RoomNameOld).HasMaxLength(30);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold).HasColumnName("SponserIDOld");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.Tnuah).HasMaxLength(50);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");
            });

            modelBuilder.Entity<QTnuotBedStatusWithIshpuz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qTnuotBedStatusWithIshpuz");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.Hospital).HasMaxLength(25);

                entity.Property(e => e.HospitalMahlaka).HasMaxLength(25);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahlakaKindId).HasColumnName("MahlakaKindID");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.RoomNameOld).HasMaxLength(30);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold).HasColumnName("SponserIDOld");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.Tnuah).HasMaxLength(50);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");
            });

            modelBuilder.Entity<QVisitList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qVisitList");

                entity.Property(e => e.BArrived).HasColumnName("bArrived");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BDone).HasColumnName("bDone");

                entity.Property(e => e.BLocked).HasColumnName("bLocked");

                entity.Property(e => e.BNeedPay).HasColumnName("bNeedPay");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdRes)
                    .HasMaxLength(50)
                    .HasColumnName("idREs");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDcard");

                entity.Property(e => e.Kod1).HasMaxLength(20);

                entity.Property(e => e.NTorRange).HasColumnName("nTorRange");

                entity.Property(e => e.NTorRanhe).HasColumnName("nTorRanhe");

                entity.Property(e => e.NTorType).HasColumnName("nTorType");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NotArrived).HasColumnName("notArrived");

                entity.Property(e => e.Place1).HasMaxLength(50);

                entity.Property(e => e.PlaceId).HasColumnName("PlaceID");

                entity.Property(e => e.PriceId).HasColumnName("PriceID");

                entity.Property(e => e.ResId).HasColumnName("ResID");

                entity.Property(e => e.SnifId).HasColumnName("SnifID");

                entity.Property(e => e.TimeArrived).HasColumnType("datetime");

                entity.Property(e => e.Tofes17Id).HasColumnName("Tofes17ID");

                entity.Property(e => e.TorType).HasMaxLength(50);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");

                entity.Property(e => e.YomanId).HasColumnName("YomanID");

                entity.Property(e => e.YomanName).HasMaxLength(50);
            });

            modelBuilder.Entity<QWorkerDetails1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qWorkerDetails1");

                entity.Property(e => e.Account).HasMaxLength(20);

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.Age2).HasMaxLength(75);

                entity.Property(e => e.AliaYear).HasMaxLength(4);

                entity.Property(e => e.ArmyId)
                    .HasMaxLength(12)
                    .HasColumnName("ArmyID");

                entity.Property(e => e.ArmyLevel).HasMaxLength(12);

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.AtdId).HasColumnName("AtdID");

                entity.Property(e => e.BCompany).HasColumnName("bCompany");

                entity.Property(e => e.BPassport).HasColumnName("bPassport");

                entity.Property(e => e.Bank).HasMaxLength(50);

                entity.Property(e => e.BankId).HasColumnName("BankID");

                entity.Property(e => e.BedName)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.BirthCountry).HasMaxLength(30);

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.Bituah).HasMaxLength(50);

                entity.Property(e => e.BmwebKupa)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebKupa");

                entity.Property(e => e.BmwebPassword)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebPassword");

                entity.Property(e => e.BmwebUserName)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebUserName");

                entity.Property(e => e.CarDetails).HasMaxLength(50);

                entity.Property(e => e.CarDetailsZug).HasMaxLength(103);

                entity.Property(e => e.CarNum).HasMaxLength(15);

                entity.Property(e => e.CarNumZug).HasMaxLength(33);

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CityId).HasColumnName("CityID");

                entity.Property(e => e.ClientKod2).HasMaxLength(30);

                entity.Property(e => e.ClientsiudyNew)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.CurrentStatus).HasMaxLength(10);

                entity.Property(e => e.DateAsk).HasColumnType("datetime");

                entity.Property(e => e.DateExitHosp).HasMaxLength(30);

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.DateGetCode).HasColumnType("datetime");

                entity.Property(e => e.DateLeave).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DayarHtml).HasMaxLength(219);

                entity.Property(e => e.DayarPhone).HasMaxLength(10);

                entity.Property(e => e.Details).HasColumnType("ntext");

                entity.Property(e => e.DiurKind).HasMaxLength(50);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.ElectricityCredit)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.EnglishName).HasMaxLength(30);

                entity.Property(e => e.ExitForecast).HasColumnType("datetime");

                entity.Property(e => e.FamilyStatus).HasMaxLength(50);

                entity.Property(e => e.FatherName).HasMaxLength(25);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Fname)
                    .HasMaxLength(30)
                    .HasColumnName("FName");

                entity.Property(e => e.Fnameeng)
                    .IsRequired()
                    .HasColumnName("FNAMEENG");

                entity.Property(e => e.FullAddress)
                    .IsRequired()
                    .HasMaxLength(233);

                entity.Property(e => e.Gender)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.GoremMafne).HasMaxLength(50);

                entity.Property(e => e.GoremMafneId).HasColumnName("GoremMafneID");

                entity.Property(e => e.HarshahManager)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Hospital).HasMaxLength(50);

                entity.Property(e => e.HospitalTransfer).HasMaxLength(100);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idnum).HasColumnName("IDNum");

                entity.Property(e => e.Insulation)
                    .HasMaxLength(500)
                    .HasColumnName("insulation");

                entity.Property(e => e.Job).HasMaxLength(30);

                entity.Property(e => e.KabalaDate).HasColumnType("datetime");

                entity.Property(e => e.Kind1).HasMaxLength(50);

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Kind2).HasMaxLength(25);

                entity.Property(e => e.Kind2Id).HasColumnName("Kind2ID");

                entity.Property(e => e.Kod).HasMaxLength(20);

                entity.Property(e => e.KodHilut).HasMaxLength(12);

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.KupaDoctor)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.KupaHeb)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("Kupa_Heb");

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.KupaSnif).HasMaxLength(300);

                entity.Property(e => e.KupaSnifId).HasColumnName("KupaSnifID");

                entity.Property(e => e.Lang).HasMaxLength(30);

                entity.Property(e => e.Languages).HasMaxLength(254);

                entity.Property(e => e.LastTnuah).HasMaxLength(50);

                entity.Property(e => e.LastTnuahDate).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahDate2).HasColumnType("datetime");

                entity.Property(e => e.LastTnuahId).HasColumnName("LastTnuahID");

                entity.Property(e => e.LeaveKindDesc).HasMaxLength(255);

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.LicenseId).HasMaxLength(50);

                entity.Property(e => e.ListMahlaka).HasMaxLength(1000);

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("LName");

                entity.Property(e => e.Lnameeng)
                    .IsRequired()
                    .HasColumnName("LNAMEENG");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaHeb)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("Mahlaka_Heb");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MahlakaKindId).HasColumnName("MahlakaKindID");

                entity.Property(e => e.MahozName)
                    .HasMaxLength(70)
                    .HasColumnName("mahozName");

                entity.Property(e => e.MailBox).HasMaxLength(20);

                entity.Property(e => e.MarketingAgaf).HasMaxLength(100);

                entity.Property(e => e.MarketingRoom).HasMaxLength(30);

                entity.Property(e => e.MarketingTifkudStatus).HasMaxLength(50);

                entity.Property(e => e.MarketingTifkudStatusId).HasColumnName("MarketingTifkudStatusID");

                entity.Property(e => e.Meaaged).HasMaxLength(50);

                entity.Property(e => e.MedMemo).HasMaxLength(300);

                entity.Property(e => e.MedProp).HasMaxLength(300);

                entity.Property(e => e.MedadimHtml)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MedicalGroup).HasMaxLength(50);

                entity.Property(e => e.Mothername).HasMaxLength(15);

                entity.Property(e => e.MyListUsers).HasMaxLength(254);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NameViewZug).HasMaxLength(402);

                entity.Property(e => e.NameViewZug2).HasMaxLength(402);

                entity.Property(e => e.NameviewHeb)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("nameview_Heb");

                entity.Property(e => e.NimanAddress).HasMaxLength(100);

                entity.Property(e => e.NimanName).HasMaxLength(50);

                entity.Property(e => e.OptNiman).HasColumnName("optNiman");

                entity.Property(e => e.OsekId)
                    .HasMaxLength(50)
                    .HasColumnName("OsekID");

                entity.Property(e => e.Password).HasMaxLength(20);

                entity.Property(e => e.PersonImage).HasMaxLength(100);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone1Zug).HasMaxLength(43);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.PlaceHtml)
                    .HasMaxLength(84)
                    .HasColumnName("PlaceHTML");

                entity.Property(e => e.PriceBack).HasColumnType("money");

                entity.Property(e => e.PriceEnter).HasColumnType("money");

                entity.Property(e => e.Profile1).HasMaxLength(50);

                entity.Property(e => e.Properties).HasColumnType("ntext");

                entity.Property(e => e.RelatedName).HasMaxLength(25);

                entity.Property(e => e.RelatedNameBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedNameBCountry");

                entity.Property(e => e.RelatedNameBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedNameBDay");

                entity.Property(e => e.RelatedNameIdcard)
                    .HasMaxLength(14)
                    .HasColumnName("RelatedNameIDCard");

                entity.Property(e => e.RelatedNameView).HasMaxLength(200);

                entity.Property(e => e.RelatedNameWorkJob).HasMaxLength(20);

                entity.Property(e => e.RelatedWorkerBcountry)
                    .HasMaxLength(20)
                    .HasColumnName("RelatedWorkerBCountry");

                entity.Property(e => e.RelatedWorkerBday)
                    .HasColumnType("datetime")
                    .HasColumnName("RelatedWorkerBDay");

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.Snif).HasMaxLength(50);

                entity.Property(e => e.Sochen).HasMaxLength(200);

                entity.Property(e => e.SochenId).HasColumnName("SochenID");

                entity.Property(e => e.Sponser).HasMaxLength(50);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold).HasColumnName("SponserIDOld");

                entity.Property(e => e.SponserService)
                    .HasMaxLength(50)
                    .HasColumnName("sponserService");

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TnuahDetails).HasMaxLength(255);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");

                entity.Property(e => e.Toaar).HasMaxLength(15);

                entity.Property(e => e.UserCreateContact).HasMaxLength(200);

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserPassport).HasMaxLength(25);

                entity.Property(e => e.WorkerJobEnd).HasColumnType("datetime");

                entity.Property(e => e.WorkerJobStart).HasColumnType("datetime");

                entity.Property(e => e.WorkerUserName).HasMaxLength(50);

                entity.Property(e => e.YearsOfEducation).HasMaxLength(2);

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<QWorkersAsMainId>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qWorkersAsMainId");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .HasMaxLength(200)
                    .HasColumnName("item");

                entity.Property(e => e.Mainid).HasColumnName("mainid");
            });

            modelBuilder.Entity<QWorkersDaysTime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qWorkersDaysTimes");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.Mishmeret).HasMaxLength(15);

                entity.Property(e => e.MishmeretId).HasColumnName("MishmeretID");

                entity.Property(e => e.Time1From).HasMaxLength(50);

                entity.Property(e => e.Time1To).HasMaxLength(50);

                entity.Property(e => e.WorkerId).HasColumnName("WorkerID");
            });

            modelBuilder.Entity<QYeshivaParticipate>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qYeshivaParticipates");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Job).HasMaxLength(50);

                entity.Property(e => e.JobId).HasColumnName("JobID");

                entity.Property(e => e.PlanId).HasColumnName("PlanID");

                entity.Property(e => e.SkiraDate)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.WorkerId).HasColumnName("WorkerID");

                entity.Property(e => e.WorkerName).HasMaxLength(50);

                entity.Property(e => e.YeshivaId).HasColumnName("YeshivaID");
            });

            modelBuilder.Entity<QclientGuardian>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qclientGuardians");

                entity.Property(e => e.Address).HasMaxLength(91);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Field).HasMaxLength(50);

                entity.Property(e => e.FullName).HasMaxLength(28);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kirva).HasMaxLength(20);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone2).HasMaxLength(20);
            });

            modelBuilder.Entity<QtblBm>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qtblBm");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Name1).HasColumnName("name1");
            });

            modelBuilder.Entity<QtblDefBmmiun>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qtblDefBMMiun");

                entity.Property(e => e.Id).HasColumnName("id");
            });

            modelBuilder.Entity<QvAdminDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qv_admin_details");

                entity.Property(e => e.Birthday).HasMaxLength(30);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Dateenter)
                    .HasColumnType("datetime")
                    .HasColumnName("dateenter");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(30)
                    .HasColumnName("firstName");

                entity.Property(e => e.Gender)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("gender");

                entity.Property(e => e.Height).HasColumnName("height");

                entity.Property(e => e.IdCard).HasMaxLength(15);

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("lastName");

                entity.Property(e => e.MahlakaName)
                    .HasMaxLength(50)
                    .HasColumnName("mahlakaName");

                entity.Property(e => e.NameLanguge)
                    .HasMaxLength(30)
                    .HasColumnName("nameLanguge");

                entity.Property(e => e.Weight).HasColumnName("weight");
            });

            modelBuilder.Entity<QvMeidaTzunati>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("qv_meida_tzunati");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(30)
                    .HasColumnName("firstName");

                entity.Property(e => e.IdCard).HasMaxLength(15);

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("lastName");

                entity.Property(e => e.Merkam).HasColumnName("merkam");

                entity.Property(e => e.OfenAchila).HasColumnName("ofenAchila");

                entity.Property(e => e.Tosafmazon).HasColumnName("tosafmazon");

                entity.Property(e => e.Tosaftzuna).HasColumnName("tosaftzuna");
            });

            modelBuilder.Entity<Regishot1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("regishot1");

                entity.Property(e => e.Avotid).HasColumnName("avotid");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<Regishot2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("regishot2");

                entity.Property(e => e.Avotid).HasColumnName("avotid");
            });

            modelBuilder.Entity<ReportMabar105b1>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaReportMabar105b1_PK")
                    .IsClustered(false);

                entity.ToTable("ReportMabar105b1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.ReportId)
                    .HasColumnName("ReportID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Siudit).HasMaxLength(255);

                entity.Property(e => e.UserCreate).HasMaxLength(30);
            });

            modelBuilder.Entity<ReportMabar105b2>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaReportMabar105b2_PK")
                    .IsClustered(false);

                entity.ToTable("ReportMabar105b2");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DateEnter)
                    .HasColumnType("datetime")
                    .HasComment("תאריך כניסה אחרונה למחלקה הסיעודית");

                entity.Property(e => e.DateExit)
                    .HasColumnType("datetime")
                    .HasComment("תאריך שחרור מהמחלקה");

                entity.Property(e => e.DayarName).HasMaxLength(50);

                entity.Property(e => e.ExitTarget)
                    .HasMaxLength(15)
                    .HasComment("רגיל,בית-חולים,פטירה,מחלקה אחרת");

                entity.Property(e => e.NumDays)
                    .HasDefaultValueSql("(0)")
                    .HasComment("ימי שהיה של חולים שהשתחררו");

                entity.Property(e => e.ReportId)
                    .HasColumnName("ReportID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<ReportMabar494>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ReportMabar494");

                entity.HasIndex(e => e.Id, "ReportMabar494ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DayPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("עלות יומית לאשפוז (כמה מב\"ר משלמים)");

                entity.Property(e => e.DaysInMonth)
                    .HasDefaultValueSql("(0)")
                    .HasComment("ימי אשפוז בחודש במוסד");

                entity.Property(e => e.DiurKind)
                    .HasMaxLength(20)
                    .HasComment("סטאטוס הדייר: בד\"כ סיעודי מב\"ר");

                entity.Property(e => e.HospitalKod)
                    .HasMaxLength(50)
                    .HasComment("קוד ביה\"ח המאשפז");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IshpuzDate)
                    .HasMaxLength(100)
                    .HasComment("תאריכי אשפוז בחודש , מופרדים ע\"י ;");

                entity.Property(e => e.KabalaDate)
                    .HasColumnType("datetime")
                    .HasComment("ת. קבלה לסטאטוס סיעודי מב\"ר");

                entity.Property(e => e.KodMahoz).HasDefaultValueSql("(0)");

                entity.Property(e => e.LeaveDate)
                    .HasColumnType("datetime")
                    .HasComment("תאריך עזיבה/פטירה");

                entity.Property(e => e.LeaveKind)
                    .HasDefaultValueSql("(0)")
                    .HasComment("קוד סוג העזיבה, מקושר לטבלה tblDefLeaveKind");

                entity.Property(e => e.Month)
                    .HasDefaultValueSql("(0)")
                    .HasComment("החודש");

                entity.Property(e => e.ReturnDate)
                    .HasMaxLength(100)
                    .HasComment("תאריכי חזרה למחלקה בחודש , מופרדים ע\"י ;");

                entity.Property(e => e.SumPay)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום כולל לתשלום");

                entity.Property(e => e.TekenMita).HasDefaultValueSql("(0)");

                entity.Property(e => e.Year)
                    .HasDefaultValueSql("(0)")
                    .HasComment("השנה");
            });

            modelBuilder.Entity<ReutFormPkudot>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ReutFormPkudot");

                entity.Property(e => e.DrugKod)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DrugName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.אבחנה)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.אופן)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.הודפסבריכוז).HasColumnName("הודפס בריכוז");

                entity.Property(e => e.הופסקבהוראה).HasColumnName("הופסק בהוראה");

                entity.Property(e => e.הוראה)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.הערה)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.הערהלתזכורת)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("הערה לתזכורת");

                entity.Property(e => e.יחלהזמנה).HasColumnName("יח להזמנה");

                entity.Property(e => e.יחמידה)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("יח מידה");

                entity.Property(e => e.ימיהשבוע).HasColumnName("ימי השבוע");

                entity.Property(e => e.ימיםכן).HasColumnName("ימים כן");

                entity.Property(e => e.ימיםלא).HasColumnName("ימים לא");

                entity.Property(e => e.כלשבוע).HasColumnName("כל שבוע");

                entity.Property(e => e.כמות).HasColumnType("money");

                entity.Property(e => e.כמות1)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.כמותמוזמנת)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("כמות מוזמנת");

                entity.Property(e => e.מינון).HasColumnType("money");

                entity.Property(e => e.מינוןישן).HasColumnName("מינון ישן");

                entity.Property(e => e.מסמעקב).HasColumnName("מס מעקב");

                entity.Property(e => e.מסעובד).HasColumnName("מס עובד");

                entity.Property(e => e.מספררשומה).HasColumnName("מספר רשומה");

                entity.Property(e => e.מפסיקההוראה)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("מפסיק ההוראה");

                entity.Property(e => e.משעה)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.מתאריך).HasColumnType("datetime");

                entity.Property(e => e.נותןההוראה)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("נותן ההוראה");

                entity.Property(e => e.סהכמינוןלמתן)
                    .HasColumnType("money")
                    .HasColumnName("סהכ מינון למתן");

                entity.Property(e => e.סוגהוראה).HasColumnName("סוג הוראה");

                entity.Property(e => e.סוגהוראה1).HasColumnName("סוג הוראה1");

                entity.Property(e => e.סיסמה)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.עדשעה)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("עד שעה");

                entity.Property(e => e.עדתאריך)
                    .HasColumnType("datetime")
                    .HasColumnName("עד תאריך");

                entity.Property(e => e.עדתאריךמקורי)
                    .HasColumnType("datetime")
                    .HasColumnName("עד תאריך מקורי");

                entity.Property(e => e.צורה1)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.קודאבחנה)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("קוד אבחנה");

                entity.Property(e => e.קודהוראה).HasColumnName("קוד הוראה");

                entity.Property(e => e.קודמפסיק).HasColumnName("קוד מפסיק");

                entity.Property(e => e.רגישויות)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.רופא)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.רשומתאב).HasColumnName("רשומת אב");

                entity.Property(e => e.שםגנרי)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("שם גנרי");

                entity.Property(e => e.שעותלמתן)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("שעות למתן");

                entity.Property(e => e.תאריךהוראה)
                    .HasColumnType("datetime")
                    .HasColumnName("תאריך הוראה");

                entity.Property(e => e.תאריךלתזכורת)
                    .HasColumnType("datetime")
                    .HasColumnName("תאריך לתזכורת");

                entity.Property(e => e.תאריךריענון)
                    .HasColumnType("datetime")
                    .HasColumnName("תאריך ריענון");
            });

            modelBuilder.Entity<ReutMedicine>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DrugFormat)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DrugKod)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DrugKodNew)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DrugName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MinunNum).HasColumnType("money");

                entity.Property(e => e.MinunType)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.גנרימקוצר)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("גנרי מקוצר");

                entity.Property(e => e.יחמשקל)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("יח משקל");

                entity.Property(e => e.יחנפח)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("יח נפח");

                entity.Property(e => e.יחריכוז)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("יח ריכוז");

                entity.Property(e => e.לאלהזמין).HasColumnName("לא להזמין");

                entity.Property(e => e.לנפח).HasColumnType("money");

                entity.Property(e => e.מינוןישן).HasColumnName("מינון ישן");

                entity.Property(e => e.מספררשומה).HasColumnName("מספר רשומה");

                entity.Property(e => e.מסקבוצה).HasColumnName("מס קבוצה");

                entity.Property(e => e.משקל).HasColumnType("money");

                entity.Property(e => e.קודמסחרי)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("קוד מסחרי");

                entity.Property(e => e.ריכוז)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.רשומתאב).HasColumnName("רשומת אב");

                entity.Property(e => e.שםגנרי)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("שם גנרי");

                entity.Property(e => e.שםקבוצה)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("שם קבוצה");
            });

            modelBuilder.Entity<Sale>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Sales).HasColumnType("money");
            });

            modelBuilder.Entity<SevaBria1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SevaBria1");

                entity.Property(e => e.זמניטיפולבפועל)
                    .HasMaxLength(255)
                    .HasColumnName("זמני טיפול בפועל");

                entity.Property(e => e.מזההמערכת).HasColumnName("מזהה מערכת");

                entity.Property(e => e.מטפל).HasMaxLength(255);

                entity.Property(e => e.קטגוריה).HasMaxLength(255);

                entity.Property(e => e.רישוםסיוםביצוע)
                    .HasMaxLength(255)
                    .HasColumnName("רישום סיום ביצוע");

                entity.Property(e => e.שםהטיפול)
                    .HasMaxLength(255)
                    .HasColumnName("שם הטיפול");

                entity.Property(e => e.שםמשפחה)
                    .HasMaxLength(255)
                    .HasColumnName("שם משפחה");

                entity.Property(e => e.שםפרטי)
                    .HasMaxLength(255)
                    .HasColumnName("שם פרטי");

                entity.Property(e => e.שעתביצוע)
                    .HasColumnType("datetime")
                    .HasColumnName("שעת ביצוע");

                entity.Property(e => e.תאריך).HasColumnType("datetime");

                entity.Property(e => e.תיאורהטיפול).HasColumnName("תיאור הטיפול");
            });

            modelBuilder.Entity<SolutionFeed>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SolutionFeed");

                entity.Property(e => e.Archive).HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.SolFgroup)
                    .HasMaxLength(10)
                    .HasColumnName("SolFGroup");

                entity.Property(e => e.SolFkod)
                    .HasMaxLength(50)
                    .HasColumnName("SolFKod");

                entity.Property(e => e.TradeName).HasMaxLength(255);

                entity.Property(e => e.TradeNameShort).HasMaxLength(255);
            });

            modelBuilder.Entity<SolutionFeedClient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SolutionFeedClient");

                entity.Property(e => e.Amount)
                    .HasMaxLength(40)
                    .HasColumnName("amount");

                entity.Property(e => e.AmountDrug)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DrugKod)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FabricId).HasMaxLength(20);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Provision).HasColumnName("provision");

                entity.Property(e => e.SolFid).HasColumnName("SolFId");

                entity.Property(e => e.Time1).HasMaxLength(10);

                entity.Property(e => e.UserCreate).HasMaxLength(40);
            });

            modelBuilder.Entity<Sp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("sp1");

                entity.Property(e => e.AppointAddress).HasMaxLength(50);

                entity.Property(e => e.AppointDate).HasColumnType("datetime");

                entity.Property(e => e.AppointTheme).HasMaxLength(255);

                entity.Property(e => e.AppointWith).HasMaxLength(25);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.CompleteSign)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.OptKind).HasColumnName("optKind");

                entity.Property(e => e.Responsible).HasMaxLength(50);

                entity.Property(e => e.TheKind)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Time1).HasMaxLength(10);

                entity.Property(e => e.Time2).HasMaxLength(10);

                entity.Property(e => e.UserCreate).HasMaxLength(50);

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<SpecialTariff>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.TariffId).HasColumnName("TariffID");

                entity.Property(e => e.TariffSpecial).HasMaxLength(50);
            });

            modelBuilder.Entity<System>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaSystem_PK")
                    .IsClustered(false);

                entity.ToTable("System");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Admin).HasMaxLength(15);

                entity.Property(e => e.BackupDir).HasMaxLength(50);

                entity.Property(e => e.BusName).HasMaxLength(50);

                entity.Property(e => e.ChkSecondDir)
                    .HasColumnName("chkSecondDir")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.City).HasMaxLength(20);

                entity.Property(e => e.DocFormat).HasDefaultValueSql("(0)");

                entity.Property(e => e.DocumentsDir).HasMaxLength(255);

                entity.Property(e => e.Email).HasMaxLength(50);

                entity.Property(e => e.EmailApp).HasMaxLength(50);

                entity.Property(e => e.Fax).HasMaxLength(15);

                entity.Property(e => e.ImportDir).HasMaxLength(255);

                entity.Property(e => e.OsekId)
                    .HasMaxLength(50)
                    .HasColumnName("OsekID");

                entity.Property(e => e.OutlookApp).HasMaxLength(50);

                entity.Property(e => e.Phone).HasMaxLength(15);

                entity.Property(e => e.ReportImage).HasMaxLength(255);

                entity.Property(e => e.ScanApp).HasMaxLength(50);

                entity.Property(e => e.SiteHome).HasMaxLength(50);

                entity.Property(e => e.Street).HasMaxLength(25);

                entity.Property(e => e.WordApp).HasMaxLength(50);
            });

            modelBuilder.Entity<Tariff>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaTariffs_PK")
                    .IsClustered(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Action)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ActionFor)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Tariff1)
                    .HasMaxLength(50)
                    .HasColumnName("Tariff");
            });

            modelBuilder.Entity<Task>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaTasks_PK")
                    .IsClustered(false);

                entity.HasIndex(e => e.PalmId, "PalmId")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))")
                    .HasComment("תאריך");

                entity.Property(e => e.Date2)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))");

                entity.Property(e => e.DayFrequency).HasMaxLength(50);

                entity.Property(e => e.Frequency).HasMaxLength(50);

                entity.Property(e => e.Main).HasDefaultValueSql("(1)");

                entity.Property(e => e.Outlook).HasDefaultValueSql("(0)");

                entity.Property(e => e.PalmId)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לרשימה בפאלם");

                entity.Property(e => e.Phone)
                    .HasMaxLength(15)
                    .HasComment("טלפון לבירורים");

                entity.Property(e => e.Place)
                    .HasMaxLength(50)
                    .HasComment("מקום");

                entity.Property(e => e.Priority)
                    .HasDefaultValueSql("(1)")
                    .HasComment("עדיפות המשימה");

                entity.Property(e => e.ReminderDate).HasColumnType("datetime");

                entity.Property(e => e.ReminderOn).HasDefaultValueSql("(0)");

                entity.Property(e => e.Return).HasDefaultValueSql("(0)");

                entity.Property(e => e.SoundPath).HasMaxLength(255);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.StartTime).HasColumnType("datetime");

                entity.Property(e => e.StatusId).HasColumnName("StatusID");

                entity.Property(e => e.SynTime)
                    .HasColumnType("datetime")
                    .HasComment("מתי בוצע השינוי");

                entity.Property(e => e.TaskTheme).HasMaxLength(255);

                entity.Property(e => e.Time1)
                    .HasMaxLength(10)
                    .HasComment("שעה");

                entity.Property(e => e.Time2).HasMaxLength(10);

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("המשתמש שהועברה אליו המשימה");

                entity.Property(e => e.UserIdcreate)
                    .HasColumnName("UserIDCreate")
                    .HasDefaultValueSql("(0)")
                    .HasComment("המשתמש שיצר את המשימה");

                entity.Property(e => e.UserIdreminder)
                    .HasColumnName("UserIDReminder")
                    .HasDefaultValueSql("(0)")
                    .HasComment("המשתמש אליו מיועדת התזכורת");
            });

            modelBuilder.Entity<Task2>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaaTask2_PK")
                    .IsClustered(false);

                entity.ToTable("Task2");

                entity.HasIndex(e => e.TaskId, "TasksTask2")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.LastDate).HasColumnType("datetime");

                entity.Property(e => e.LastTime).HasMaxLength(10);

                entity.Property(e => e.Main)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם זו משימה ראשית?");

                entity.Property(e => e.Place).HasMaxLength(50);

                entity.Property(e => e.RemDate).HasColumnType("datetime");

                entity.Property(e => e.RemTime).HasMaxLength(10);

                entity.Property(e => e.ReminderDate).HasColumnType("datetime");

                entity.Property(e => e.ReminderOn).HasDefaultValueSql("(0)");

                entity.Property(e => e.ResponsibleId)
                    .HasColumnName("ResponsibleID")
                    .HasComment("מס' המשתמש האחראי");

                entity.Property(e => e.SoundPath).HasMaxLength(255);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.StartTime).HasMaxLength(10);

                entity.Property(e => e.StatusId).HasColumnName("StatusID");

                entity.Property(e => e.TaskId).HasColumnName("TaskID");

                entity.Property(e => e.TaskTheme).HasMaxLength(255);

                entity.HasOne(d => d.Task)
                    .WithMany(p => p.Task2s)
                    .HasForeignKey(d => d.TaskId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("Task2_FK00");
            });

            modelBuilder.Entity<Tasks1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Tasks1");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.ReminderDate).HasColumnType("datetime");

                entity.Property(e => e.Status).HasMaxLength(30);

                entity.Property(e => e.StatusId).HasColumnName("StatusID");

                entity.Property(e => e.StatusSign)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TaskTheme).HasMaxLength(255);

                entity.Property(e => e.UserCreate).HasMaxLength(50);

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<Tbl1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbl1");

                entity.Property(e => e.Admission)
                    .HasColumnType("datetime")
                    .HasColumnName("ADMISSION");

                entity.Property(e => e.Department)
                    .HasMaxLength(255)
                    .HasColumnName("DEPARTMENT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("NAME");
            });

            modelBuilder.Entity<TblA3error>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblA3error");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.ErrNum).HasColumnName("errNum");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<TblAcLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblAcLog");

                entity.Property(e => e.AcKind)
                    .HasMaxLength(50)
                    .HasColumnName("acKind");

                entity.Property(e => e.AcRecId).HasColumnName("acRecID");

                entity.Property(e => e.AcType)
                    .HasMaxLength(50)
                    .HasColumnName("acType");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.UserCreateId).HasColumnName("userCreateId");
            });

            modelBuilder.Entity<TblActivityParticipant>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblActivityParticipants");

                entity.Property(e => e.ActivityId).HasColumnName("ActivityID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblAdmin>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblAdmin");

                entity.Property(e => e.Admin).HasMaxLength(10);
            });

            modelBuilder.Entity<TblAgaf>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblAgafs_PK")
                    .IsClustered(false);

                entity.ToTable("tblAgafs");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.LocationId, "LocationID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.AgafKind).HasDefaultValueSql("(0)");

                entity.Property(e => e.AgafName).HasMaxLength(100);

                entity.Property(e => e.BRoomFrame)
                    .HasColumnName("bRoomFrame")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.NKind)
                    .HasColumnName("nKind")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PicPath).HasMaxLength(250);
            });

            modelBuilder.Entity<TblAgafItem>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblAgafItems_PK")
                    .IsClustered(false);

                entity.ToTable("tblAgafItems");

                entity.HasIndex(e => e.AgafId, "AgafID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ParitId, "ParitID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ParitKod, "ParitKod")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.RoomId, "RoomId")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AgafId)
                    .HasColumnName("AgafID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לאגף");

                entity.Property(e => e.BActive).HasColumnName("bActive");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BarCode1).HasMaxLength(50);

                entity.Property(e => e.ItemLink)
                    .HasMaxLength(255)
                    .HasComment("קישור לקובץ  (,תמונה)");

                entity.Property(e => e.Memo1)
                    .HasMaxLength(120)
                    .HasColumnName("memo1")
                    .HasComment("תיאור");

                entity.Property(e => e.ParitId)
                    .HasColumnName("ParitID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לפריט");

                entity.Property(e => e.ParitKod).HasMaxLength(25);

                entity.Property(e => e.RoomId)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לחדר מסדרון");
            });

            modelBuilder.Entity<TblAgafItemsAction>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblAgafItemsAction");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Memo1).HasMaxLength(100);

                entity.Property(e => e.NTyp).HasColumnName("nTyp");

                entity.Property(e => e.ParitKod).HasMaxLength(30);

                entity.Property(e => e.RelatedId).HasColumnName("RelatedID");

                entity.Property(e => e.RoomIdD).HasColumnName("RoomID_D");

                entity.Property(e => e.RoomIdS).HasColumnName("RoomID_S");

                entity.Property(e => e.Time1).HasMaxLength(50);
            });

            modelBuilder.Entity<TblAgafPaint>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblAgafPaint");

                entity.HasIndex(e => e.AgafId, "AgafID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.RoomId, "RoomID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ImgKey, "imgKey")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.RoomId, "tblRoomstblAgafPaint")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.AgafId)
                    .HasColumnName("AgafID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Height1).HasDefaultValueSql("(0)");

                entity.Property(e => e.ImgKey)
                    .HasMaxLength(20)
                    .HasColumnName("imgKey");

                entity.Property(e => e.Left1).HasDefaultValueSql("(0)");

                entity.Property(e => e.NColor)
                    .HasColumnName("nColor")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NObj)
                    .HasColumnName("nObj")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RoomId)
                    .HasColumnName("RoomID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Top1).HasDefaultValueSql("(0)");

                entity.Property(e => e.Width1).HasDefaultValueSql("(0)");

                entity.HasOne(d => d.Room)
                    .WithMany()
                    .HasForeignKey(d => d.RoomId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("tblAgafPaint_FK00");
            });

            modelBuilder.Entity<TblAllMediclHospitalSum>(entity =>
            {
                entity.ToTable("tblAllMediclHospitalSum");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DateCreate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FormId).HasDefaultValueSql("((0))");

                entity.Property(e => e.MedicalGroupId).HasColumnName("MedicalGroupID");

                entity.Property(e => e.SType).HasColumnName("sType");

                entity.Property(e => e.UserIdCreteId).HasColumnName("UserIdCreteID");
            });

            modelBuilder.Entity<TblAmbulance>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblAmbulance_PK")
                    .IsClustered(false);

                entity.ToTable("tblAmbulance");

                entity.HasIndex(e => e.ClientId, "ClientID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BAuto).HasColumnName("bAuto");

                entity.Property(e => e.BExit)
                    .HasColumnName("bExit")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם זו יציאה לבי\"ח/חזרה");

                entity.Property(e => e.BFamilyLivuy).HasColumnName("bFamilyLivuy");

                entity.Property(e => e.BPay)
                    .HasColumnName("bPay")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BStatus)
                    .HasColumnName("bStatus")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BUrgent)
                    .HasColumnName("bUrgent")
                    .HasDefaultValueSql("(0)")
                    .HasComment("0-רגיל, 1-דחוף");

                entity.Property(e => e.ChargeId).HasDefaultValueSql("((0))");

                entity.Property(e => e.ChargeLivuyId).HasColumnName("ChargeLivuyID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Dt1)
                    .HasColumnType("datetime")
                    .HasColumnName("dt1");

                entity.Property(e => e.KindId).HasColumnName("KindID");

                entity.Property(e => e.Memo).HasDefaultValueSql("('')");

                entity.Property(e => e.NumBill)
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PayBy)
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Place).HasMaxLength(100);

                entity.Property(e => e.Price)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Reason).HasColumnType("ntext");

                entity.Property(e => e.RelatedHfnayaId).HasColumnName("RelatedHfnayaID");

                entity.Property(e => e.SponserId)
                    .HasColumnName("SponserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Target).HasMaxLength(250);

                entity.Property(e => e.Time1)
                    .HasMaxLength(10)
                    .HasColumnName("time1");

                entity.Property(e => e.UserCreateId).HasColumnName("userCreateId");
            });

            modelBuilder.Entity<TblAmirTest>(entity =>
            {
                entity.ToTable("tblAmirTest");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name).HasColumnName("name");

                entity.Property(e => e.Ward).HasColumnName("ward");
            });

            modelBuilder.Entity<TblAppSetting>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblAppSetting");

                entity.HasIndex(e => new { e.Key1, e.LocationId, e.UserId }, "IX_KEY_LOC_USER")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1).HasMaxLength(50);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.Val1)
                    .HasMaxLength(4000)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblArchiveForm>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblArchiveForms_PK")
                    .IsClustered(false);

                entity.ToTable("tblArchiveForms");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Key1, "MainHtmlID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Name1, "Name1")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך שמירה בארכיון");

                entity.Property(e => e.HtmlSource).HasColumnType("ntext");

                entity.Property(e => e.Key1)
                    .HasMaxLength(50)
                    .HasComment("מילת מפתח לזיהוי הסידרה: ListPriceShehia");

                entity.Property(e => e.Name1)
                    .HasMaxLength(50)
                    .HasComment("שם הטופס");
            });

            modelBuilder.Entity<TblAvhanaMedicineComment>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblAvhanaMedicineComments");

                entity.Property(e => e.CommentId).HasColumnName("commentID");

                entity.Property(e => e.CommentKey)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblAvhanot>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblAvhanot");

                entity.HasIndex(e => e.Kod, "tblAvhanotKod")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Archive).HasColumnName("archive");

                entity.Property(e => e.BShortList).HasColumnName("bShortList");

                entity.Property(e => e.BSpec).HasColumnName("bSpec");

                entity.Property(e => e.Icdkind)
                    .IsRequired()
                    .HasMaxLength(2)
                    .HasColumnName("ICDKind")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InBalev)
                    .HasMaxLength(255)
                    .HasColumnName("inBalev");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Kod).HasMaxLength(255);

                entity.Property(e => e.KodY).HasMaxLength(255);

                entity.Property(e => e.MiunId).HasColumnName("MiunID");

                entity.Property(e => e.SeegnalCode)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ShortKey).HasMaxLength(100);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Userid)
                    .HasColumnName("userid")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblAvhanotTran>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblAvhanotTrans");

                entity.HasIndex(e => e.Avhanakod, "UQ__tblAvhan__5D8F4D0E43D38268")
                    .IsUnique();

                entity.Property(e => e.Avhanakod)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("avhanakod");

                entity.Property(e => e.AvhanakodNew)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("avhanakodNew")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<TblBakaratTrufot>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblBakaratTrufot");

                entity.Property(e => e.BConfirmDoctor).HasColumnName("bConfirmDoctor");

                entity.Property(e => e.BConfirmNurse).HasColumnName("bConfirmNurse");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BLocked).HasColumnName("bLocked");

                entity.Property(e => e.FormDate).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Tsatmp)
                    .HasColumnType("datetime")
                    .HasColumnName("tsatmp")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblBdikaDetail>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblBdikaDetail_PK")
                    .IsClustered(false);

                entity.ToTable("tblBdikaDetail");

                entity.HasIndex(e => e.BdikaId, "BdikaID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BNumric)
                    .HasColumnName("bNumric")
                    .HasDefaultValueSql("(1)")
                    .HasComment("האם מדובר בערך מספרי");

                entity.Property(e => e.BdikaId)
                    .HasColumnName("BdikaID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לטבלת בדיקות");

                entity.Property(e => e.Max1).HasDefaultValueSql("(0)");

                entity.Property(e => e.Min1).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblBdikot>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblBdikot_PK")
                    .IsClustered(false);

                entity.ToTable("tblBdikot");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasComment("מזהה");

                entity.Property(e => e.Archive).HasDefaultValueSql("(0)");

                entity.Property(e => e.BdikaName).HasMaxLength(120);

                entity.Property(e => e.BdikaTreeSrc).HasColumnType("ntext");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.UserIdcreate)
                    .HasColumnName("UserIDCreate")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblBiocomCharge>(entity =>
            {
                entity.ToTable("tblBiocomCharges");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BCharged)
                    .HasColumnName("bCharged")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BDay).HasColumnName("bDay");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasMaxLength(50);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(50)
                    .HasColumnName("IDCard");

                entity.Property(e => e.MainId).HasColumnName("MainID");

                entity.Property(e => e.MiunId).HasColumnName("MiunID");

                entity.Property(e => e.ServiceKod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.UnitPrice).HasColumnType("money");
            });

            modelBuilder.Entity<TblBiocomMain>(entity =>
            {
                entity.ToTable("tblBiocomMain");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.FileName).IsRequired();

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblBlisterFollowup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblBlisterFollowups");

                entity.HasIndex(e => new { e.BlisterMainId, e.BDel, e.Date1, e.TStamp }, "idx_tblBlisterFollowups_BlisterMainID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BFamilyGuidance)
                    .HasColumnName("bFamilyGuidance")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BlisterColor).HasMaxLength(50);

                entity.Property(e => e.BlisterLevel).HasMaxLength(30);

                entity.Property(e => e.BlisterMainId).HasColumnName("BlisterMainID");

                entity.Property(e => e.Comments).HasColumnType("ntext");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.Date199).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Img1)
                    .HasMaxLength(200)
                    .HasColumnName("img1");

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.ParaDigDateSign).HasMaxLength(50);

                entity.Property(e => e.ParaDigHafrashaKind).HasMaxLength(50);

                entity.Property(e => e.ParaDigHafrashaQuantity).HasMaxLength(50);

                entity.Property(e => e.ParaDigIdcard)
                    .HasMaxLength(50)
                    .HasColumnName("ParaDigIDCard");

                entity.Property(e => e.ParaDigTimeSign).HasMaxLength(50);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblBm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblBM");

                entity.Property(e => e.DefMax).HasColumnName("defMax");

                entity.Property(e => e.DefMin).HasColumnName("defMin");

                entity.Property(e => e.DefYm)
                    .HasMaxLength(50)
                    .HasColumnName("defYM");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1).HasMaxLength(50);

                entity.Property(e => e.KupaBc1)
                    .HasMaxLength(50)
                    .HasColumnName("KupaBC1");

                entity.Property(e => e.KupaBc2)
                    .HasMaxLength(50)
                    .HasColumnName("KupaBC2");

                entity.Property(e => e.KupaBc3)
                    .HasMaxLength(50)
                    .HasColumnName("KupaBC3");

                entity.Property(e => e.KupaBc4)
                    .HasMaxLength(50)
                    .HasColumnName("KupaBC4");

                entity.Property(e => e.KupaBc5)
                    .HasMaxLength(50)
                    .HasColumnName("KupaBC5");

                entity.Property(e => e.KupaKey1).HasMaxLength(50);

                entity.Property(e => e.KupaKey2).HasMaxLength(50);

                entity.Property(e => e.KupaKey3).HasMaxLength(50);

                entity.Property(e => e.KupaKey4).HasMaxLength(50);

                entity.Property(e => e.KupaKey5).HasMaxLength(50);

                entity.Property(e => e.MiunId).HasColumnName("MiunID");

                entity.Property(e => e.NOrder).HasColumnName("nOrder");

                entity.Property(e => e.Name1).HasMaxLength(50);

                entity.Property(e => e.OrderId).HasDefaultValueSql("((9999))");

                entity.Property(e => e.SeegnalCode)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SeegnalStatusBm)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TempId).HasColumnName("tempID");

                entity.Property(e => e.TempVal)
                    .HasMaxLength(50)
                    .HasColumnName("tempVal");

                entity.Property(e => e.UniqClalitId)
                    .HasMaxLength(50)
                    .HasColumnName("UniqClalitID");

                entity.Property(e => e.UniqMacabiId)
                    .HasMaxLength(50)
                    .HasColumnName("UniqMacabiID");
            });

            modelBuilder.Entity<TblBmLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblBmLog");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NumErr).HasDefaultValueSql("((0))");

                entity.Property(e => e.NumRead).HasDefaultValueSql("((0))");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblBmLogDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblBmLogDetails");

                entity.Property(e => e.BmKey)
                    .HasMaxLength(45)
                    .HasColumnName("bmKey")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Bmid)
                    .HasMaxLength(12)
                    .HasColumnName("BMID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.ErrorMsg)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IdCard)
                    .HasMaxLength(12)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NType)
                    .HasColumnName("nType")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ParentId).HasColumnName("ParentID");

                entity.Property(e => e.RelatedId).HasColumnName("RelatedID");
            });

            modelBuilder.Entity<TblBmPass>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblBmPass");

                entity.Property(e => e.AvotKey).HasMaxLength(100);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KupaKey).HasMaxLength(100);

                entity.Property(e => e.NKupa).HasColumnName("nKupa");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblBmTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblBmTemp");

                entity.Property(e => e.BSpec)
                    .HasColumnName("bSpec")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Bmid)
                    .HasMaxLength(50)
                    .HasColumnName("BMID");

                entity.Property(e => e.Bmname)
                    .HasMaxLength(300)
                    .HasColumnName("BMName");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(20)
                    .HasColumnName("IDCard");

                entity.Property(e => e.LastRead).HasColumnType("datetime");

                entity.Property(e => e.LogErr).HasDefaultValueSql("((0))");

                entity.Property(e => e.LogMsg).HasMaxLength(300);

                entity.Property(e => e.Max1).HasMaxLength(20);

                entity.Property(e => e.Memo1).HasMaxLength(500);

                entity.Property(e => e.Min1).HasMaxLength(20);

                entity.Property(e => e.ReqId)
                    .HasMaxLength(50)
                    .HasColumnName("ReqID");

                entity.Property(e => e.Val1).HasMaxLength(100);

                entity.Property(e => e.Ym)
                    .HasMaxLength(20)
                    .HasColumnName("YM");
            });

            modelBuilder.Entity<TblBmdefMinMax>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblBMDefMinMax");

                entity.Property(e => e.DefMax)
                    .HasMaxLength(50)
                    .HasColumnName("defMax");

                entity.Property(e => e.DefMin)
                    .HasMaxLength(50)
                    .HasColumnName("defMin");

                entity.Property(e => e.DefYm)
                    .HasMaxLength(50)
                    .HasColumnName("defYM");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1).HasMaxLength(50);

                entity.Property(e => e.MiunId).HasColumnName("MiunID");

                entity.Property(e => e.NKupa).HasColumnName("nKupa");

                entity.Property(e => e.NOrder).HasColumnName("nOrder");
            });

            modelBuilder.Entity<TblBmdetail>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblBMDetails_PK")
                    .IsClustered(false);

                entity.ToTable("tblBMDetails");

                entity.HasIndex(e => e.Bmid, "BdikaID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Bmid)
                    .HasColumnName("BMID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לטבלת בדיקות");

                entity.Property(e => e.Caption1)
                    .HasMaxLength(50)
                    .HasComment("כיתוב");

                entity.Property(e => e.Class1)
                    .HasMaxLength(50)
                    .HasComment("מזהה שורה");

                entity.Property(e => e.Max1).HasDefaultValueSql("(0)");

                entity.Property(e => e.Min1).HasDefaultValueSql("(0)");

                entity.Property(e => e.SYm)
                    .HasMaxLength(50)
                    .HasColumnName("sYM")
                    .HasComment("יחידת מידה");
            });

            modelBuilder.Entity<TblBminvite>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblBMInvite");

                entity.Property(e => e.Abroad).HasColumnName("abroad");

                entity.Property(e => e.Animals).HasMaxLength(500);

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.BConfirm)
                    .HasColumnName("bConfirm")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Bmid)
                    .HasMaxLength(30)
                    .HasColumnName("BMID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Diagnosis).HasMaxLength(300);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KabalaId).HasDefaultValueSql("((0))");

                entity.Property(e => e.KodDescPlace).HasMaxLength(300);

                entity.Property(e => e.KodPlace).HasMaxLength(300);

                entity.Property(e => e.LastDateSee).HasColumnType("datetime");

                entity.Property(e => e.Memo1).HasMaxLength(100);

                entity.Property(e => e.MiunCap).HasMaxLength(2000);

                entity.Property(e => e.NStatus)
                    .HasColumnName("nStatus")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TStampConfirm)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampConfirm");

                entity.Property(e => e.Urgent).HasDefaultValueSql("((0))");

                entity.Property(e => e.UserConfirm).HasMaxLength(80);

                entity.Property(e => e.UserCreate).HasMaxLength(80);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");

                entity.Property(e => e.UserIdconfirm).HasColumnName("UserIDConfirm");
            });

            modelBuilder.Entity<TblBmtemplete>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblBMTemplete_PK")
                    .IsClustered(false);

                entity.ToTable("tblBMTemplete");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ListId)
                    .HasColumnType("ntext")
                    .HasColumnName("ListID");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Name1).HasMaxLength(255);

                entity.Property(e => e.OrdId).HasColumnName("ordId");
            });

            modelBuilder.Entity<TblCharge>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblCharges_PK")
                    .IsClustered(false);

                entity.ToTable("tblCharges");

                entity.HasIndex(e => e.ParitId, "ParitID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Active)
                    .HasDefaultValueSql("((1))")
                    .HasComment("האם החיוב פעיל או ארכיון (לאחר יצירת מסמך החיוב מועבר לארכיון)");

                entity.Property(e => e.BCharge)
                    .HasColumnName("bCharge")
                    .HasDefaultValueSql("((1))")
                    .HasComment("האם זהו חיוב או זיכוי?");

                entity.Property(e => e.BMelayKodDrug)
                    .HasColumnName("bMelayKodDrug")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ChargeDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                entity.Property(e => e.ChargeKod)
                    .HasMaxLength(30)
                    .HasComment("קוד הפריט/השרות");

                entity.Property(e => e.ChargeKod2).HasMaxLength(50);

                entity.Property(e => e.ChargeKod2Old).HasColumnName("chargeKod2Old");

                entity.Property(e => e.ChargeKodOld).HasColumnName("chargeKodOld");

                entity.Property(e => e.ChargeMiun).HasDefaultValueSql("((0))");

                entity.Property(e => e.ChargeMonth).HasColumnType("datetime");

                entity.Property(e => e.ChargeName)
                    .HasMaxLength(100)
                    .HasComment("שם החיוב (עפ\"ז נקבעים שאר הערכים אוטומטית)");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("מזהה ללקוח/דייר");

                entity.Property(e => e.CoinId)
                    .HasColumnName("CoinID")
                    .HasDefaultValueSql("((1))")
                    .HasComment("המטבע");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.HatsmadaId)
                    .HasColumnName("HatsmadaID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("אופן ההצמדה");

                entity.Property(e => e.HeshId).HasColumnName("HeshID");

                entity.Property(e => e.KindId)
                    .HasColumnName("KindID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("סוג החיוב (שכ\"ט חייב מע\"מ, הוצאות חייבות מע\"מ,הוצאות פטורות, דיור וכו' וכדו')");

                entity.Property(e => e.LinkedDoc)
                    .HasMaxLength(50)
                    .HasComment("מסמך מקושר לחיוב");

                entity.Property(e => e.Maham)
                    .HasDefaultValueSql("((1))")
                    .HasComment("האם להוסיף מע\"מ ?");

                entity.Property(e => e.MelayKod).HasMaxLength(50);

                entity.Property(e => e.MelayKodOld).HasColumnName("melayKodOld");

                entity.Property(e => e.MonimNum).HasMaxLength(8);

                entity.Property(e => e.MonimTime).HasMaxLength(8);

                entity.Property(e => e.NotInHesh)
                    .HasDefaultValueSql("((0))")
                    .HasComment("אין לכלול חיוב/זיכוי זה בחשבונית");

                entity.Property(e => e.ParitId)
                    .HasColumnName("ParitID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("מזהה לחיוב מטבלת tblPritim");

                entity.Property(e => e.PayDetails)
                    .HasMaxLength(100)
                    .HasComment("PayMethod;CheckID;Snif;Bank;Account;CreditKind;CreditOwner;CreditLastDate");

                entity.Property(e => e.Quantity)
                    .HasDefaultValueSql("((0))")
                    .HasComment("כמות ליחידה הנ\"ל");

                entity.Property(e => e.Rate)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))")
                    .HasComment("שער המטבע");

                entity.Property(e => e.RelateClientId).HasColumnName("RelateClientID");

                entity.Property(e => e.SponserId)
                    .HasColumnName("SponserID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalSum)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))")
                    .HasComment("סה\"כ לחיוב");

                entity.Property(e => e.Unit)
                    .HasMaxLength(30)
                    .HasComment("יחידת מניה(שעה,חוזה,עמוד,נסיעה,הופעה)");

                entity.Property(e => e.UnitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblChargeKodByTofes17>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblChargeKodByTofes17");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kod1)
                    .IsRequired()
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<TblChargeShehium>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblChargeShehia_PK")
                    .IsClustered(false);

                entity.ToTable("tblChargeShehia");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChargeCoin).HasMaxLength(10);

                entity.Property(e => e.ChargeKod).HasMaxLength(50);

                entity.Property(e => e.ChargeLastMadad).HasColumnType("money");

                entity.Property(e => e.ChargeMadadBasis).HasColumnType("money");

                entity.Property(e => e.ChargeMiun)
                    .HasDefaultValueSql("(0)")
                    .HasComment("קוד מיון לחיוב");

                entity.Property(e => e.ChargeText).HasMaxLength(255);

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.Date2)
                    .HasColumnType("datetime")
                    .HasColumnName("date2");

                entity.Property(e => e.LastCharge)
                    .HasColumnType("datetime")
                    .HasComment("תאריך חיוב אחרון");

                entity.Property(e => e.LastChargeMonth)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.LastUpdate)
                    .HasColumnType("datetime")
                    .HasComment("תאריך עדכון אחרון");

                entity.Property(e => e.Memo1)
                    .HasMaxLength(500)
                    .HasColumnName("memo1")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Price1).HasDefaultValueSql("(0)");

                entity.Property(e => e.RoomName).HasMaxLength(50);
            });

            modelBuilder.Entity<TblChargesReport>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblChargesReport_PK")
                    .IsClustered(false);

                entity.ToTable("tblChargesReport");

                entity.HasIndex(e => e.LocationId, "LocationID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Calculate)
                    .HasDefaultValueSql("(0)")
                    .HasComment("אופן חישוב: יומי=0, חודשי=1");

                entity.Property(e => e.ChargeMonth).HasMaxLength(10);

                entity.Property(e => e.DateCharge)
                    .HasColumnType("datetime")
                    .HasComment("תאריך חיוב הלקוחות בפועל");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.DateUpdate).HasColumnType("datetime");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם הטופס נעול?");

                entity.Property(e => e.ParitId)
                    .HasColumnName("ParitID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ParitName).HasMaxLength(20);

                entity.Property(e => e.ParitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UserCreate).HasMaxLength(25);

                entity.Property(e => e.UserUpdate).HasMaxLength(25);
            });

            modelBuilder.Entity<TblClientAccident>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientAccident");

                entity.Property(e => e.Bakara).HasMaxLength(240);

                entity.Property(e => e.BakaraDate).HasColumnType("datetime");

                entity.Property(e => e.BakaraUserId).HasColumnName("BakaraUserID");

                entity.Property(e => e.CheckDetails).HasMaxLength(240);

                entity.Property(e => e.DateEvent).HasColumnType("datetime");

                entity.Property(e => e.Details)
                    .HasMaxLength(240)
                    .HasColumnName("details");

                entity.Property(e => e.DocCheck).HasMaxLength(240);

                entity.Property(e => e.DocCheckDate).HasColumnType("datetime");

                entity.Property(e => e.DocCheckTime).HasMaxLength(20);

                entity.Property(e => e.DocTime).HasMaxLength(20);

                entity.Property(e => e.DoctorId).HasColumnName("DoctorID");

                entity.Property(e => e.EventKind).HasMaxLength(100);

                entity.Property(e => e.EventReason).HasMaxLength(250);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MainNurseId).HasColumnName("MainNurseID");

                entity.Property(e => e.ManagerDate).HasColumnType("datetime");

                entity.Property(e => e.ManagerNote).HasMaxLength(240);

                entity.Property(e => e.ManagerUserId).HasColumnName("ManagerUserID");

                entity.Property(e => e.ReporterId).HasColumnName("ReporterID");

                entity.Property(e => e.TimeEvent)
                    .HasMaxLength(20)
                    .HasColumnName("timeEvent");

                entity.Property(e => e.Witness)
                    .HasMaxLength(50)
                    .HasColumnName("witness");

                entity.Property(e => e.WitnessDayar).HasColumnName("witnessDayar");

                entity.Property(e => e.WitnessWorker)
                    .HasMaxLength(50)
                    .HasColumnName("witnessWorker");
            });

            modelBuilder.Entity<TblClientAccount>(entity =>
            {
                entity.ToTable("tblClientAccount");

                entity.HasIndex(e => new { e.ClientId, e.Account, e.Snif, e.BankId }, "IX_Unique")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BankId).HasColumnName("BankID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.SponserId)
                    .HasMaxLength(12)
                    .HasColumnName("SponserID");
            });

            modelBuilder.Entity<TblClientAvhanot>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientAvhanot_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientAvhanot");

                entity.HasIndex(e => e.ClientId, "IX_tblClientAvhanot_ClientID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.ClientId, e.KindId, e.KabalaId, e.BDel, e.DateE }, "IX_tblClientAvhanot_ClientID_KindID_KabalaID_bDel_DateE")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.RelatedId, "RelatedID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TStamp, "idx_tblClientAvhanot_tStamp_idx_ClientID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AvhanaKod).HasMaxLength(150);

                entity.Property(e => e.BConv).HasColumnName("bConv");

                entity.Property(e => e.BConv2).HasColumnName("bConv2");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BMain)
                    .HasColumnName("bMain")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BackClientId).HasColumnName("BackClientID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateEOld)
                    .HasMaxLength(12)
                    .HasColumnName("DateE_Old");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DateSOld)
                    .HasMaxLength(10)
                    .HasColumnName("DateS_Old");

                entity.Property(e => e.DescReason).HasDefaultValueSql("('')");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.DoctorName).HasMaxLength(50);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.KindId)
                    .HasColumnName("KindID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.Place).HasMaxLength(100);

                entity.Property(e => e.Position)
                    .HasMaxLength(50)
                    .HasColumnName("position");

                entity.Property(e => e.RelatedId)
                    .HasColumnName("RelatedID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Status).HasMaxLength(50);

                entity.Property(e => e.StopReason).HasDefaultValueSql("('')");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Theme).HasMaxLength(255);

                entity.Property(e => e.Urgentcy)
                    .HasMaxLength(50)
                    .HasColumnName("urgentcy");

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblClientBdikaDetail>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientBdikaDetail_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientBdikaDetail");

                entity.HasIndex(e => e.BdikaDetailId, "BdikaDetailID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ClientBdikaId, "ClientBdikaID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasComment("מזהה לרשומה");

                entity.Property(e => e.BdikaDetailId)
                    .HasColumnName("BdikaDetailID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לטבלת המבנה של המבחן");

                entity.Property(e => e.ClientBdikaId)
                    .HasColumnName("ClientBdikaID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לטבלת המבחנים של הדייר");

                entity.Property(e => e.IsNotCorrect)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם התוצאה טובה");

                entity.Property(e => e.Value1)
                    .HasMaxLength(255)
                    .HasComment("נערך שנכנס");
            });

            modelBuilder.Entity<TblClientBlister>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientBlisters");

                entity.HasIndex(e => new { e.ClientId, e.BlisterNum, e.TStamp }, "IX_tblClientBlisters1")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.Id, e.ClientId }, "idx_tblClientBlisters_id_clientid")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BlisterDateAppear).HasColumnType("datetime");

                entity.Property(e => e.BlisterDateAppearOld).HasMaxLength(50);

                entity.Property(e => e.BlisterPlaceDetails).HasMaxLength(200);

                entity.Property(e => e.BlisterSide)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.BlisterStatusId).HasColumnName("BlisterStatusID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasColumnType("ntext");

                entity.Property(e => e.Date1).HasMaxLength(15);

                entity.Property(e => e.DateCloseBlister).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(12)
                    .HasColumnName("IDCard");

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.ParaDigPlace).HasMaxLength(50);

                entity.Property(e => e.PrevBlisterId).HasColumnName("PrevBlisterID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Time1).HasMaxLength(20);

                entity.Property(e => e.UserCreate).HasMaxLength(50);

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<TblClientBm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientBM");

                entity.HasIndex(e => e.ClientId, "idx_tblClientBM_ClientID_inc_ID_Key1_date1_Val1_bDel_Time1")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.BFree, "idx_tblClientBM_bFree_inc_f_Name1")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BCorrect)
                    .HasColumnName("bCorrect")
                    .HasDefaultValueSql("((0))")
                    .HasComment("תקין לא תקין");

                entity.Property(e => e.BCulture).HasColumnName("bCulture");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BFree).HasColumnName("bFree");

                entity.Property(e => e.BIsolation).HasColumnName("bIsolation");

                entity.Property(e => e.BNoCorrect)
                    .HasColumnName("bNoCorrect")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.DefMax).HasColumnName("defMax");

                entity.Property(e => e.DefMin).HasColumnName("defMin");

                entity.Property(e => e.DefYm)
                    .HasMaxLength(50)
                    .HasColumnName("defYM");

                entity.Property(e => e.FName1)
                    .IsRequired()
                    .HasColumnName("f_Name1")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FSubject)
                    .IsRequired()
                    .HasColumnName("f_Subject")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FileSrc)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FileUrl)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InviteDate)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Key1).HasMaxLength(20);

                entity.Property(e => e.Material)
                    .IsRequired()
                    .HasColumnName("MATERIAL")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Memo1).HasMaxLength(500);

                entity.Property(e => e.ReqId)
                    .HasMaxLength(20)
                    .HasColumnName("ReqID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Test)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Time1)
                    .HasMaxLength(10)
                    .HasColumnName("time1");

                entity.Property(e => e.TransId).HasColumnName("TransID");

                entity.Property(e => e.UId)
                    .HasMaxLength(10)
                    .HasColumnName("uID");

                entity.Property(e => e.UniqKey).HasMaxLength(200);

                entity.Property(e => e.UserCreate)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UserCreateid).HasColumnName("userCreateid");

                entity.Property(e => e.Val1)
                    .HasMaxLength(100)
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblClientBm2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientBM2");

                entity.HasIndex(e => e.BCulture, "missing_index_1625_1624_tblClientBM2")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BCorrect)
                    .HasColumnName("bCorrect")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BCulture).HasColumnName("bCulture");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BIsolation).HasColumnName("bIsolation");

                entity.Property(e => e.BNoCorrect)
                    .HasColumnName("bNoCorrect")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Bmid).HasColumnName("BMID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.DefMax).HasColumnName("defMax");

                entity.Property(e => e.DefMin).HasColumnName("defMin");

                entity.Property(e => e.DefYm)
                    .HasMaxLength(50)
                    .HasColumnName("defYM");

                entity.Property(e => e.Defsubject)
                    .IsRequired()
                    .HasColumnName("defsubject")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FileSrc)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FileUrl)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Idcard2).HasColumnName("idcard2");

                entity.Property(e => e.InviteDate)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Key1).HasMaxLength(20);

                entity.Property(e => e.KeyKupa).HasMaxLength(100);

                entity.Property(e => e.LastRead).HasColumnType("datetime");

                entity.Property(e => e.Material)
                    .IsRequired()
                    .HasColumnName("MATERIAL")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Memo1).HasMaxLength(500);

                entity.Property(e => e.NKupa).HasColumnName("nKupa");

                entity.Property(e => e.Name1)
                    .HasMaxLength(120)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Nameview2)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ReqId)
                    .HasMaxLength(20)
                    .HasColumnName("ReqID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Test)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Time1)
                    .HasMaxLength(10)
                    .HasColumnName("time1");

                entity.Property(e => e.TransId).HasColumnName("TransID");

                entity.Property(e => e.UniqKey).HasMaxLength(200);

                entity.Property(e => e.UserCreate)
                    .HasMaxLength(30)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UserCreateid).HasColumnName("userCreateid");

                entity.Property(e => e.Val1)
                    .HasMaxLength(100)
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblClientBmWebSetting>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientBmWebSetting");

                entity.Property(e => e.Archive).HasDefaultValueSql("((0))");

                entity.Property(e => e.BmwebCard)
                    .IsRequired()
                    .HasColumnName("BMWebCard")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BmwebKupa)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebKupa");

                entity.Property(e => e.BmwebPassword)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebPassword");

                entity.Property(e => e.BmwebUserName)
                    .HasMaxLength(30)
                    .HasColumnName("BMWebUserName");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LastDate)
                    .HasMaxLength(12)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.LastUpdatePass).HasMaxLength(10);

                entity.Property(e => e.SModePass)
                    .HasMaxLength(3)
                    .HasColumnName("sModePass")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblClientBmtransDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientBMTransDetails");

                entity.HasIndex(e => new { e.FormId, e.StatusId }, "IX_tblClientBMTransDetails_FormID_StatusID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.StatusId, "IX_tblClientBMTransDetails_StatusID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BDone).HasColumnName("bDone");

                entity.Property(e => e.BmbarCode)
                    .HasMaxLength(30)
                    .HasColumnName("BMBarCode");

                entity.Property(e => e.Bmid)
                    .HasMaxLength(40)
                    .HasColumnName("BMID");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1).HasMaxLength(15);

                entity.Property(e => e.Name1).HasMaxLength(100);

                entity.Property(e => e.StatusId).HasColumnName("StatusID");
            });

            modelBuilder.Entity<TblClientCall>(entity =>
            {
                entity.ToTable("tblClientCalls");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BCharged).HasColumnName("bCharged");

                entity.Property(e => e.BFlag).HasColumnName("bFlag");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateBill).HasColumnType("datetime");

                entity.Property(e => e.DateCall).HasColumnType("datetime");

                entity.Property(e => e.Extension)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.KindCall)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.KindCallId).HasColumnName("KindCallID");

                entity.Property(e => e.NumCall)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NumCalled)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RingTimeCall)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RoomId)
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SapakCall)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TimeCall)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblClientClothe>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientClothes");

                entity.Property(e => e.Action).HasMaxLength(50);

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Size).HasMaxLength(50);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.UserCreate).HasMaxLength(50);
            });

            modelBuilder.Entity<TblClientContract>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientContracts");

                entity.Property(e => e.AcEndHatsmada)
                    .HasColumnType("datetime")
                    .HasColumnName("acEndHatsmada");

                entity.Property(e => e.AcEndHilut)
                    .HasColumnType("datetime")
                    .HasColumnName("acEndHilut");

                entity.Property(e => e.AcPayDate)
                    .HasColumnType("datetime")
                    .HasColumnName("acPayDate");

                entity.Property(e => e.ArevAddress).HasMaxLength(100);

                entity.Property(e => e.ArevIdcard)
                    .HasMaxLength(15)
                    .HasColumnName("ArevIDCard");

                entity.Property(e => e.ArevName).HasMaxLength(100);

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.BFreeParam).HasColumnName("bFreeParam");

                entity.Property(e => e.Caption).HasMaxLength(50);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Coin1).HasMaxLength(10);

                entity.Property(e => e.CoinId)
                    .HasColumnName("CoinID")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoinRate).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateAsk).HasColumnType("datetime");

                entity.Property(e => e.DateEnd).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DateSign).HasColumnType("datetime");

                entity.Property(e => e.HatsmadaId)
                    .HasColumnName("HatsmadaID")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HilutMax).HasMaxLength(15);

                entity.Property(e => e.HilutMon).HasMaxLength(15);

                entity.Property(e => e.HtmlSource).HasColumnType("ntext");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1).HasMaxLength(50);

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.Maamad).HasMaxLength(15);

                entity.Property(e => e.MadadBasis).HasMaxLength(40);

                entity.Property(e => e.MadadMonth).HasMaxLength(40);

                entity.Property(e => e.MadadPoints).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MaslulId).HasColumnName("MaslulID");

                entity.Property(e => e.Memo1).HasColumnType("ntext");

                entity.Property(e => e.Price1).HasColumnType("money");

                entity.Property(e => e.PriceBack).HasColumnType("money");

                entity.Property(e => e.PriceCurrent).HasColumnType("money");

                entity.Property(e => e.PriceEnter).HasColumnType("money");

                entity.Property(e => e.PriceShehia).HasColumnType("money");

                entity.Property(e => e.RoomName).HasMaxLength(40);

                entity.Property(e => e.SumReturn).HasColumnType("money");

                entity.Property(e => e.SumReturnDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TblClientCurrentStatus>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientCurrentStatus_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientCurrentStatus");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך רישום הרשומה");

                entity.Property(e => e.Item).HasMaxLength(100);

                entity.Property(e => e.RecStatus)
                    .HasDefaultValueSql("(0)")
                    .HasComment("0-ניתן לעריכה/ מחיקה, 1- רשומה סגורה, 2- רשומה שנמחקה");

                entity.Property(e => e.ThemeId)
                    .HasColumnName("ThemeID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("0-אבחנות , 1-תרופות , 2-רגישות , 6-הרגלים (ע\"פ דף מידע רפואי)");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("רושם הרשומה");
            });

            modelBuilder.Entity<TblClientCurse>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientCurses_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientCurses");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DateEnd).HasColumnType("datetime");

                entity.Property(e => e.DateStart).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.ThemeId)
                    .HasColumnName("ThemeID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מקושר לטבלה tblPritim");
            });

            modelBuilder.Entity<TblClientDietAfterIshpuz>(entity =>
            {
                entity.ToTable("tblClientDietAfterIshpuz");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BdikotAlbomin).HasMaxLength(50);

                entity.Property(e => e.BdikotHelbon).HasMaxLength(50);

                entity.Property(e => e.BdikotHemoglobin).HasMaxLength(50);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.EatingFormat).HasMaxLength(50);

                entity.Property(e => e.HelbonSum).HasMaxLength(50);

                entity.Property(e => e.IshpuzReason).HasMaxLength(500);

                entity.Property(e => e.KaloriesSum).HasMaxLength(50);

                entity.Property(e => e.MirkamMazon).HasMaxLength(50);

                entity.Property(e => e.Target).HasMaxLength(500);

                entity.Property(e => e.Tipul).HasMaxLength(500);

                entity.Property(e => e.WeightNormal).HasMaxLength(50);
            });

            modelBuilder.Entity<TblClientDiscount>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientDiscount");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kod1).HasMaxLength(50);

                entity.Property(e => e.Memo1)
                    .HasMaxLength(150)
                    .HasColumnName("memo1");

                entity.Property(e => e.NType).HasColumnName("nType");
            });

            modelBuilder.Entity<TblClientEnterPay>(entity =>
            {
                entity.HasKey(e => e.ClientId)
                    .HasName("aaaaatblClientEnterPay_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientEnterPay");

                entity.HasIndex(e => e.ClientId, "ClientID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.ClientId)
                    .ValueGeneratedNever()
                    .HasColumnName("ClientID");

                entity.Property(e => e.BPikadon)
                    .HasColumnName("bPikadon")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם הופקד פיקדון");

                entity.Property(e => e.ContractDate)
                    .HasColumnType("datetime")
                    .HasComment("תאריך חתימה על החוזה");

                entity.Property(e => e.DepartmentDate)
                    .HasColumnType("datetime")
                    .HasComment("תאריך מסירת הדירה");

                entity.Property(e => e.DiscountPer).HasDefaultValueSql("(0)");

                entity.Property(e => e.EnterStatusId)
                    .HasColumnName("EnterStatusID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("Linked to table tblDefEnterStatus");

                entity.Property(e => e.EnterSum).HasDefaultValueSql("(0)");

                entity.Property(e => e.HatsmadaId)
                    .HasColumnName("HatsmadaID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מקושר לטבלה tblDefHatsmada");

                entity.Property(e => e.MehironPrice)
                    .HasDefaultValueSql("(0)")
                    .HasComment("עלות לפי מחירון");

                entity.Property(e => e.PayGroupId)
                    .HasColumnName("PayGroupID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("LinkedToTable tblDefPayGroup");

                entity.Property(e => e.PikadonDate).HasColumnType("datetime");

                entity.Property(e => e.PikadonSum).HasDefaultValueSql("(0)");

                entity.Property(e => e.ShehikaMonths)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מס' חודשי שחיקה");

                entity.Property(e => e.ShehikaPer).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblClientExit>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientExits");

                entity.HasIndex(e => e.ClientId, "idx_tblClientExits_ClientID_inc_Date1_Time1_Date2_Time2_bDel")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ClientId, "idx_tblClientExits_ClientID_inc_Id_Date1_Time1_Date2_bDel")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "idx_tblClientExits_id")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasMaxLength(300);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.ExitReasonId).HasColumnName("ExitReasonID");

                entity.Property(e => e.GroupId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("GroupID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.HospitalKod).HasMaxLength(10);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.LivuyName).HasMaxLength(50);

                entity.Property(e => e.LivuyPay).HasColumnType("money");

                entity.Property(e => e.Target).HasMaxLength(100);

                entity.Property(e => e.Time1).HasMaxLength(10);

                entity.Property(e => e.Time2).HasMaxLength(10);

                entity.Property(e => e.TimeAction).HasMaxLength(10);

                entity.Property(e => e.TransferKindId).HasColumnName("TransferKindID");

                entity.Property(e => e.TransferPay).HasColumnType("money");

                entity.Property(e => e.UserName).HasMaxLength(25);
            });

            modelBuilder.Entity<TblClientFeedTubeWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblClientFeedTube_Web");

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblClientFollowNext>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientFollowNext");

                entity.HasIndex(e => new { e.Clientid, e.FollowId }, "Dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.DateNext).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(300);
            });

            modelBuilder.Entity<TblClientFollowUpMedical>(entity =>
            {
                entity.ToTable("tblClientFollowUpMedical");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BEdit)
                    .HasColumnName("bEdit")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.FormId)
                    .HasColumnName("FormID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.NConv)
                    .HasColumnName("nConv")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SubjectId)
                    .HasColumnName("SubjectID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");

                entity.Property(e => e.Val).HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblClientFollowup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientFollowup");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.FollowKey)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.MishmeretId).HasColumnName("MishmeretID");

                entity.Property(e => e.Time1).HasMaxLength(8);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblClientFollowupKey>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientFollowupKeys");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.FollowId).HasColumnName("FollowID");

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.Val1).HasMaxLength(500);
            });

            modelBuilder.Entity<TblClientFood>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientFood");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.EatId)
                    .HasColumnName("EatID")
                    .HasComment("0=הכל \r\n1=חצי מנה\r\n2=כמה כפות\r\n3=לא אכל\r\n");

                entity.Property(e => e.FoodId).HasColumnName("FoodID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LunchId).HasColumnName("LunchID");
            });

            modelBuilder.Entity<TblClientFoodAll>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientFoodAll");

                entity.HasIndex(e => new { e.Clientid, e.Date1, e.Lunch }, "IX_tblFoodAll")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.FoodComment).HasColumnName("foodComment");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Lunch).HasMaxLength(50);
            });

            modelBuilder.Entity<TblClientFoodMenu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientFoodMenu");

                entity.Property(e => e.FoodInclude).HasMaxLength(500);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.MenuName).HasMaxLength(100);
            });

            modelBuilder.Entity<TblClientFormDetailA10>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .IsClustered(false);

                entity.ToTable("tblClientFormDetailA10");

                entity.HasIndex(e => new { e.ClientId, e.TypeForm, e.Date1 }, "CIX_test")
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Date1, "IX_tblClientFormDetailA10")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "IX_tblClientFormDetailA10_1")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.ClientId, e.BDel, e.DateTime1 }, "idx_ClientID_bDel_DateTime1_inc_TypeForm")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.SCurrentDate, "sCurrentDate")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AvhanaDescription).HasMaxLength(300);

                entity.Property(e => e.AvhanaKod).HasMaxLength(25);

                entity.Property(e => e.BCardex)
                    .HasColumnName("bCardex")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BEdit)
                    .HasColumnName("bEdit")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BNoAutoFollow).HasColumnName("bNoAutoFollow");

                entity.Property(e => e.BSadir).HasColumnName("bSadir");

                entity.Property(e => e.BT)
                    .HasColumnName("bT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BackClientId).HasColumnName("BackClientID");

                entity.Property(e => e.Bdend).HasColumnName("bdend");

                entity.Property(e => e.Bexp).HasColumnName("bexp");

                entity.Property(e => e.Bsend).HasColumnName("bsend");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לדייר");

                entity.Property(e => e.Comments).HasDefaultValueSql("('')");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך");

                entity.Property(e => e.DateTime1).HasColumnType("smalldatetime");

                entity.Property(e => e.DoctorName)
                    .HasMaxLength(50)
                    .HasComment("שם הרופא");

                entity.Property(e => e.FamilyId)
                    .HasMaxLength(500)
                    .HasColumnName("familyId");

                entity.Property(e => e.FiverUnder).HasMaxLength(10);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.Memo1).HasMaxLength(1000);

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.SCurrentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sCurrentDate")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))");

                entity.Property(e => e.SatoUnder).HasMaxLength(10);

                entity.Property(e => e.Source).HasDefaultValueSql("('')");

                entity.Property(e => e.Subject1)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.SubjectId)
                    .HasColumnName("SubjectID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מסגרת דיווח");

                entity.Property(e => e.SubjectId2).HasColumnName("SubjectID2");

                entity.Property(e => e.SubjectId3).HasColumnName("subjectId3");

                entity.Property(e => e.SubjectId4).HasColumnName("subjectID4");

                entity.Property(e => e.TStemp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStemp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TempSubject).HasMaxLength(100);

                entity.Property(e => e.Time1).HasMaxLength(12);

                entity.Property(e => e.TypeForm)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לסוג הטופס");

                entity.Property(e => e.TypeForm2)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לסוג הטופס");

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.Val1).HasColumnType("ntext");

                entity.Property(e => e.Val10).HasMaxLength(250);

                entity.Property(e => e.Val11).HasMaxLength(20);

                entity.Property(e => e.Val12)
                    .HasMaxLength(500)
                    .HasColumnName("val12");

                entity.Property(e => e.Val3).HasColumnType("ntext");

                entity.Property(e => e.Val4).HasColumnType("ntext");

                entity.Property(e => e.Val5).HasColumnType("ntext");

                entity.Property(e => e.Val6).HasColumnType("ntext");

                entity.Property(e => e.Val7).HasColumnType("ntext");

                entity.Property(e => e.Val8).HasColumnType("ntext");

                entity.Property(e => e.Val9).HasColumnType("ntext");
            });

            modelBuilder.Entity<TblClientFormDetailA10newtest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientFormDetailA10newtest");

                entity.Property(e => e.AvhanaDescription).HasMaxLength(300);

                entity.Property(e => e.AvhanaKod).HasMaxLength(25);

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BEdit).HasColumnName("bEdit");

                entity.Property(e => e.BSadir).HasColumnName("bSadir");

                entity.Property(e => e.BT).HasColumnName("bT");

                entity.Property(e => e.BackClientId).HasColumnName("BackClientID");

                entity.Property(e => e.Bexp).HasColumnName("bexp");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateTime1).HasColumnType("smalldatetime");

                entity.Property(e => e.DoctorName).HasMaxLength(50);

                entity.Property(e => e.FamilyId)
                    .HasMaxLength(500)
                    .HasColumnName("familyId");

                entity.Property(e => e.FiverUnder).HasMaxLength(10);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Memo1).HasMaxLength(1000);

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.SCurrentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sCurrentDate");

                entity.Property(e => e.SatoUnder).HasMaxLength(10);

                entity.Property(e => e.Subject1)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.SubjectId2).HasColumnName("SubjectID2");

                entity.Property(e => e.SubjectId3).HasColumnName("subjectId3");

                entity.Property(e => e.SubjectId4).HasColumnName("subjectID4");

                entity.Property(e => e.TempSubject).HasMaxLength(100);

                entity.Property(e => e.Time1).HasMaxLength(12);

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.Val1).HasColumnType("ntext");

                entity.Property(e => e.Val10).HasMaxLength(250);

                entity.Property(e => e.Val11).HasMaxLength(20);

                entity.Property(e => e.Val12)
                    .HasMaxLength(500)
                    .HasColumnName("val12");

                entity.Property(e => e.Val3).HasColumnType("ntext");

                entity.Property(e => e.Val4).HasColumnType("ntext");

                entity.Property(e => e.Val5).HasColumnType("ntext");

                entity.Property(e => e.Val6).HasColumnType("ntext");

                entity.Property(e => e.Val7).HasColumnType("ntext");

                entity.Property(e => e.Val8).HasColumnType("ntext");

                entity.Property(e => e.Val9).HasColumnType("ntext");
            });

            modelBuilder.Entity<TblClientFormDetailA3>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .IsClustered(false);

                entity.ToTable("tblClientFormDetailA3");

                entity.HasIndex(e => new { e.ClientFormId, e.ClsName }, "IX_tblClientFormDetailA3")
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ClsName, "IX_tblClientFormDetailA3_ClsName")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientFormId)
                    .HasColumnName("ClientFormID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לטופס שנוצר לדייר");

                entity.Property(e => e.ClsName)
                    .HasMaxLength(100)
                    .HasComment("מזהה  לשורה");

                entity.Property(e => e.FieldA)
                    .HasDefaultValueSql("(0)")
                    .HasComment("תקין לא תקין");

                entity.Property(e => e.FieldB)
                    .HasDefaultValueSql("('')")
                    .HasComment("קומובו או גרופ משורשרים");

                entity.Property(e => e.FieldC)
                    .HasDefaultValueSql("('')")
                    .HasComment("טקסט חופשי");

                entity.Property(e => e.Memo1).HasDefaultValueSql("('')");

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.HasOne(d => d.ClientForm)
                    .WithMany(p => p.TblClientFormDetailA3s)
                    .HasForeignKey(d => d.ClientFormId)
                    .HasConstraintName("FK_tblClientFormDetailA3_tblClientFormDetailA3");
            });

            modelBuilder.Entity<TblClientFormDetailA3deleted>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientFormDetailA3DELETED");

                entity.Property(e => e.ClientFormId)
                    .HasColumnName("ClientFormID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FieldA).HasDefaultValueSql("((0))");

                entity.Property(e => e.FieldB).HasColumnType("ntext");

                entity.Property(e => e.FieldC).HasColumnType("ntext");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Memo1).HasColumnType("text");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblClientGeneralKnowledge>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientGeneralKnowledge_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientGeneralKnowledge");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.ThemeId)
                    .HasColumnName("ThemeID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מקושר לטבלה tblDefHobby");
            });

            modelBuilder.Entity<TblClientGroupAction>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientGroupAction");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientIdlist)
                    .HasMaxLength(300)
                    .HasColumnName("ClientIDList");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kind1).HasMaxLength(50);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.MedicalGroupId).HasColumnName("MedicalGroupID");

                entity.Property(e => e.Responsible).HasMaxLength(50);

                entity.Property(e => e.Summery).HasMaxLength(500);

                entity.Property(e => e.Target1).HasMaxLength(100);

                entity.Property(e => e.Theme1).HasMaxLength(100);

                entity.Property(e => e.Time1)
                    .HasMaxLength(5)
                    .IsFixedLength(true);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblClientGuardian>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientGuardians_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientGuardians");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CityId)
                    .HasColumnName("CityID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DocName)
                    .HasMaxLength(500)
                    .HasColumnName("docName");

                entity.Property(e => e.DocNameView)
                    .HasMaxLength(500)
                    .HasColumnName("docNameView");

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Field).HasMaxLength(50);

                entity.Property(e => e.Fname)
                    .HasMaxLength(50)
                    .HasColumnName("FName");

                entity.Property(e => e.GetSms).HasColumnName("GetSMS");

                entity.Property(e => e.Info).HasMaxLength(255);

                entity.Property(e => e.Lname)
                    .HasMaxLength(50)
                    .HasColumnName("LName");

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Phone3).HasMaxLength(20);

                entity.Property(e => e.Street).HasMaxLength(40);

                entity.Property(e => e.Zip).HasMaxLength(8);

                entity.HasOne(d => d.Client)
                    .WithMany(p => p.TblClientGuardians)
                    .HasForeignKey(d => d.ClientId)
                    .HasConstraintName("tblClientGuardians_FK00");
            });

            modelBuilder.Entity<TblClientHabitude>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientHabitude_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientHabitude");

                entity.HasIndex(e => new { e.ClientId, e.Theme, e.KabalaId, e.BDel }, "ClusteredIndex-ClientHabitude")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BConv).HasColumnName("bConv");

                entity.Property(e => e.BConv2).HasColumnName("bConv2");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Theme).HasMaxLength(255);

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblClientHervonot>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientHervonot");

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DatePayFamily).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LastMadad).HasColumnType("money");

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.MadadBasis).HasColumnType("money");

                entity.Property(e => e.Memo1).HasMaxLength(100);

                entity.Property(e => e.Price1).HasColumnType("money");

                entity.Property(e => e.PriceBasis).HasColumnType("money");

                entity.Property(e => e.SumReturn).HasColumnType("money");

                entity.Property(e => e.SumReturnFamily).HasColumnType("money");

                entity.Property(e => e.SumReturnHome).HasColumnType("money");
            });

            modelBuilder.Entity<TblClientHeshName>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientHeshNames");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.HeshName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.HeshNum)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblClientHilutim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientHilutim");

                entity.Property(e => e.ApprovalMemo)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BN).HasColumnName("bN");

                entity.Property(e => e.BNn).HasColumnName("bNN");

                entity.Property(e => e.BNoAutoApproval).HasColumnName("bNoAutoApproval");

                entity.Property(e => e.BNoveToOther).HasColumnName("bNoveToOther");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Date3).HasColumnType("datetime");

                entity.Property(e => e.DateRealHilut).HasColumnType("datetime");

                entity.Property(e => e.DateStop).HasColumnType("datetime");

                entity.Property(e => e.DolarBasic).HasColumnType("money");

                entity.Property(e => e.HilutMoveDolar).HasColumnType("money");

                entity.Property(e => e.HilutMoveId).HasColumnName("HilutMoveID");

                entity.Property(e => e.HilutRatio).HasColumnType("money");

                entity.Property(e => e.HilutSum).HasColumnType("money");

                entity.Property(e => e.HilutYear).HasColumnType("money");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kind1).HasDefaultValueSql("((0))");

                entity.Property(e => e.MadadBasic)
                    .HasColumnType("money")
                    .HasColumnName("madadBasic");

                entity.Property(e => e.NId).HasColumnName("nID");

                entity.Property(e => e.OrdId).HasColumnName("OrdID");

                entity.Property(e => e.RoomName)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblClientHilutimDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientHilutimDetails");

                entity.Property(e => e.ActionType).HasDefaultValueSql("((0))");

                entity.Property(e => e.BMakeReCalcS)
                    .IsRequired()
                    .HasColumnName("bMakeReCalcS")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BNnn).HasColumnName("bNNN");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Date3).HasColumnType("datetime");

                entity.Property(e => e.Dolar1).HasColumnType("money");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Madad)
                    .HasColumnType("money")
                    .HasColumnName("madad");

                entity.Property(e => e.MamahmRatio).HasColumnType("money");

                entity.Property(e => e.MaslulId).HasColumnName("maslulID");

                entity.Property(e => e.MimsakId).HasColumnName("MimsakID");

                entity.Property(e => e.NDays)
                    .HasColumnType("money")
                    .HasColumnName("nDays");

                entity.Property(e => e.Sum1).HasColumnType("money");

                entity.Property(e => e.SumAll).HasColumnType("money");

                entity.Property(e => e.SumMaham).HasColumnType("money");

                entity.Property(e => e.SumWithMadad).HasColumnType("money");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblClientHobby>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientHobbies_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientHobbies");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.ThemeId)
                    .HasColumnName("ThemeID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מקושר לטבלה tblDefHobby");
            });

            modelBuilder.Entity<TblClientHospStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientHospStatus");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Status).HasMaxLength(200);

                entity.Property(e => e.StatusId).HasColumnName("StatusID");

                entity.Property(e => e.UserCreate)
                    .HasMaxLength(500)
                    .HasColumnName("userCreate");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblClientHtmlFormsWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblClientHtmlForms_Web");

                entity.Property(e => e.BAutoLocked).HasColumnName("bAutoLocked");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BLocked).HasColumnName("bLocked");

                entity.Property(e => e.BNeedRefresh).HasColumnName("bNeedRefresh");

                entity.Property(e => e.BdoSave).HasColumnName("bdoSave");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.FormKey)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Header1)
                    .IsRequired()
                    .HasColumnType("xml")
                    .HasColumnName("header1");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Point).HasColumnName("point");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate");

                entity.Property(e => e.TStampLocked)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampLocked");

                entity.Property(e => e.TStampUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampUpdate");
            });

            modelBuilder.Entity<TblClientHtmlLockFormsWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblClientHtmlLockForms_web");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblClientInfection>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientInfections");

                entity.Property(e => e.ArriveFrom).HasMaxLength(150);

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateBmLast).HasColumnType("datetime");

                entity.Property(e => e.DateG).HasColumnType("datetime");

                entity.Property(e => e.DateR).HasColumnType("datetime");

                entity.Property(e => e.DateTarbitFirst).HasColumnType("datetime");

                entity.Property(e => e.DateTarbitScheduled).HasColumnType("datetime");

                entity.Property(e => e.Findings)
                    .HasMaxLength(80)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FindingsId).HasColumnName("FindingsID");

                entity.Property(e => e.HodgeTest).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InfectedPlaceName).HasMaxLength(150);

                entity.Property(e => e.InfectionSource)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.InfectionSourceId).HasColumnName("InfectionSourceID");

                entity.Property(e => e.Insulation)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("insulation")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.InsulationId).HasColumnName("insulationID");

                entity.Property(e => e.IshpuzName).HasMaxLength(100);

                entity.Property(e => e.KindStandName).HasMaxLength(100);

                entity.Property(e => e.MahlakaR).HasMaxLength(150);

                entity.Property(e => e.MossadRep).HasMaxLength(30);

                entity.Property(e => e.Pcr).HasMaxLength(200);

                entity.Property(e => e.SikorName).HasMaxLength(100);

                entity.Property(e => e.StaffPres).HasMaxLength(50);

                entity.Property(e => e.StatusName).HasMaxLength(100);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.UserCreate)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblClientInfusion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientInfusion");

                entity.HasIndex(e => e.RowId, "IX_tblClientInfusion")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.GiveWay).HasMaxLength(10);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.RowId).HasColumnName("RowID");

                entity.Property(e => e.SolName).HasMaxLength(50);

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.Time1)
                    .HasMaxLength(50)
                    .HasColumnName("time1");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.HasOne(d => d.Row)
                    .WithMany()
                    .HasForeignKey(d => d.RowId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_tblClientInfusion_tblClientMedadim");
            });

            modelBuilder.Entity<TblClientIshpuzim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientIshpuzim");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.LeaveKindKod, "LeaveKindID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ClientId, "ToClientID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("קישור לדייר");

                entity.Property(e => e.DateE)
                    .HasMaxLength(10)
                    .HasComment("תאריך סיום");

                entity.Property(e => e.DateS)
                    .HasMaxLength(10)
                    .HasComment("תאריך התחלה");

                entity.Property(e => e.Doctor1)
                    .HasMaxLength(50)
                    .HasComment("רופא מטפל");

                entity.Property(e => e.Hospital)
                    .HasMaxLength(200)
                    .HasComment("בי\"ח");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LeaveKindKod)
                    .HasDefaultValueSql("(0)")
                    .HasComment("0-חזרה למוסד, שאר המספרים ע\"פ ה-ID ב-tblDefLeaveKind");

                entity.Property(e => e.Mahlaka)
                    .HasMaxLength(50)
                    .HasComment("מחלקה");

                entity.Property(e => e.Reason)
                    .HasColumnType("ntext")
                    .HasComment("סיבת אשפוז");

                entity.Property(e => e.Results)
                    .HasColumnType("ntext")
                    .HasComment("מימצאים");

                entity.Property(e => e.UserIdcreate)
                    .HasColumnName("UserIDCreate")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblClientIshpuzimKabala>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientIshpuzimKabala");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Department).HasMaxLength(70);

                entity.Property(e => e.DoctorName).HasMaxLength(25);

                entity.Property(e => e.Hospital).HasMaxLength(40);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.Reason).HasMaxLength(100);

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");

                entity.Property(e => e.Year1).HasMaxLength(20);
            });

            modelBuilder.Entity<TblClientLockedForm>(entity =>
            {
                entity.ToTable("tblClientLockedForms");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ClientFormId).HasColumnName("ClientFormID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");
            });

            modelBuilder.Entity<TblClientLockedFormsTemp>(entity =>
            {
                entity.ToTable("tblClientLockedFormsTemp");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ClientFormId).HasColumnName("ClientFormID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");
            });

            modelBuilder.Entity<TblClientManoy>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientManoy");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Kod1)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TblClientMarketingSugest>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientMarketingSugests_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientMarketingSugests");

                entity.HasIndex(e => e.DiminutionEnterReasonId, "DiminutionEnterReasonID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DiminutionStayReasonId, "DiminutionEnterReasonID1")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TifkudStatusId, "TifkudStatusID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AgafId)
                    .HasColumnName("AgafID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AgafIdV)
                    .HasColumnName("AgafID_V")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מבקר-אגף");

                entity.Property(e => e.BRoomInUse)
                    .HasColumnName("bRoomInUse")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BVisitor)
                    .HasColumnName("bVisitor")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DateAsk).HasColumnType("datetime");

                entity.Property(e => e.DateNeedEnter).HasColumnType("datetime");

                entity.Property(e => e.DateVisit1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך אורח");

                entity.Property(e => e.DateVisit2)
                    .HasColumnType("datetime")
                    .HasComment("תאריך סיום אורח");

                entity.Property(e => e.DiminutionEnterPer).HasDefaultValueSql("(0)");

                entity.Property(e => e.DiminutionEnterReasonId)
                    .HasColumnName("DiminutionEnterReasonID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DiminutionStayPer).HasDefaultValueSql("(0)");

                entity.Property(e => e.DiminutionStayReasonId)
                    .HasColumnName("DiminutionStayReasonID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DiurKindId)
                    .HasColumnName("DiurKindID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.EnterMaslul).HasDefaultValueSql("(0)");

                entity.Property(e => e.EnterPriceInWords).HasMaxLength(200);

                entity.Property(e => e.HilutMax).HasMaxLength(5);

                entity.Property(e => e.HilutMon).HasMaxLength(5);

                entity.Property(e => e.MadadMonth).HasMaxLength(7);

                entity.Property(e => e.MadadPointsInWords).HasMaxLength(200);

                entity.Property(e => e.MaslulService).HasMaxLength(20);

                entity.Property(e => e.PriceBack).HasMaxLength(50);

                entity.Property(e => e.PriceEnter).HasMaxLength(50);

                entity.Property(e => e.PriceSiudiZmani)
                    .HasMaxLength(50)
                    .HasComment("'עצמאי במחלקה סיעודית");

                entity.Property(e => e.PriceStay).HasMaxLength(50);

                entity.Property(e => e.PriceStaySiudi).HasMaxLength(50);

                entity.Property(e => e.PriceStayTashush).HasMaxLength(50);

                entity.Property(e => e.PriceTashushOut).HasMaxLength(50);

                entity.Property(e => e.RoomId)
                    .HasColumnName("RoomID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RoomIdV)
                    .HasColumnName("RoomID_V")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מבקר-חדר");

                entity.Property(e => e.SugestId)
                    .HasColumnName("SugestID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TifkudStatusId)
                    .HasColumnName("TifkudStatusID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblClientMedKey>(entity =>
            {
                entity.ToTable("tblClientMedKeys");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.FilePath)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.Key1).HasMaxLength(50);

                entity.Property(e => e.Theme).HasMaxLength(500);

                entity.Property(e => e.Time1).HasMaxLength(11);

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");

                entity.Property(e => e.UserName).HasMaxLength(50);

                entity.Property(e => e.Val1).HasMaxLength(4000);
            });

            modelBuilder.Entity<TblClientMedSign>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientMedSign_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientMedSign");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))");

                entity.Property(e => e.Description).HasMaxLength(100);

                entity.Property(e => e.ThemeId)
                    .HasColumnName("ThemeID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("MedSignID");
            });

            modelBuilder.Entity<TblClientMedadim>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .IsClustered(false);

                entity.ToTable("tblClientMedadim");

                entity.HasIndex(e => new { e.DateTime1, e.ClientId, e.BDel }, "IX_tblClientMedadim")
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.ClientId, e.DateTime1, e.BDel }, "idx_doctor1")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.ClientId, e.TStamp }, "idx_tblClientMedadim_ClientId_tStamp_inc_bDel")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DateTime1).HasColumnType("datetime");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserName).HasMaxLength(50);
            });

            modelBuilder.Entity<TblClientMedicalImg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientMedicalImg");

                entity.Property(e => e.BodyPartId).HasColumnName("BodyPartID");

                entity.Property(e => e.Comment).IsRequired();

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.ExaminationId).HasColumnName("ExaminationID");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.InfectiousDiseases).HasMaxLength(100);

                entity.Property(e => e.InfectiousDiseasesId)
                    .HasMaxLength(30)
                    .HasColumnName("InfectiousDiseasesID");

                entity.Property(e => e.Mobility).HasMaxLength(30);

                entity.Property(e => e.MobilityId).HasColumnName("MobilityID");

                entity.Property(e => e.NeedOxygen).HasMaxLength(30);

                entity.Property(e => e.RoomNum).HasMaxLength(10);

                entity.Property(e => e.StationId).HasColumnName("StationID");

                entity.Property(e => e.Time1)
                    .IsRequired()
                    .HasMaxLength(8);

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserCreate).HasMaxLength(200);
            });

            modelBuilder.Entity<TblClientMedicine>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientMedicine_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientMedicine");

                entity.HasIndex(e => e.ClientId, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Subject1, "Subject1")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.SCurrentDate, "sCurrentDate")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CapsuleName).HasMaxLength(3);

                entity.Property(e => e.CapsulesNum).HasDefaultValueSql("(1)");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))")
                    .HasComment("התחלת לקיחת התרופה");

                entity.Property(e => e.DayMinun).HasDefaultValueSql("(0)");

                entity.Property(e => e.DaysNum)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מס' ימים");

                entity.Property(e => e.Deleted).HasDefaultValueSql("(0)");

                entity.Property(e => e.NoLimit)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם לתרופה זו אין זמן סופי");

                entity.Property(e => e.SCurrentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sCurrentDate")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))");

                entity.Property(e => e.Subject1)
                    .HasMaxLength(50)
                    .HasComment("מסגרת דיווח");

                entity.Property(e => e.TakeWay)
                    .HasDefaultValueSql("(0)")
                    .HasComment("אופן לקיחה:הכל,עצמאית (קוד 80),באחריות המוסד");

                entity.Property(e => e.Time1).HasMaxLength(12);

                entity.Property(e => e.TimeTake)
                    .HasMaxLength(10)
                    .HasComment("קובע אלו שעות מסומנות בתוכנה ללקיחת התרופה לפי פורמט: 0;0;1;1");

                entity.Property(e => e.TradeKindId)
                    .HasColumnName("TradeKindID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("S.O.S  תרופות רגילות ו");

                entity.Property(e => e.TradeName).HasMaxLength(100);

                entity.Property(e => e.UserCreate).HasMaxLength(50);

                entity.Property(e => e.Val10).HasColumnType("ntext");
            });

            modelBuilder.Entity<TblClientNehalim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientNehalim");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.DateEnd)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DateLastUpdate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DateStart)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FileName)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.NohalNum)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate");

                entity.Property(e => e.ThemeName)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblClientNursingPlan>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientNursingPlans");

                entity.HasIndex(e => e.Id, "tblClientNursingPlans")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateEnd).HasColumnType("datetime");

                entity.Property(e => e.DateStart).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KindKey).HasMaxLength(20);

                entity.Property(e => e.Problem).HasMaxLength(1000);

                entity.Property(e => e.ProblemDetails).HasMaxLength(1000);

                entity.Property(e => e.ProblemId)
                    .HasMaxLength(100)
                    .HasColumnName("ProblemID");

                entity.Property(e => e.Results).HasMaxLength(250);

                entity.Property(e => e.SiudThemeId).HasColumnName("SiudThemeID");

                entity.Property(e => e.Symptoms).HasMaxLength(1000);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Targets).HasMaxLength(1000);

                entity.Property(e => e.TipulPlan).HasMaxLength(250);

                entity.Property(e => e.UserCreateId).HasColumnName("userCreateId");

                entity.Property(e => e.UserDone).HasMaxLength(50);

                entity.Property(e => e.WorkerGroup).HasMaxLength(15);

                entity.Property(e => e.YeshivaId).HasColumnName("YeshivaID");
            });

            modelBuilder.Entity<TblClientOldStatus>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientOldStatus_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientOldStatus");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BMoveToActive).HasColumnName("bMoveToActive");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך רישום הרשומה");

                entity.Property(e => e.Item).HasMaxLength(1000);

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.RecStatus)
                    .HasDefaultValueSql("(0)")
                    .HasComment("0-ניתן לעריכה/ מחיקה, 1- רשומה סגורה, 2- רשומה שנמחקה");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ThemeId)
                    .HasColumnName("ThemeID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("0-אבחנות , 1-תרופות , 2-אלרגיה , 6-הרגלים (ע\"פ טופס קבלת חולה)");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("רושם הרשומה");
            });

            modelBuilder.Entity<TblClientPain>(entity =>
            {
                entity.ToTable("tblClientPain");

                entity.HasIndex(e => e.ClientId, "idx_tblClientPain_clientId_inc_id_nStatus")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BOmdanAgain)
                    .HasColumnName("bOmdanAgain")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId).HasColumnName("clientId");

                entity.Property(e => e.Comments).HasMaxLength(200);

                entity.Property(e => e.DateTime1).HasColumnType("datetime");

                entity.Property(e => e.Effect)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.LevelSelectedId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("levelSelectedId")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NStatus).HasColumnName("nStatus");

                entity.Property(e => e.PainKind).HasMaxLength(100);

                entity.Property(e => e.Place).HasMaxLength(100);

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.Symptoms).HasMaxLength(100);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TipulKind).HasMaxLength(100);

                entity.Property(e => e.UserCreate).HasMaxLength(50);
            });

            modelBuilder.Entity<TblClientRegishut>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientRegishut_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientRegishut");

                entity.HasIndex(e => new { e.BDel, e.KabalaId }, "IX_tblClientRegishut_bDel_KabalaID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.BDel, e.TStamp }, "idx_tblClientRegishut_bDel_tStamp_ClientID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.ClientId, e.Theme, e.KabalaId, e.BDel }, "idx_tblclientregishut")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BConv).HasColumnName("bConv");

                entity.Property(e => e.BConv2).HasColumnName("bConv2");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BUnKnown).HasColumnName("bUnKnown");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ConsiderName).HasMaxLength(50);

                entity.Property(e => e.DateS).HasMaxLength(10);

                entity.Property(e => e.DrugKod).HasMaxLength(500);

                entity.Property(e => e.Effect)
                    .HasMaxLength(100)
                    .HasComment("תופעות לוואי");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.RecType).HasDefaultValueSql("((0))");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Theme).HasMaxLength(250);

                entity.Property(e => e.UserCreate)
                    .HasMaxLength(100)
                    .HasComment("שם הקובע");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblClientRegishutBack>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientRegishutBack");

                entity.Property(e => e.BConv).HasColumnName("bConv");

                entity.Property(e => e.BConv2).HasColumnName("bConv2");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BUnKnown).HasColumnName("bUnKnown");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.ConsiderName).HasMaxLength(50);

                entity.Property(e => e.DateS).HasMaxLength(10);

                entity.Property(e => e.DrugKod).HasMaxLength(500);

                entity.Property(e => e.Effect).HasMaxLength(100);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.Theme).HasMaxLength(250);

                entity.Property(e => e.UserCreate).HasMaxLength(100);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblClientRespirationMadad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientRespirationMadad");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Ibw).HasColumnName("IBW");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Mv).HasColumnName("MV");

                entity.Property(e => e.Peep).HasColumnName("PEEP");

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp");

                entity.Property(e => e.Tstampdel)
                    .HasColumnType("datetime")
                    .HasColumnName("tstampdel");

                entity.Property(e => e.UserCreate).HasMaxLength(200);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");

                entity.Property(e => e.Ve).HasColumnName("ve");
            });

            modelBuilder.Entity<TblClientSetting>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientSetting");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1).HasMaxLength(50);

                entity.Property(e => e.Val1).HasMaxLength(300);
            });

            modelBuilder.Entity<TblClientSizeC>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientSizeC");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Size).HasMaxLength(50);
            });

            modelBuilder.Entity<TblClientTelemarketing>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientTelemarketing");

                entity.HasIndex(e => e.ClientId, "IX_tblClientTelemarketingNew")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.AskToEnterDate).HasColumnType("datetime");

                entity.Property(e => e.Bakashot).HasColumnType("ntext");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasColumnType("ntext");

                entity.Property(e => e.ContractDate).HasColumnType("datetime");

                entity.Property(e => e.CurrentDiurKind).HasMaxLength(50);

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.GoremMafne).HasMaxLength(50);

                entity.Property(e => e.HufnaToMid).HasColumnName("HufnaToMId");

                entity.Property(e => e.HufnaToMtxt).HasColumnName("HufnaToMTxt");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.ModelApartment).HasMaxLength(200);

                entity.Property(e => e.MosadIshpuz).HasMaxLength(50);

                entity.Property(e => e.NeedToEnterDate).HasColumnType("datetime");

                entity.Property(e => e.ResponsibleId).HasColumnName("ResponsibleID");

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.Status).HasMaxLength(100);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TsTemp)
                    .HasColumnType("datetime")
                    .HasColumnName("tsTemp");

                entity.Property(e => e.VaadatKabalaId).HasColumnName("VaadatKabalaID");
            });

            modelBuilder.Entity<TblClientTestDetail>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientTestDetail_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientTestDetail");

                entity.HasIndex(e => e.ClientTestId, "ClientTestID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TestDetailId, "TestDetailID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AnswerList).HasColumnType("ntext");

                entity.Property(e => e.ClientTestId)
                    .HasColumnName("ClientTestID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.IsNotCorrect).HasDefaultValueSql("(0)");

                entity.Property(e => e.TestDetailId)
                    .HasColumnName("TestDetailID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Value1).HasColumnType("ntext");
            });

            modelBuilder.Entity<TblClientTestDinko>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientTestDinko");

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.BdikaDetailsId).HasColumnName("BdikaDetailsID");

                entity.Property(e => e.BdikaDetailsId2).HasColumnName("BdikaDetailsID2");

                entity.Property(e => e.BdikaId2).HasColumnName("BdikaID2");

                entity.Property(e => e.Comment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.InfectiousDiseases).HasMaxLength(30);

                entity.Property(e => e.InfectiousDiseasesId).HasColumnName("InfectiousDiseasesID");

                entity.Property(e => e.Mobility).HasMaxLength(30);

                entity.Property(e => e.MobilityId).HasColumnName("MobilityID");

                entity.Property(e => e.NeedOxygen).HasMaxLength(30);

                entity.Property(e => e.NeedOxygenId).HasColumnName("NeedOxygenID");

                entity.Property(e => e.RoomNum).HasMaxLength(10);

                entity.Property(e => e.Side)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Time1).HasMaxLength(8);

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp");

                entity.Property(e => e.UserCreate).HasMaxLength(500);
            });

            modelBuilder.Entity<TblClientTifkud>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientTifkud_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientTifkud");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))");

                entity.Property(e => e.DescriptionId)
                    .HasColumnName("DescriptionID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("רשימה משנית תחת תפקוד המגדירה את אופן התפקוד");

                entity.Property(e => e.ThemeId)
                    .HasColumnName("ThemeID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("TifkudID");
            });

            modelBuilder.Entity<TblClientTipulim>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientTipulim_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientTipulim");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Comments).HasMaxLength(50);

                entity.Property(e => e.Drug).HasMaxLength(100);

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))");

                entity.Property(e => e.Place).HasMaxLength(100);

                entity.Property(e => e.ReasonId)
                    .HasColumnName("ReasonID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))");

                entity.Property(e => e.Times).HasDefaultValueSql("(0)");

                entity.Property(e => e.TipulId)
                    .HasColumnName("TipulID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TipulIn)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם זהו טיפול פנים או חוץ?");
            });

            modelBuilder.Entity<TblClientTnuot>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientTnuot");

                entity.HasIndex(e => e.ClientId, "ClientDetailstblClientTnuot")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Date1, "IX_tblClientTnuot")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.MahlakaId, "idx_tblClientTnuot_MahlakaID_ID_TnuahID_inc_ID_TnuahID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.MahlakaId, "idx_tblClientTnuot_inc_ID_TnuahID_AgafID_TifkudStatusID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.AgafId)
                    .HasColumnName("AgafID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה האגף בו נמצא הדייר");

                entity.Property(e => e.AllowDoctorTnuah).HasMaxLength(50);

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.BExportHishpuz).HasColumnName("bExportHishpuz");

                entity.Property(e => e.BMahlakaNotChanged).HasColumnName("bMahlakaNotChanged");

                entity.Property(e => e.BReminder).HasColumnName("bReminder");

                entity.Property(e => e.BedNum)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מס' המיטה של הדייר בחדר");

                entity.Property(e => e.BedNumOld).HasDefaultValueSql("(0)");

                entity.Property(e => e.ChangeKind).HasMaxLength(10);

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))");

                entity.Property(e => e.Date2)
                    .HasColumnType("datetime")
                    .HasComment("תאריך סיום האישפוז");

                entity.Property(e => e.DateExitHosp).HasColumnType("datetime");

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DiurKindId)
                    .HasColumnName("DiurKindID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה מהטבלה tblDefDiurKind");

                entity.Property(e => e.Hospital)
                    .HasMaxLength(25)
                    .HasComment("ביה\"ח בו אושפז");

                entity.Property(e => e.HospitalMahlaka)
                    .HasMaxLength(25)
                    .HasComment("מחלקה בה אושפז");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IshpuzNum).HasDefaultValueSql("((0))");

                entity.Property(e => e.KodMahoz)
                    .HasDefaultValueSql("(0)")
                    .HasComment("במידה ומבוצעת קבלה למחלקה של מב\"ר יש לרשום קוד מחוז ותקן מיטה");

                entity.Property(e => e.LeaveKindId)
                    .HasColumnName("LeaveKindID")
                    .HasDefaultValueSql("((-1))")
                    .HasComment("אופן העזיבה");

                entity.Property(e => e.MahlakaId)
                    .HasColumnName("MahlakaID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.MosadIshpuzKod).HasComment("מקושר לטבלה tblDefMosadIshpuz");

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.RecStatus)
                    .HasDefaultValueSql("(0)")
                    .HasComment("0-רגיל(אפשר לערוך), 1-נעול");

                entity.Property(e => e.Results)
                    .HasColumnType("ntext")
                    .HasComment("ממצאי האישפוז");

                entity.Property(e => e.RoomId)
                    .HasColumnName("RoomID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה החדר בו נמצא הדייר");

                entity.Property(e => e.RoomIdold)
                    .HasColumnName("RoomIDOld")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold)
                    .HasColumnName("SponserIDOld")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SponserService).HasMaxLength(50);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TekenMita).HasDefaultValueSql("(0)");

                entity.Property(e => e.TifkudStatusId)
                    .HasColumnName("TifkudStatusID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("סטאטוס תפקודי של הדייר");

                entity.Property(e => e.TifkudStatusIdOld).HasDefaultValueSql("((0))");

                entity.Property(e => e.Time1).HasMaxLength(5);

                entity.Property(e => e.TnuahId)
                    .HasColumnName("TnuahID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TnuahIdold).HasColumnName("TnuahIDOld");

                entity.Property(e => e.UserIdcreate)
                    .HasColumnName("UserIDCreate")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה למעדכן הרשומה");
            });

            modelBuilder.Entity<TblClientTnuotArchive>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientTnuotArchive");

                entity.Property(e => e.AgafId)
                    .HasColumnName("AgafID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.BMahlakaNotChanged).HasColumnName("bMahlakaNotChanged");

                entity.Property(e => e.BedNum).HasDefaultValueSql("((0))");

                entity.Property(e => e.BedNumOld).HasDefaultValueSql("((0))");

                entity.Property(e => e.ChangeKind).HasMaxLength(10);

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DiurKindId)
                    .HasColumnName("DiurKindID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Hospital).HasMaxLength(25);

                entity.Property(e => e.HospitalMahlaka).HasMaxLength(25);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KodMahoz).HasDefaultValueSql("((0))");

                entity.Property(e => e.LeaveKindId)
                    .HasColumnName("LeaveKindID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.MahlakaId)
                    .HasColumnName("MahlakaID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("((0))");

                entity.Property(e => e.Results).HasColumnType("ntext");

                entity.Property(e => e.RoomId)
                    .HasColumnName("RoomID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RoomIdold)
                    .HasColumnName("RoomIDOld")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SponserId)
                    .HasColumnName("SponserID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SponserIdold)
                    .HasColumnName("SponserIDOld")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SponserService).HasMaxLength(50);

                entity.Property(e => e.TekenMita).HasDefaultValueSql("((0))");

                entity.Property(e => e.TifkudStatusId)
                    .HasColumnName("TifkudStatusID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TnuahId)
                    .HasColumnName("TnuahID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UserIdcreate)
                    .HasColumnName("UserIDCreate")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblClientTorim>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientTorim_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientTorim");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Address).HasMaxLength(200);

                entity.Property(e => e.Ambulancekind).HasMaxLength(50);

                entity.Property(e => e.BAmbulance).HasColumnName("bAmbulance");

                entity.Property(e => e.BEscort).HasColumnName("bEscort");

                entity.Property(e => e.BStatus)
                    .HasColumnName("bStatus")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Clinic).HasMaxLength(100);

                entity.Property(e => e.Comments).HasColumnType("ntext");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                entity.Property(e => e.DateReminder).HasColumnType("datetime");

                entity.Property(e => e.Doctor).HasMaxLength(100);

                entity.Property(e => e.EscortDetails).HasMaxLength(50);

                entity.Property(e => e.EscortPhon).HasMaxLength(50);

                entity.Property(e => e.Mange17).HasMaxLength(50);

                entity.Property(e => e.Mange17Id).HasColumnName("Mange17ID");

                entity.Property(e => e.MedicalGroup).HasDefaultValueSql("('')");

                entity.Property(e => e.MedicalGroupId).HasColumnName("MedicalGroupID");

                entity.Property(e => e.Price).HasMaxLength(50);

                entity.Property(e => e.Results).HasMaxLength(500);

                entity.Property(e => e.Room).HasMaxLength(50);

                entity.Property(e => e.Time1)
                    .HasMaxLength(10)
                    .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(14)),(14)))");

                entity.Property(e => e.TimeReminder).HasMaxLength(10);

                entity.Property(e => e.TransId).HasColumnName("TransID");

                entity.Property(e => e.TransferalId)
                    .HasColumnName("TransferalID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblClientTraining>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientTraining");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.ReceiveTraining).HasMaxLength(200);

                entity.Property(e => e.Remarks).HasMaxLength(200);

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.TrainingMethod)
                    .HasMaxLength(200)
                    .HasColumnName("trainingMethod");

                entity.Property(e => e.UnderstandingTraining).HasMaxLength(200);

                entity.Property(e => e.UnderstandingTrainingOperation).HasMaxLength(200);

                entity.Property(e => e.UserCreate).HasMaxLength(300);
            });

            modelBuilder.Entity<TblClientTransferal>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientTransferal_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientTransferal");

                entity.HasIndex(e => e.ClientId, "ClientID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.FormId, "FormID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BIncludeIshpuzim).HasColumnName("bIncludeIshpuzim");

                entity.Property(e => e.BIncludeLastFollowNurse).HasColumnName("bIncludeLastFollowNurse");

                entity.Property(e => e.BIncludeLastKeev).HasColumnName("bIncludeLastKeev");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasMaxLength(12)
                    .HasComment("סוג");

                entity.Property(e => e.FormId)
                    .HasColumnName("FormID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לטופס ההפניה בטבלת טפסים");

                entity.Property(e => e.IncludeAddress).HasDefaultValueSql("((0))");

                entity.Property(e => e.IncludeAvhanot).HasDefaultValueSql("((0))");

                entity.Property(e => e.IncludeBlister).HasDefaultValueSql("((0))");

                entity.Property(e => e.IncludeBm).HasColumnName("IncludeBM");

                entity.Property(e => e.IncludeContactMen)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם לכלול אנשי קשר בהפניה?");

                entity.Property(e => e.IncludeDrugs).HasDefaultValueSql("((0))");

                entity.Property(e => e.IncludeHisun).HasDefaultValueSql("((0))");

                entity.Property(e => e.IncludeLastFollowDoctor).HasDefaultValueSql("((0))");

                entity.Property(e => e.IncludeLastKeev).HasDefaultValueSql("((0))");

                entity.Property(e => e.IncludePhizio).HasDefaultValueSql("((0))");

                entity.Property(e => e.IncludeRegishut).HasDefaultValueSql("((0))");

                entity.Property(e => e.IncludeTifkud)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם לכלול הערכה תפקודית בהפניה?");

                entity.Property(e => e.Locked)
                    .HasDefaultValueSql("(0)")
                    .HasComment("נעול?");

                entity.Property(e => e.NcludeLastTifkud).HasColumnName("ncludeLastTifkud");

                entity.Property(e => e.Place1)
                    .HasMaxLength(255)
                    .HasComment("מיקום");

                entity.Property(e => e.PrintFormat).HasColumnName("printFormat");

                entity.Property(e => e.Reason1)
                    .HasMaxLength(255)
                    .HasComment("סיבת ההפניה");

                entity.Property(e => e.Result1).HasColumnType("ntext");

                entity.Property(e => e.Typ1)
                    .HasMaxLength(70)
                    .HasComment("סיוג ההפניה כגון הפניה לבית חולים");

                entity.Property(e => e.Typ2)
                    .HasMaxLength(70)
                    .HasComment("סוג ההפניה");

                entity.Property(e => e.Urgent)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם ההפניה דחופה?");

                entity.Property(e => e.UserCreate).HasMaxLength(40);
            });

            modelBuilder.Entity<TblClientTyingActual>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientTyingActual");

                entity.Property(e => e.Comment).HasColumnName("comment");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Duration).HasColumnName("duration");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.TyingId).HasColumnName("TyingID");
            });

            modelBuilder.Entity<TblClientTyingControlCommittee>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientTyingControlCommittee");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.TyingId).HasColumnName("TyingID");
            });

            modelBuilder.Entity<TblClientVaccination>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientVaccination_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientVaccination");

                entity.HasIndex(e => new { e.ClientId, e.KabalaId, e.BDel }, "tblClientVaccination_ClientID_KabalaID_bDel")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Atsva)
                    .HasMaxLength(20)
                    .HasColumnName("atsva");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DateOld).HasMaxLength(50);

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DateS1).HasColumnType("datetime");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.Memo1).HasMaxLength(150);

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Theme).HasMaxLength(255);

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");

                entity.Property(e => e.VaccinationName).HasMaxLength(30);
            });

            modelBuilder.Entity<TblClientYediah>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientYediah_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientYediah");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))");

                entity.Property(e => e.DescriptionId)
                    .HasColumnName("DescriptionID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מקושר לטבלה tblDefYediahDescription");

                entity.Property(e => e.ThemeId)
                    .HasColumnName("ThemeID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("YediahID");
            });

            modelBuilder.Entity<TblClientYeshivotTsevet>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientYeshivotTsevet");

                entity.HasIndex(e => new { e.ClientId, e.DateCreate }, "idx_tblClientYeshivotTsevet_ClientID_DateCreate")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.AddParticipates)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BLocked).HasColumnName("bLocked");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.DateInfo)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DateInfoId)
                    .HasColumnName("DateInfoID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DateLocked).HasColumnType("datetime");

                entity.Property(e => e.DayarName).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.NextYeshivaDate).HasColumnType("datetime");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.UserCreateId).HasColumnName("userCreateId");
            });

            modelBuilder.Entity<TblClientYeshivotTsevetTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientYeshivotTsevetTemp");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BLocked).HasColumnName("bLocked");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.DateInfo).HasColumnType("datetime");

                entity.Property(e => e.DateInfoId).HasColumnName("DateInfoID");

                entity.Property(e => e.DateLocked).HasColumnType("datetime");

                entity.Property(e => e.DayarName).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.NextYeshivaDate).HasColumnType("datetime");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.UserCreateId).HasColumnName("userCreateId");

                entity.Property(e => e.YeshivaId).HasColumnName("YeshivaID");
            });

            modelBuilder.Entity<TblClientsBdikot>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientsBdikot_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientsBdikot");

                entity.HasIndex(e => e.BdikaId, "BdikaID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ToClientId, "ToUserID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BdikaCategory)
                    .HasDefaultValueSql("(0)")
                    .HasComment("קטגוריה של הבדיקות");

                entity.Property(e => e.BdikaId)
                    .HasColumnName("BdikaID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה למבנה הבדיקה(tblBdikot)");

                entity.Property(e => e.DateCreate)
                    .HasColumnType("datetime")
                    .HasComment("תאריך יצירה");

                entity.Property(e => e.DateLocked)
                    .HasColumnType("datetime")
                    .HasComment("תאריך נעילה");

                entity.Property(e => e.Locked)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם הבחינה נעולה");

                entity.Property(e => e.ToClientId)
                    .HasColumnName("ToClientID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לדייר שעליו מוסבת הבדיקה");

                entity.Property(e => e.UserIdcreate)
                    .HasColumnName("UserIDCreate")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה ליוצר");

                entity.Property(e => e.UserIdlocked)
                    .HasColumnName("UserIDLocked")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לנועל");
            });

            modelBuilder.Entity<TblClientsContract>(entity =>
            {
                entity.ToTable("tblClientsContract");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Comments)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ContractDate).HasColumnType("datetime");

                entity.Property(e => e.DateHeskemZmaniE).HasColumnType("datetime");

                entity.Property(e => e.DateHeskemZmaniS).HasColumnType("datetime");

                entity.Property(e => e.DateMadad).HasColumnType("datetime");

                entity.Property(e => e.DateRate).HasColumnType("datetime");

                entity.Property(e => e.EntireDateByCon).HasColumnType("datetime");

                entity.Property(e => e.Involve1)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Involve2)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Involve3)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Involve4)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MaslulId).HasColumnName("MaslulID");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblClientsForm>(entity =>
            {
                entity.ToTable("tblClientsForms");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.ToClientId, e.Locked }, "IX_tblClientsForms_ToClientID_Locked")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ToClientId, "ToClientIID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TypFormId, "TypFormID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TypFormId2, "TypFormID1")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BKabala).HasColumnName("bKabala");

                entity.Property(e => e.Bsend).HasColumnName("bsend");

                entity.Property(e => e.DPoint)
                    .HasColumnName("dPoint")
                    .HasDefaultValueSql("((0))")
                    .HasComment("נקודות למבחן");

                entity.Property(e => e.DateCreated).HasColumnType("datetime");

                entity.Property(e => e.DateLocked).HasColumnType("datetime");

                entity.Property(e => e.GroupKey)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.Locked).HasDefaultValueSql("((0))");

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.Param1)
                    .IsRequired()
                    .HasColumnName("param1")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Param2)
                    .IsRequired()
                    .HasColumnName("param2")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Param3)
                    .IsRequired()
                    .HasColumnName("param3")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ParentId).HasColumnName("ParentID");

                entity.Property(e => e.RelatedFormId).HasColumnName("RelatedFormID");

                entity.Property(e => e.ToClientId)
                    .HasColumnName("ToClientID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("מזהה לדייר שאליו נוצר הטופס");

                entity.Property(e => e.ToGroup)
                    .HasMaxLength(15)
                    .HasComment("GroupName:Sugar,Tipulim... כאשר ההתייחסות לקבוצה ולא לדייר");

                entity.Property(e => e.TscreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("TSCreateDate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TypFormId)
                    .HasColumnName("TypFormID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("מזהה למבנה הטופס");

                entity.Property(e => e.TypFormId2)
                    .HasColumnName("TypFormID2")
                    .HasDefaultValueSql("((0))")
                    .HasComment("מזהה למבנה הטופס");

                entity.Property(e => e.UserIdLocked)
                    .HasDefaultValueSql("((0))")
                    .HasComment("מזהה לנועל");

                entity.Property(e => e.UserIdcreate)
                    .HasColumnName("UserIDCreate")
                    .HasDefaultValueSql("((0))")
                    .HasComment("מזהה ליוצר");

                entity.HasOne(d => d.ToClient)
                    .WithMany(p => p.TblClientsForms)
                    .HasForeignKey(d => d.ToClientId)
                    .HasConstraintName("FK_tblClientsForms_ClientDetails");
            });

            modelBuilder.Entity<TblClientsGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientsGroup");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TsTamp)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblClientsSeegnalRespone>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblClientsSeegnalRespone");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.IndicatorStatus).HasColumnName("indicatorStatus");

                entity.Property(e => e.SeegnalUrl)
                    .IsRequired()
                    .HasColumnName("seegnalUrl");

                entity.Property(e => e.Tstampcreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tstampcreate")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblClientsTest>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblClientsTest_PK")
                    .IsClustered(false);

                entity.ToTable("tblClientsTest");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TestId, "TestID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ToClientId, "ToClientID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.DateLocked).HasColumnType("datetime");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.TestId)
                    .HasColumnName("TestID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ToClientId)
                    .HasColumnName("ToClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UserIdcreate)
                    .HasColumnName("UserIDCreate")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UserIdlocked)
                    .HasColumnName("UserIDLocked")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblClientsVitalSign>(entity =>
            {
                entity.ToTable("tblClientsVitalSigns");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyId).HasColumnName("CompanyID");

                entity.Property(e => e.MonitorId).HasColumnName("MonitorID");

                entity.Property(e => e.PatientId).HasColumnName("PatientID");
            });

            modelBuilder.Entity<TblClinicalCondition>(entity =>
            {
                entity.ToTable("tblClinicalConditions");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Avhana).HasMaxLength(50);

                entity.Property(e => e.Condition).HasMaxLength(50);

                entity.Property(e => e.DrugName).HasMaxLength(50);

                entity.Property(e => e.TipulName).HasMaxLength(50);
            });

            modelBuilder.Entity<TblClockAlert>(entity =>
            {
                entity.ToTable("tblClockAlerts");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Date1).HasColumnType("datetime");
            });

            modelBuilder.Entity<TblCompany>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblCompanies_PK")
                    .IsClustered(false);

                entity.ToTable("tblCompanies");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.CompanyName).HasMaxLength(50);

                entity.Property(e => e.MdbName).HasMaxLength(10);
            });

            modelBuilder.Entity<TblCompany1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblCompany");

                entity.Property(e => e.BArchive)
                    .HasColumnName("bArchive")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BClientPopup)
                    .HasColumnName("bClientPopup")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BHideKupa)
                    .HasColumnName("bHideKupa")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BHideWait)
                    .HasColumnName("bHideWait")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BModeMustTofes17)
                    .HasColumnName("bModeMustTofes17")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CompanyStr).HasMaxLength(20);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LblCardCap)
                    .HasMaxLength(20)
                    .HasColumnName("lblCardCap");

                entity.Property(e => e.LblClientCap)
                    .HasMaxLength(20)
                    .HasColumnName("lblClientCap");

                entity.Property(e => e.LblClientsCap)
                    .HasMaxLength(20)
                    .HasColumnName("lblClientsCap");

                entity.Property(e => e.LblDoctorCap)
                    .HasMaxLength(20)
                    .HasColumnName("lblDoctorCap");

                entity.Property(e => e.LblDoctorsCap)
                    .HasMaxLength(20)
                    .HasColumnName("lblDoctorsCap");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.NModeCorrect)
                    .HasColumnName("nModeCorrect")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NModeLookForFreeTor)
                    .HasColumnName("nModeLookForFreeTor")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NModeLookforOnStart)
                    .HasColumnName("nModeLookforOnStart")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NModeShowDef)
                    .HasColumnName("nModeShowDef")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NRefresh).HasColumnName("nRefresh");

                entity.Property(e => e.Name1).HasMaxLength(40);

                entity.Property(e => e.SPass)
                    .HasMaxLength(20)
                    .HasColumnName("sPass");
            });

            modelBuilder.Entity<TblCompanyDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblCompanyDetails");

                entity.HasIndex(e => e.CompanyName, "CompanyName")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.RoomDefId, "RoomDefID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TahzukaWorkerKindId, "TahzukaWorkerKindID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.ActionReminder)
                    .HasDefaultValueSql("((0))")
                    .HasComment("בעת יצירת פעילות לשלוח תזכורת למשתתפים");

                entity.Property(e => e.AdminPassword).HasMaxLength(10);

                entity.Property(e => e.AuctionDayPriceNefesh)
                    .HasColumnType("money")
                    .HasColumnName("auctionDayPriceNefesh");

                entity.Property(e => e.AuctionDayPriceSiudi)
                    .HasColumnType("money")
                    .HasColumnName("auctionDayPriceSiudi");

                entity.Property(e => e.BActiveDirectory).HasColumnName("bActiveDirectory");

                entity.Property(e => e.BArchiveJustOnLeave).HasColumnName("bArchiveJustOnLeave");

                entity.Property(e => e.BAutoTask).HasColumnName("bAutoTask");

                entity.Property(e => e.BBlockTnuotOnArchive).HasColumnName("bBlockTnuotOnArchive");

                entity.Property(e => e.BEditId).HasColumnName("bEditId");

                entity.Property(e => e.BHalfTab)
                    .HasColumnName("bHalfTab")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BInterai).HasColumnName("bInterai");

                entity.Property(e => e.BMakeTnuot).HasColumnName("bMakeTnuot");

                entity.Property(e => e.BMustDoctorOnTnuot).HasColumnName("bMustDoctorOnTnuot");

                entity.Property(e => e.BMustStrongPassowrd).HasColumnName("bMustStrongPassowrd");

                entity.Property(e => e.BNoActive).HasColumnName("bNoActive");

                entity.Property(e => e.BOrientation)
                    .HasColumnName("bOrientation")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BRound)
                    .HasColumnName("bRound")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BShowDayarKod).HasColumnName("bShowDayarKod");

                entity.Property(e => e.BShowResponsible).HasColumnName("bShowResponsible");

                entity.Property(e => e.BeriutHanefeshDayPrice).HasColumnType("money");

                entity.Property(e => e.BeriutHanefeshDayPriceNefesh).HasColumnType("money");

                entity.Property(e => e.BeriutHanefeshDayPriceSiudi).HasColumnType("money");

                entity.Property(e => e.CompanyAddress).HasMaxLength(255);

                entity.Property(e => e.CompanyName).HasMaxLength(60);

                entity.Property(e => e.CurrentNum1)
                    .HasDefaultValueSql("((0))")
                    .HasComment("מס' קבלה נוכחי");

                entity.Property(e => e.CurrentNum2).HasDefaultValueSql("((0))");

                entity.Property(e => e.CurrentNum3).HasDefaultValueSql("((0))");

                entity.Property(e => e.DateCharge)
                    .HasColumnType("datetime")
                    .HasComment("תאריך אחרון שבו נוצר החיוב");

                entity.Property(e => e.DateCreate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                entity.Property(e => e.DateMasav)
                    .HasColumnType("datetime")
                    .HasComment("תאריך אחרון שבו נוצר קובץ המס\"ב");

                entity.Property(e => e.DayChargeMasav)
                    .HasDefaultValueSql("((0))")
                    .HasComment("יום חיוב הדיירים במס\"ב");

                entity.Property(e => e.DayarCap).HasMaxLength(10);

                entity.Property(e => e.DocDir)
                    .HasDefaultValueSql("((1))")
                    .HasComment("מס' ספרית המסמכים הנוכחית");

                entity.Property(e => e.DocFile)
                    .HasDefaultValueSql("((0))")
                    .HasComment("מס' הקובץ בתוך הספריה");

                entity.Property(e => e.DomainName).HasMaxLength(100);

                entity.Property(e => e.DrugNotInMirsham).HasMaxLength(2000);

                entity.Property(e => e.DrugnotinmirshamOld).HasColumnName("drugnotinmirshamOld");

                entity.Property(e => e.Email).HasMaxLength(255);

                entity.Property(e => e.EnvelopeSender).HasMaxLength(200);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.FirstNum1)
                    .HasDefaultValueSql("((0))")
                    .HasComment("מס' ראשון בקבלות");

                entity.Property(e => e.FirstNum2).HasDefaultValueSql("((0))");

                entity.Property(e => e.FirstNum3).HasDefaultValueSql("((0))");

                entity.Property(e => e.GuestCap)
                    .IsRequired()
                    .HasDefaultValueSql("('אורח')");

                entity.Property(e => e.HanpakaDays).HasDefaultValueSql("((-1))");

                entity.Property(e => e.HeshBankMasav)
                    .HasMaxLength(15)
                    .HasComment("קוד חשבון בנק אותו מחייבים בעת יצירת מס\"ב");

                entity.Property(e => e.HeshCheck1)
                    .HasDefaultValueSql("((0))")
                    .HasComment("ח-ן שקים ש\"ח");

                entity.Property(e => e.HeshCheck2)
                    .HasDefaultValueSql("((0))")
                    .HasComment("ח-ן שקים מט\"ח");

                entity.Property(e => e.HeshHanefeshId).HasColumnName("HeshHanefeshID");

                entity.Property(e => e.HeshId1)
                    .HasColumnName("HeshID1")
                    .HasDefaultValueSql("((0))")
                    .HasComment("חשבון משוייך לקבלה");

                entity.Property(e => e.HeshId2)
                    .HasColumnName("HeshID2")
                    .HasDefaultValueSql("((0))")
                    .HasComment("חשבון משוייך לחשבונית");

                entity.Property(e => e.HeshId3)
                    .HasColumnName("HeshID3")
                    .HasDefaultValueSql("((0))")
                    .HasComment("חשבון משוייך לחשבון עסקה");

                entity.Property(e => e.HeshInMaham)
                    .HasDefaultValueSql("((0))")
                    .HasComment("חשבון הכנסות (חייב מע\"מ)");

                entity.Property(e => e.HeshInNoMaham)
                    .HasDefaultValueSql("((0))")
                    .HasComment("חשבון הכנסות(פטור ממע\"מ)");

                entity.Property(e => e.HeshMabarId).HasColumnName("HeshMabarID");

                entity.Property(e => e.HeshMezuman1)
                    .HasDefaultValueSql("((0))")
                    .HasComment("ח-ן מזומן ש\"ח");

                entity.Property(e => e.HeshMezuman2)
                    .HasDefaultValueSql("((0))")
                    .HasComment("ח-ן מזומן מט\"ח");

                entity.Property(e => e.HeshOut)
                    .HasDefaultValueSql("((0))")
                    .HasComment("חשבון הוצאות");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IncludeIdnum).HasColumnName("IncludeIDNum");

                entity.Property(e => e.IsMedicalManager)
                    .HasColumnName("isMedicalManager")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.IsSingle)
                    .HasColumnName("isSingle")
                    .HasDefaultValueSql("((1))")
                    .HasComment("האם הנהלת החשבונות חד צידית או כפולה?");

                entity.Property(e => e.Kind1Id105).HasColumnName("Kind1ID105");

                entity.Property(e => e.KodMasav)
                    .HasDefaultValueSql("((0))")
                    .HasComment("קוד המוסד במסב");

                entity.Property(e => e.KodMosad)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("((0))")
                    .HasComment("קוד המוסד במשרד הבריאות");

                entity.Property(e => e.KodMosadBm)
                    .HasColumnName("KodMosadBM")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LogoAlign).HasDefaultValueSql("((0))");

                entity.Property(e => e.MabarDayPrice).HasColumnType("money");

                entity.Property(e => e.MabarDayPriceKorona)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MabarDayPriceNefesh).HasColumnType("money");

                entity.Property(e => e.MabarDayPriceSiudi).HasColumnType("money");

                entity.Property(e => e.MabarDayPriceSiudiOld).HasColumnType("money");

                entity.Property(e => e.MabarDayPriceZonda).HasColumnType("money");

                entity.Property(e => e.MahamHeshId)
                    .HasColumnName("MahamHeshID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MahlakaCap).HasMaxLength(10);

                entity.Property(e => e.MailSiteId).HasColumnName("MailSiteID");

                entity.Property(e => e.MainCoin)
                    .HasDefaultValueSql("((0))")
                    .HasComment("מטבע מקומי");

                entity.Property(e => e.MainNurse).HasMaxLength(50);

                entity.Property(e => e.MaintenanceComments).HasMaxLength(200);

                entity.Property(e => e.MeterPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MitotTeken)
                    .HasDefaultValueSql("((0))")
                    .HasComment("מס' מיטות בתקן (מופיע בטופס האישור של בית האבות)");

                entity.Property(e => e.MiunIdgroup)
                    .HasMaxLength(50)
                    .HasColumnName("MiunIDGroup");

                entity.Property(e => e.MosadCap).HasMaxLength(10);

                entity.Property(e => e.MosadPrati)
                    .HasDefaultValueSql("((1))")
                    .HasComment("כן-מוסד פרטי, לא-מוסד ציבורי");

                entity.Property(e => e.NeedUpdate).HasDefaultValueSql("((0))");

                entity.Property(e => e.NoMaham0)
                    .HasDefaultValueSql("((0))")
                    .HasComment("האם בעת חיוב לקוחות לפטור ממע\"מ");

                entity.Property(e => e.NoMaham1)
                    .HasDefaultValueSql("((0))")
                    .HasComment("האם ברכישה מספקים לפטור ממע\"מ");

                entity.Property(e => e.NoMaham2)
                    .HasDefaultValueSql("((0))")
                    .HasComment("האם בהוספת פריט לפטור ממע\"מ");

                entity.Property(e => e.OptConstCharges)
                    .HasColumnName("optConstCharges")
                    .HasDefaultValueSql("((0))")
                    .HasComment("0-חיוב אוטומטי, 1-חיוב ע\"פ דרישה ידנית");

                entity.Property(e => e.OsekId)
                    .HasColumnName("OsekID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PakidShuma).HasMaxLength(50);

                entity.Property(e => e.PerHachnasa)
                    .HasDefaultValueSql("((0))")
                    .HasComment("אחוז מס הכנסה");

                entity.Property(e => e.PerMaham).HasDefaultValueSql("((0))");

                entity.Property(e => e.PerMikdamot).HasDefaultValueSql("((0))");

                entity.Property(e => e.PerNikuyMakor)
                    .HasDefaultValueSql("((0))")
                    .HasComment("% ניכוי מס במקור");

                entity.Property(e => e.Phone).HasMaxLength(20);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.RefueeManager).HasMaxLength(50);

                entity.Property(e => e.RoomDefId)
                    .HasColumnName("RoomDefID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("הגדרת מינוחים:0-דירה,1-בית");

                entity.Property(e => e.SmsPass).HasMaxLength(30);

                entity.Property(e => e.SmsUser).HasMaxLength(30);

                entity.Property(e => e.Tahzuka)
                    .HasMaxLength(100)
                    .HasComment("פרטי SMS והתרעות אוטומטיות לתחזוקה");

                entity.Property(e => e.TahzukaWorkerKindId)
                    .HasMaxLength(10)
                    .HasColumnName("TahzukaWorkerKindID")
                    .HasComment("קישור ל-Kind1@Kind2 של עובדי התחזוקה");

                entity.Property(e => e.TblcompanydetailsBeriutHanefeshDayPrice)
                    .HasColumnType("money")
                    .HasColumnName("tblcompanydetails.BeriutHanefeshDayPrice")
                    .HasDefaultValueSql("((0))")
                    .HasComment("עלות יום לסיעודי מב\"ר");

                entity.Property(e => e.TblcompanydetailsMabarDayPrice)
                    .HasColumnType("money")
                    .HasColumnName("tblcompanydetails.MabarDayPrice");

                entity.Property(e => e.TikHachnasa).HasMaxLength(20);

                entity.Property(e => e.TikNikuyim).HasMaxLength(20);
            });

            modelBuilder.Entity<TblConnection>(entity =>
            {
                entity.ToTable("tblConnections");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Dbname)
                    .IsRequired()
                    .HasColumnName("DBName")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ServerIp)
                    .IsRequired()
                    .HasColumnName("ServerIP")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ServerPassword)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ServerUsername)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblConstBlisterColor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstBlisterColors");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblConstBlisterHafrashaKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstBlisterHafrashaKind");

                entity.HasIndex(e => e.Id, "idx_tblConstBlisterHafrashaKind_id_inc_item")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblConstBlisterHafrashaQuantity>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstBlisterHafrashaQuantity");

                entity.HasIndex(e => e.Id, "idx_tblConstBlisterHafrashaQuantity_id_inc_item")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblConstBlisterKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstBlisterKind");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblConstBlisterLevel>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstBlisterLevels");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(200);
            });

            modelBuilder.Entity<TblConstBlisterPlace>(entity =>
            {
                entity.HasKey(e => e.Item);

                entity.ToTable("tblConstBlisterPlace");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("ID");
            });

            modelBuilder.Entity<TblConstCharge>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblConstCharges_PK")
                    .IsClustered(false);

                entity.ToTable("tblConstCharges");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Active)
                    .HasDefaultValueSql("(1)")
                    .HasComment("החיוב פעיל או לא?");

                entity.Property(e => e.BChargeByTofes17).HasColumnName("bChargeByTofes17");

                entity.Property(e => e.BChargeDayByStay).HasColumnName("bChargeDayByStay");

                entity.Property(e => e.BChargeDayByStayN17).HasColumnName("bChargeDayByStayN17");

                entity.Property(e => e.BClient).HasColumnName("bClient");

                entity.Property(e => e.BSpec).HasColumnName("bSpec");

                entity.Property(e => e.ChargeLastMadad).HasColumnType("money");

                entity.Property(e => e.ChargeMadadBasis).HasColumnType("money");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("קוד הלקוח");

                entity.Property(e => e.CurrentDate)
                    .HasColumnType("datetime")
                    .HasComment("התאריך הבא לחיוב (משתנה בכל חודש)");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך התחלת החיוב");

                entity.Property(e => e.Date2)
                    .HasColumnType("datetime")
                    .HasComment("תאריך סיום החיוב");

                entity.Property(e => e.LastCharge).HasMaxLength(12);

                entity.Property(e => e.LastCharge2).HasColumnType("datetime");

                entity.Property(e => e.Memo1).HasMaxLength(50);

                entity.Property(e => e.NChargeKind).HasColumnName("nChargeKind");

                entity.Property(e => e.ParitId)
                    .HasColumnName("ParitID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("המספר המזהה של הפריט");

                entity.Property(e => e.ParitKod).HasMaxLength(30);

                entity.Property(e => e.ParitKodOld).HasColumnName("paritKodOld");

                entity.Property(e => e.ParitName)
                    .HasMaxLength(50)
                    .HasComment("שם הפריט לחיוב");

                entity.Property(e => e.Price1).HasColumnType("money");

                entity.Property(e => e.PriceBasic).HasColumnType("money");

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.TnouaId).HasColumnName("TnouaID");

                entity.Property(e => e.UpdateToMadadBasis).HasColumnType("money");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblConstChargeRange>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstChargeRange");

                entity.Property(e => e.ConstChargeId).HasColumnName("ConstChargeID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblConstDrugGenericGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstDrugGenericGroup");

                entity.Property(e => e.GenericGroupName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.SeegnalCode)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblConstDrugInteraction>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstDrugInteractions");

                entity.Property(e => e.Generic1Desc).HasMaxLength(100);

                entity.Property(e => e.Generic2Desc).HasMaxLength(100);

                entity.Property(e => e.InteractionMsg).HasMaxLength(50);
            });

            modelBuilder.Entity<TblConstDrugTakeKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstDrugTakeKind");

                entity.Property(e => e.Binjections).HasColumnName("binjections");

                entity.Property(e => e.Boral).HasColumnName("boral");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.SeegnalCode)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SeegnalRouteName)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblConstEatSum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstEatSum");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblConstHtmlScript>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstHtmlScripts");

                entity.HasIndex(e => e.Key1, "IX_tblConstHtmlScripts")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.HtmlSource)
                    .IsRequired()
                    .HasColumnType("ntext");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblConstHtmlScriptsNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstHtmlScriptsNew");

                entity.Property(e => e.HtmlSource)
                    .IsRequired()
                    .HasColumnType("ntext");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblConstInfectionSource>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstInfectionSource");

                entity.HasIndex(e => e.Item, "UQ__tblConst__9CBB9A4E00D55B40")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblConst__9CBB9A4E0DD4A34C")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblConst__9CBB9A4E1AE50F8F")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblConst__9CBB9A4E24C5D756")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblConst__9CBB9A4E42F7485B")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblConst__9CBB9A4E50E84475")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblConst__9CBB9A4E56220E00")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .HasMaxLength(80)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.OrderId).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblConstLogField>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstLogFields");

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("key1")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Table1).HasMaxLength(30);
            });

            modelBuilder.Entity<TblConstLunch>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstLunch");

                entity.HasIndex(e => new { e.Id, e.Item }, "Dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Item, "dup2")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblConstLunchCopy2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstLunchCopy2");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblConstMabarControl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstMabarControl");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Theme)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.ThemeId).HasColumnName("ThemeID");
            });

            modelBuilder.Entity<TblConstMarketingMaagar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstMarketingMaagar");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(200);
            });

            modelBuilder.Entity<TblConstPharmaGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstPharmaGroups");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<TblConstRecStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstRecStatus");

                entity.HasIndex(e => new { e.Id, e.Item }, "IX_tblConstRecStatus")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblConstTaskProcedure>(entity =>
            {
                entity.HasKey(e => e.Key1)
                    .HasName("PK__tblConst__60C21B7B8E3DB0A3");

                entity.ToTable("tblConstTaskProcedures");

                entity.HasIndex(e => e.Id, "UQ__tblConst__3213E83EABBBD6CA")
                    .IsUnique();

                entity.HasIndex(e => e.Id, "UQ__tblConst__3213E83EBF752404")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblConst__9CBB9A4E21E2B41C")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblConst__9CBB9A4E6878AB74")
                    .IsUnique();

                entity.Property(e => e.Key1).HasMaxLength(200);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.WindowKey)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblConstTaskProcedures2>(entity =>
            {
                entity.HasKey(e => e.Key1)
                    .HasName("PK__tblConst__60C21B7BA2C94B55");

                entity.ToTable("tblConstTaskProcedures2");

                entity.HasIndex(e => e.Item, "UQ__tblConst__9CBB9A4E86BD031E")
                    .IsUnique();

                entity.Property(e => e.Key1).HasMaxLength(200);

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.WindowKey)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblConstTipulTheme>(entity =>
            {
                entity.HasKey(e => e.Item);

                entity.ToTable("tblConstTipulTheme");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("ID");
            });

            modelBuilder.Entity<TblConstTipulitGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstTipulitGroups");

                entity.Property(e => e.TipulitName).HasMaxLength(50);
            });

            modelBuilder.Entity<TblConstWorkersKind1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstWorkersKind1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblConstWorkersKind2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstWorkersKind2");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");
            });

            modelBuilder.Entity<TblConstinsulation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblConstinsulation");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .HasMaxLength(80)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblContact>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblContacts");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.ContactTheme).HasDefaultValueSql("('')");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Details).HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KindId).HasColumnName("KindID");

                entity.Property(e => e.MeetYozemId).HasColumnName("MeetYozemID");

                entity.Property(e => e.ParentId).HasColumnName("ParentID");

                entity.Property(e => e.StaffInclude)
                    .HasMaxLength(500)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TStampUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampUpdate");

                entity.Property(e => e.Time1)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblContractDiscount>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblContractDiscount");

                entity.Property(e => e.ContractId).HasColumnName("ContractID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Memo1).HasMaxLength(300);

                entity.Property(e => e.Sum1).HasColumnType("money");
            });

            modelBuilder.Entity<TblContractPayment>(entity =>
            {
                entity.ToTable("tblContractPayment");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ContractId).HasColumnName("ContractID");

                entity.Property(e => e.DatePayPlanned).HasColumnType("datetime");
            });

            modelBuilder.Entity<TblContractsActionLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblContractsActionLog");

                entity.Property(e => e.ContractId).HasColumnName("ContractID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateBefore).HasColumnType("datetime");

                entity.Property(e => e.MadadRateAfter).HasColumnType("money");

                entity.Property(e => e.MadadRateBefore).HasColumnType("money");

                entity.Property(e => e.Memo1).HasMaxLength(100);

                entity.Property(e => e.SumBefore).HasColumnType("money");

                entity.Property(e => e.SumHilut).HasColumnType("money");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.UserCreate)
                    .HasMaxLength(50)
                    .HasColumnName("userCreate");

                entity.Property(e => e.Userid).HasColumnName("userid");
            });

            modelBuilder.Entity<TblContractsHilutToYear>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblContractsHilutToYear");

                entity.Property(e => e.ContractId).HasColumnName("ContractID");

                entity.Property(e => e.HilutPer).HasColumnType("money");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblControlDrugPkudot>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblControlDrugPkudot");

                entity.HasIndex(e => new { e.DrugId, e.FormId }, "Dup")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.DrugId).HasColumnName("DrugID");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblControlForm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblControlForms");

                entity.HasIndex(e => e.FormId, "FormID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ClientId, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasMaxLength(50)
                    .HasComment("תאריך הפתיחה");

                entity.Property(e => e.FormId)
                    .HasColumnName("FormID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("יכול להיות כמה מסכי שליטה");

                entity.Property(e => e.NLine)
                    .HasColumnName("nLine")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לשורה");

                entity.Property(e => e.UserName)
                    .HasMaxLength(50)
                    .HasComment("נפתח  על ידי משתמש");
            });

            modelBuilder.Entity<TblCourseActivity>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblCourseActivities");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.CourseId).HasColumnName("CourseID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.GuideId).HasColumnName("GuideID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblCriterionPhiz>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblCriterionPhiz");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasColumnName("item");
            });

            modelBuilder.Entity<TblDayarimAtRisk>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDayarimAtRisk");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DelReason).HasMaxLength(150);

                entity.Property(e => e.Details).HasMaxLength(500);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.RiskReason).HasMaxLength(500);
            });

            modelBuilder.Entity<TblDefActionKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefActionKind");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(20);
            });

            modelBuilder.Entity<TblDefActionStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefActionStatus");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefAgeMenopause>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefAgeMenopause");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<TblDefAicp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefAICP");

                entity.Property(e => e.Id).HasColumnName("ID");
            });

            modelBuilder.Entity<TblDefAmbulanceKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefAmbulanceKind");

                entity.HasIndex(e => e.Id, "tblDefAmbulanceKind_id_inc_Item")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Email).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefAmbulancePlace>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefAmbulancePlace");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefAmbulanceTarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefAmbulanceTarget");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefAntibiotic>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefAntibiotic_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefAntibiotic");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefArnona>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefArnona_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefArnona");

                entity.HasIndex(e => e.Id, "ID")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Item, "Item")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.PerDiscount).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblDefAvhanaKind>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefAvhanaKind_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefAvhanaKind");

                entity.HasIndex(e => e.Theme, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Code).HasMaxLength(10);

                entity.Property(e => e.Item).HasMaxLength(100);

                entity.Property(e => e.Theme).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefAvhanaMedicineComment>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefAvhanaMedicineComments");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(100)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefAvhanaMiun>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefAvhanaMiun_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefAvhanaMiun");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Subject1).HasColumnType("ntext");
            });

            modelBuilder.Entity<TblDefAvhanaPlace>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefAvhanaPlace_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefAvhanaPlace");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefAvhanotPosition>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefAvhanotPosition");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefAvhanotStatus>(entity =>
            {
                entity.HasKey(e => e.Item);

                entity.ToTable("tblDefAvhanotStatus");

                entity.Property(e => e.Item).HasMaxLength(30);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblDefAvhanotUrgentcy>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefAvhanotUrgentcy");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefBank>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefBanks_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefBanks");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefBdikaYezumaSiudi2>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefBdikaYezumaSiudi-2_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefBdikaYezumaSiudi-2");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefBdikot>(entity =>
            {
                entity.HasKey(e => e.Key1)
                    .HasName("PK__tblDefBdikot__30D918B3");

                entity.ToTable("tblDefBdikot");

                entity.HasIndex(e => new { e.Key1, e.Item }, "IX_tblDefBdikot")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Key1).HasMaxLength(30);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.DinkoKod)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(100);

                entity.Property(e => e.ItemDetails).HasMaxLength(100);

                entity.Property(e => e.MainId).HasColumnName("MainID");

                entity.Property(e => e.Ordid).HasColumnName("ordid");

                entity.Property(e => e.Type).HasDefaultValueSql("((1))");

                entity.Property(e => e.Ym)
                    .HasMaxLength(12)
                    .HasColumnName("YM");
            });

            modelBuilder.Entity<TblDefBdikotDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefBdikotDetails");

                entity.Property(e => e.Dinkod)
                    .IsRequired()
                    .HasColumnName("dinkod")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);

                entity.Property(e => e.MainId).HasColumnName("MainID");
            });

            modelBuilder.Entity<TblDefBdikotDetails3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefBdikotDetails3");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasColumnName("item");

                entity.Property(e => e.Mainid).HasColumnName("mainid");
            });

            modelBuilder.Entity<TblDefBmPlace>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefBmPlace");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(500)
                    .HasColumnName("item");

                entity.Property(e => e.Kod).HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefBmPlaceDesc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefBmPlaceDesc");

                entity.HasIndex(e => new { e.Kod, e.Item }, "item_kod")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(500)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefBmStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefBmStatus");

                entity.HasIndex(e => e.Status, "UQ__tblDefBm__3A15923FE0B10640")
                    .IsUnique();

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefBmmiun>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefBMMiun_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefBMMiun");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BCustom)
                    .HasColumnName("bCustom")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.ListId)
                    .HasColumnType("ntext")
                    .HasColumnName("ListID");

                entity.Property(e => e.OrdId).HasColumnName("ordId");
            });

            modelBuilder.Entity<TblDefBodyPart>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefBodyPart");

                entity.HasIndex(e => e.Item, "item")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<TblDefBodyPlace>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefBodyPlace");

                entity.HasIndex(e => e.Item, "UQ__tblDefBo__9CBB9A4E30C49289")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefCard>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefCards_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefCards");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefCategoryMed>(entity =>
            {
                entity.ToTable("tblDefCategoryMed");

                entity.HasIndex(e => e.Item, "UQ__tblDefCa__9CBB9A4E2177D15D")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("id");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefCategoryMedComp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDefCategoryMed_Comp1");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefCharge>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefCharges_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefCharges");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChargeName).HasMaxLength(50);

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.HatsmadaId).HasColumnName("HatsmadaID");

                entity.Property(e => e.Maham)
                    .HasDefaultValueSql("(1)")
                    .HasComment("האם להוסיף מע\"מ?");

                entity.Property(e => e.UnitId).HasColumnName("UnitID");

                entity.Property(e => e.UnitPrice).HasColumnType("money");
            });

            modelBuilder.Entity<TblDefChargeHatsmadum>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefChargeHatsmada_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefChargeHatsmada");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefChargeName>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefChargeName_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefChargeName");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefChargeUnit>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefChargeUnit_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefChargeUnit");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(20);
            });

            modelBuilder.Entity<TblDefCity>(entity =>
            {
                entity.ToTable("tblDefCity");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefClassDrugsToInvite>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefClassDrugsToInvite_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefClassDrugsToInvite");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefClientComment>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefClientComments");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefClientProperty>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefClientProperties_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefClientProperties");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Archive).HasDefaultValueSql("((0))");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Key1).HasMaxLength(30);

                entity.Property(e => e.MainId)
                    .HasColumnName("MainID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ParentKey).HasMaxLength(20);
            });

            modelBuilder.Entity<TblDefClinic>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefClinics_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefClinics");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefClothe>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefClothes");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefCoin>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefCoin_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefCoin");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IsoKod).HasMaxLength(5);

                entity.Property(e => e.Item).HasMaxLength(25);

                entity.Property(e => e.Sign1).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefConfirmKind>(entity =>
            {
                entity.ToTable("tblDefConfirmKind");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("id");

                entity.Property(e => e.BActive)
                    .IsRequired()
                    .HasColumnName("bActive")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefContactsKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefContactsKind");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefContactsTheme>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefContactsTheme_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefContactsTheme");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefContraception>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefContraception");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).IsRequired();
            });

            modelBuilder.Entity<TblDefControlReport>(entity =>
            {
                entity.ToTable("tblDefControlReports");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefCountry>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefCountry_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefCountry");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefCountryKod>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefCountryKod");

                entity.Property(e => e.Item)
                    .HasMaxLength(600)
                    .HasColumnName("item");

                entity.Property(e => e.Kod).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefCourse>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefCourses");

                entity.Property(e => e.Archive).HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefCulture>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefCulture_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefCulture");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefCycleLength>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefCycleLength");

                entity.HasIndex(e => new { e.Item, e.Bdel }, "Dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<TblDefCycleLength2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefCycleLength2");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id).HasColumnName("id");
            });

            modelBuilder.Entity<TblDefDay>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDays");

                entity.HasIndex(e => e.Item, "UQ__tblDefDa__9CBB9A4EE3415F8C")
                    .IsUnique();

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefDelivery>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDelivery");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).IsRequired();
            });

            modelBuilder.Entity<TblDefDietDrugNotGivenReson>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDietDrugNotGivenResons");

                entity.HasIndex(e => e.Item, "UQ__tblDefDi__9CBB9A4E88C168BB")
                    .IsUnique();

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Mainid).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TblDefDietEstinationReason>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDietEstinationReason");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefDietKalkalaKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDietKalkalaKind");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefDietNutrition>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDietNutrition");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasColumnName("item");

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblDefDietOrder>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDietOrder");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefDietOrder1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDietOrders");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefDietSwallow>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDietSwallow");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefDietTooth>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDietTooth");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefDietTosefetMazon>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDietTosefetMazon");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefDietYerudim>(entity =>
            {
                entity.ToTable("tblDefDietYerudim");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefDiminutionReason>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefDiminutionReasons_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefDiminutionReasons");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefDiurKind>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefDiurKind_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefDiurKind");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.MahlakaKod)
                    .HasDefaultValueSql("(0)")
                    .HasComment("  1-עצמאים, 2-סיעודית");
            });

            modelBuilder.Entity<TblDefDocKeyWord>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefDocKeyWord_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefDocKeyWord");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefDocKind>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefDocKind_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefDocKind");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefDoctor>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefDoctors_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefDoctors");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefDrugAriza>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDrugAriza");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefDrugCapsule>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDrugCapsules");

                entity.Property(e => e.BMl).HasColumnName("bML");

                entity.Property(e => e.BUnits).HasColumnName("bUnits");

                entity.Property(e => e.BWeight).HasColumnName("bWeight");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(15);

                entity.Property(e => e.MinunKind).HasMaxLength(50);

                entity.Property(e => e.SeegnalCode)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TakeKind).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefDrugGeneric>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDrugGeneric");

                entity.Property(e => e.GenericName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.SeegnalCode)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefDrugKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDrugKinds");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefDrugNotGivenReson>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefDrugNotGivenResons");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasColumnName("item");

                entity.Property(e => e.MainId).HasColumnName("mainId");
            });

            modelBuilder.Entity<TblDefDrugStopReson>(entity =>
            {
                entity.ToTable("tblDefDrugStopReson");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefEndometriosi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefEndometriosis");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).IsRequired();
            });

            modelBuilder.Entity<TblDefEnergySubject>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefEnergySubject");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Kod1).HasMaxLength(25);

                entity.Property(e => e.Um)
                    .HasMaxLength(10)
                    .HasColumnName("UM");
            });

            modelBuilder.Entity<TblDefEnterMaslul>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefEnterMaslul_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefEnterMaslul");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BHilutSpec).HasColumnName("bHilutSpec");

                entity.Property(e => e.BMadad).HasColumnName("bMadad");

                entity.Property(e => e.BMaham)
                    .HasColumnName("bMaham")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BasicPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ChargeKod)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Coin1).HasMaxLength(10);

                entity.Property(e => e.Factor)
                    .HasColumnName("factor")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Faktor).HasDefaultValueSql("((0))");

                entity.Property(e => e.HatsmadaId).HasColumnName("HatsmadaID");

                entity.Property(e => e.Hervon).HasColumnType("money");

                entity.Property(e => e.HilutList).HasMaxLength(300);

                entity.Property(e => e.HilutMax).HasColumnName("hilutMax");

                entity.Property(e => e.HilutYear).HasMaxLength(5);

                entity.Property(e => e.Item).HasMaxLength(255);

                entity.Property(e => e.Kod1).HasMaxLength(4);

                entity.Property(e => e.ListId)
                    .HasColumnName("ListID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.NKind)
                    .HasColumnName("nKind")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה למחירון האם זה סיעדוי רגיל או תשוש");

                entity.Property(e => e.Name1).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefEnterStatus>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefEnterStatus_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefEnterStatus");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AirCond)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם יש מזגן");

                entity.Property(e => e.BDbl)
                    .HasColumnName("bDBL")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם זה מיועד לזוג או ליחיד");

                entity.Property(e => e.BSafe)
                    .HasColumnName("bSafe")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם זה מיועד לדיור מוגן");

                entity.Property(e => e.BTwoBeds)
                    .HasColumnName("bTwoBeds")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם הסטאטוס מתאים לשתי מיטות");

                entity.Property(e => e.BasicPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Item).HasMaxLength(255);

                entity.Property(e => e.ListId)
                    .HasColumnName("ListID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NKind)
                    .HasColumnName("nKind")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה למחירון האם זה סיעדוי רגיל או תשוש");
            });

            modelBuilder.Entity<TblDefEquipment>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefEquipment");

                entity.HasIndex(e => e.Item, "dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(100)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefEventKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefEventKind");

                entity.HasIndex(e => new { e.Item, e.Mainid }, "IX_tblDefEventKind")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefEventKindMain>(entity =>
            {
                entity.ToTable("tblDefEventKindMain");

                entity.HasIndex(e => new { e.Item, e.Bdel }, "dup")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Item, "item")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("id");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Item)
                    .HasMaxLength(200)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefEventPlace>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefEventPlace");

                entity.HasIndex(e => e.Item, "IX_tblDefEventPlace")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefEventReason>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefEventReason");

                entity.HasIndex(e => e.Item, "IX_tblDefEventReason")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefEventResult>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefEventResults");

                entity.HasIndex(e => e.Item, "IX_blDefEventResults")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefEventState>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefEventState");

                entity.HasIndex(e => e.Item, "IX_tblDefEventState")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.OrdId).HasColumnName("OrdID");
            });

            modelBuilder.Entity<TblDefExitReason>(entity =>
            {
                entity.HasKey(e => e.Item)
                    .HasName("PK__tblDefExitReason__5DABBF2A");

                entity.ToTable("tblDefExitReason");

                entity.Property(e => e.Item).HasMaxLength(100);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<TblDefExitTarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefExitTarget");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefExitTransferKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefExitTransferKind");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefFabric>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFabric");

                entity.Property(e => e.Archive).HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasColumnName("item");

                entity.Property(e => e.Item2)
                    .IsRequired()
                    .HasColumnName("item2")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefFabricMenu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFabricMenu");

                entity.HasIndex(e => e.Item, "UQ__tblDefFa__9CBB9A4E48EC2556")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<TblDefFabricMenuComp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDefFabricMenu_Comp1");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<TblDefFamilyStatus>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefFamilyStatus_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefFamilyStatus");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefFeedMethod>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFeedMethod");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefFertility>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFertility");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).IsRequired();
            });

            modelBuilder.Entity<TblDefFiver>(entity =>
            {
                entity.ToTable("tblDefFiver");

                entity.HasIndex(e => e.Item, "UQ__tblDefFi__9CBB9A4E68B57FAC")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefFolderKind>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefFolderKind_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefFolderKind");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(20);
            });

            modelBuilder.Entity<TblDefFolderStatus>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefFolderStatus_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefFolderStatus");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(15);
            });

            modelBuilder.Entity<TblDefFolderTheme>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefFolderTheme_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefFolderTheme");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefFollowSubject>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFollowSubject");

                entity.HasIndex(e => new { e.Val1, e.FollowId }, "tblDefFollowSubject_Val1_FollowID_inc_Item")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FollowId).HasColumnName("FollowID");

                entity.Property(e => e.FollowKey).HasMaxLength(200);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);

                entity.Property(e => e.OrderId).HasColumnName("OrderID");
            });

            modelBuilder.Entity<TblDefFollowUpKey>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFollowUpKeys");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(150);

                entity.Property(e => e.Key1)
                    .HasMaxLength(50)
                    .HasColumnName("key1");

                entity.Property(e => e.Subject1).HasMaxLength(50);

                entity.Property(e => e.Subject2).HasMaxLength(50);

                entity.Property(e => e.Subject3).HasMaxLength(50);

                entity.Property(e => e.Ym)
                    .HasMaxLength(50)
                    .HasColumnName("YM");
            });

            modelBuilder.Entity<TblDefFollowUpSubject>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefFollowUpSubject_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefFollowUpSubject");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.FrmTyp).HasDefaultValueSql("(0)");

                entity.Property(e => e.Item)
                    .HasMaxLength(100)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefFood>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFoods");

                entity.Property(e => e.BAddings)
                    .HasColumnName("bAddings")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BChoose)
                    .HasColumnName("bChoose")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FoodName).HasMaxLength(100);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Quantity).HasMaxLength(50);

                entity.Property(e => e.Unit).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefFoodAdding>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFoodAddings");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefFoodFollow>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFoodFollow");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LunchIds)
                    .HasMaxLength(10)
                    .IsFixedLength(true);

                entity.Property(e => e.Name1).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefFoodKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFoodKind");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TblDefFoodMenu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFoodMenus");

                entity.Property(e => e.FoodInclude)
                    .HasMaxLength(500)
                    .HasColumnName("foodInclude");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LunchId).HasMaxLength(50);

                entity.Property(e => e.MenuName).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefFoodMenusName>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFoodMenusName");

                entity.Property(e => e.ClientId)
                    .HasColumnName("clientId")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefFoodMethod>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFoodMethod");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefFoodParam>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFoodParam");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefFoodUnit>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFoodUnits");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefFormPopUp>(entity =>
            {
                entity.HasKey(e => e.Id1)
                    .HasName("aaaaatblDefFormPopUp_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefFormPopUp");

                entity.HasIndex(e => e.FormId, "FormID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id1).HasColumnName("ID1");

                entity.Property(e => e.Class1)
                    .HasMaxLength(10)
                    .HasComment("שדה מקושר");

                entity.Property(e => e.FormId)
                    .HasColumnName("FormID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("טופס");

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(255);
            });

            modelBuilder.Entity<TblDefFuncGphizio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefFuncGPhizio");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Item).IsRequired();

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefGanJob>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefGanJob");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefGanKind1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefGanKind1");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefGanKind2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefGanKind2");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefGeneralKnowledge>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefGeneralKnowledge_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefGeneralKnowledge");

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefGflow>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefGFlow");

                entity.HasIndex(e => new { e.Item, e.Bdel }, "Dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<TblDefGhtreatment>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefGHTreatments");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).IsRequired();
            });

            modelBuilder.Entity<TblDefGivingManner>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefGivingManner");

                entity.HasIndex(e => e.Item, "UQ__tblDefGi__9CBB9A4EDA735A3F")
                    .IsUnique();

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.TableName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefGivingMannerComp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDefGivingManner_Comp1");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.TableName)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefGivingWay>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefGivingWay");

                entity.HasIndex(e => e.Item, "UQ__tblDefGi__9CBB9A4E2D08827C")
                    .IsUnique();

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefGivingWayComp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDefGivingWay_comp1");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefGoremMafne>(entity =>
            {
                entity.ToTable("tblDefGoremMafne");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefGpm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefGPMS");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).IsRequired();
            });

            modelBuilder.Entity<TblDefGrtype>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefGRType");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefGsymptom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefGSymptoms");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).IsRequired();
            });

            modelBuilder.Entity<TblDefHarshahMain>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefHarshahMain");

                entity.HasIndex(e => e.Kind2Id, "Kind2ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BgColor).HasDefaultValueSql("((-1))");

                entity.Property(e => e.BgColorList).HasDefaultValueSql("((-1))");

                entity.Property(e => e.CaptionColor).HasDefaultValueSql("((-1))");

                entity.Property(e => e.EnterScreen).HasDefaultValueSql("((0))");

                entity.Property(e => e.FontName).HasMaxLength(50);

                entity.Property(e => e.FontSize).HasMaxLength(10);

                entity.Property(e => e.Harshah)
                    .HasColumnType("ntext")
                    .HasComment("רשימת ההרשאות משורשרת עם ;");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Kind1Id)
                    .HasColumnName("Kind1ID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Kind2Id)
                    .HasColumnName("Kind2ID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ProfileMedical)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ProfileReminders).HasMaxLength(200);

                entity.Property(e => e.TextColorForms).HasDefaultValueSql("((-1))");

                entity.Property(e => e.TextColorList).HasDefaultValueSql("((-1))");

                entity.Property(e => e.ToolbarKeys).HasMaxLength(1000);
            });

            modelBuilder.Entity<TblDefHarshahModule>(entity =>
            {
                entity.HasKey(e => e.HarshahKey);

                entity.ToTable("tblDefHarshahModules");

                entity.HasIndex(e => e.HarshahKey, "IX_tblDefHarshahModules")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.HarshahKey, "IndexHarshahKey")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.HarshahKey).HasMaxLength(50);

                entity.Property(e => e.AppId).HasColumnName("AppID");

                entity.Property(e => e.Icon).HasMaxLength(20);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Iid)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("iid");

                entity.Property(e => e.InHarshah).HasColumnName("inHarshah");

                entity.Property(e => e.InMenu).HasColumnName("inMenu");

                entity.Property(e => e.InToolbar).HasColumnName("inToolbar");

                entity.Property(e => e.Item).HasMaxLength(300);

                entity.Property(e => e.ThemeKey).HasMaxLength(20);

                entity.Property(e => e.ToolTip).HasMaxLength(50);

                entity.Property(e => e.ViewKind).HasMaxLength(20);
            });

            modelBuilder.Entity<TblDefHarshahModulesTheme>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefHarshahModulesThemes_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefHarshahModulesThemes");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Key1, "IX_tblDefHarshahModulesThemes")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Key1, "Key")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Color2).HasColumnName("color2");

                entity.Property(e => e.IsInclude)
                    .HasDefaultValueSql("((0))")
                    .HasComment("האם הוא כלול בגירסה?");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasComment("שם המודול");

                entity.Property(e => e.Key1).HasMaxLength(20);
            });

            modelBuilder.Entity<TblDefHatsmadum>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefHatsmada_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefHatsmada");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(25);
            });

            modelBuilder.Entity<TblDefHergelim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefHergelim");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefHobby>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefHobby_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefHobby");

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefHospStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefHospStatus");

                entity.HasIndex(e => new { e.Id, e.Item }, "NonClusteredIndex-20191106-125151")
                    .IsUnique();

                entity.HasIndex(e => e.Id, "NonClusteredIndex-20191106-125256")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "NonClusteredIndex-20191106-125310")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefHrt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefHRT");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).IsRequired();
            });

            modelBuilder.Entity<TblDefHtmlCnt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefHtmlCnt");

                entity.Property(e => e.ClsName).HasMaxLength(30);

                entity.Property(e => e.DPoint).HasColumnName("dPoint");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.OrdId).HasColumnName("OrdID");

                entity.Property(e => e.STmp)
                    .HasMaxLength(40)
                    .HasColumnName("sTmp");

                entity.Property(e => e.STmp2)
                    .HasColumnType("ntext")
                    .HasColumnName("sTmp2");

                entity.Property(e => e.TypFormId).HasColumnName("TypFormID");

                entity.Property(e => e.TypFormId2).HasColumnName("TypFormID2");
            });

            modelBuilder.Entity<TblDefHtmlCnt2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefHtmlCnt2");

                entity.HasIndex(e => new { e.ClsName, e.LocationId, e.BArchive }, "IX_tblDefHtmlCnt2")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.Val1, e.ClsName, e.Caption1, e.OrdId }, "IX_tblDefHtmlCnt2_")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.Val1, e.ClsName, e.Caption1 }, "dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.Caption1).HasMaxLength(1000);

                entity.Property(e => e.ClsName).HasMaxLength(80);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.OrdId).HasColumnName("OrdID");
            });

            modelBuilder.Entity<TblDefHtmlCnt2Nah>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefHtmlCnt2NAH");

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.Caption1).HasMaxLength(1000);

                entity.Property(e => e.ClsName).HasMaxLength(80);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.OrdId).HasColumnName("OrdID");
            });

            modelBuilder.Entity<TblDefHtmlCnt2nisayon>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefHtmlCnt2nisayon");

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.Caption1).HasMaxLength(1000);

                entity.Property(e => e.ClsName).HasMaxLength(80);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.OrdId).HasColumnName("OrdID");
            });

            modelBuilder.Entity<TblDefHtmlFormsWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDefHtmlForms_Web");

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.BMain).HasColumnName("bMain");

                entity.Property(e => e.FormKey)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.FormProc)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.GroupKey)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Harsha)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.NPointAll).HasColumnName("nPointAll");

                entity.Property(e => e.NType).HasColumnName("nType");

                entity.Property(e => e.PrAfterLock)
                    .IsRequired()
                    .HasColumnName("pr_AfterLock");

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");
            });

            modelBuilder.Entity<TblDefHtmlSkira>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefHtmlSkira");

                entity.HasIndex(e => e.Archive, "IX_tblDefHtmlSkira_Archive")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.Archive, e.Key1 }, "IX_tblDefHtmlSkira_Archive_Key1")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.Archive, e.ParentKey }, "IX_tblDefHtmlSkira_Archive_ParentKey")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Key1, "IX_tblDefHtmlSkira_Key1")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BEndSec).HasColumnName("bEndSec");

                entity.Property(e => e.BMemo).HasColumnName("bMemo");

                entity.Property(e => e.Cap1).HasMaxLength(150);

                entity.Property(e => e.Cap1Eng)
                    .HasMaxLength(150)
                    .HasColumnName("cap1_Eng");

                entity.Property(e => e.Cap1Heb)
                    .HasMaxLength(150)
                    .HasColumnName("cap1_Heb");

                entity.Property(e => e.HarshaKey)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("harshaKey")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Htmlsrc).HasColumnType("ntext");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Img1)
                    .IsRequired()
                    .HasColumnName("img1")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Key1).HasMaxLength(200);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.OHeader).HasColumnName("oHeader");

                entity.Property(e => e.OHeaderCap)
                    .HasMaxLength(30)
                    .HasColumnName("oHeaderCap");

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.Param1)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ParentKey).HasMaxLength(50);

                entity.Property(e => e.SType)
                    .HasMaxLength(50)
                    .HasColumnName("sType");

                entity.Property(e => e.Subject1).HasMaxLength(150);
            });

            modelBuilder.Entity<TblDefHtmlVal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefHtmlVals");

                entity.HasIndex(e => new { e.Item, e.ClsName }, "IX_tblDefHtmlVals")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BDef).HasColumnName("bDef");

                entity.Property(e => e.ClsName)
                    .HasMaxLength(40)
                    .HasColumnName("clsName");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Item).HasMaxLength(150);

                entity.Property(e => e.OParent).HasColumnName("oParent");

                entity.Property(e => e.TypFormId)
                    .HasColumnName("TypFormID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblDefHypomenorrhea>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefHypomenorrhea");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).IsRequired();
            });

            modelBuilder.Entity<TblDefIndex>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefIndices");

                entity.HasIndex(e => e.Key1, "UQ__tblDefIn__2B3B2193B9781A18")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblDefIn__99B8822A1C8F452A")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(400)
                    .HasColumnName("item")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(400)
                    .HasColumnName("key1")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefInfecKindStand>(entity =>
            {
                entity.ToTable("tblDefInfecKindStand");

                entity.HasIndex(e => e.Item, "UQ__tblDefIn__99B8822A56E1280F")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("id");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefInfectBmddate>(entity =>
            {
                entity.ToTable("tblDefInfectBMDDate");

                entity.HasIndex(e => e.Item, "UQ__tblDefIn__99B8822A7C47B6E8")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("id");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefInfectionFinding>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefInfectionFindings");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .HasMaxLength(80)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefInfectionIshpuz>(entity =>
            {
                entity.ToTable("tblDefInfectionIshpuz");

                entity.HasIndex(e => e.Name, "UQ__tblDefIn__737584F66B1D2AE6")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("id");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Name).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefInfectionSikor>(entity =>
            {
                entity.ToTable("tblDefInfectionSikor");

                entity.HasIndex(e => e.Name, "UQ__tblDefIn__737584F6637C091E")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("id");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Name).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefInfectionStatus>(entity =>
            {
                entity.ToTable("tblDefInfectionStatus");

                entity.HasIndex(e => e.Name, "UQ__tblDefIn__737584F672BE4CAE")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("id");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Name).HasMaxLength(100);

                entity.Property(e => e.NotChoose).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblDefInfluencePain>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefInfluencePain");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(20)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefInfusion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefInfusion");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefItemFuncGuide>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefItemFuncGuide");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Item).IsRequired();

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefJob>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefJob_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefJob");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefKindSolution>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefKindSolution");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(10);
            });

            modelBuilder.Entity<TblDefKindTipulim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefKindTipulim");

                entity.HasIndex(e => e.Item, "UQ__tblDefKi__9CBB9A4EFFEA6603")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefKirva>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefKirva_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefKirva");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(20);

                entity.Property(e => e.ItemEng)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefKod17>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefKod17");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kod1).HasMaxLength(50);

                entity.Property(e => e.KodDesc).HasMaxLength(50);

                entity.Property(e => e.Price1).HasColumnType("money");

                entity.Property(e => e.SapakId).HasColumnName("SapakID");
            });

            modelBuilder.Entity<TblDefKod17Price>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefKod17Price");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Kod1).HasMaxLength(50);

                entity.Property(e => e.Price1).HasColumnType("money");

                entity.Property(e => e.SapakId).HasColumnName("SapakID");
            });

            modelBuilder.Entity<TblDefKomot>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefKomot_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefKomot");

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefKupa>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefKupa_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefKupa");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefKupaSnif>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefKupaSnif_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefKupaSnif");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Fax)
                    .HasMaxLength(15)
                    .HasColumnName("fax");

                entity.Property(e => e.Item).HasMaxLength(100);

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.Phone)
                    .HasMaxLength(15)
                    .HasColumnName("phone");
            });

            modelBuilder.Entity<TblDefKupaTikra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefKupaTikra");

                entity.Property(e => e.KupaId)
                    .HasColumnName("KupaID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("1,2 לאומית 3,4, כללית 5,6, מכבי 7,8, מאוחדת");

                entity.Property(e => e.KupaSumMonth).HasDefaultValueSql("(0)");

                entity.Property(e => e.KupaTikra).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblDefLanguage>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefLanguage_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefLanguage");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefLastRoomCardex>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefLastRoomCardex");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.RoomId)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RoomName)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefLeaveKind>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefLeaveKind_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefLeaveKind");

                entity.HasIndex(e => e.Id, "קוד")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(255);
            });

            modelBuilder.Entity<TblDefLockForm>(entity =>
            {
                entity.ToTable("tblDefLockForm");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FormName).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefLogWatch>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefLogWatch");

                entity.HasIndex(e => e.Key1, "UQ__tblDefLo__60C21B7A2983BD60")
                    .IsUnique();

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefMadadim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefMadadim");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblDefMahamKind>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefMahamKind_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefMahamKind");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefMahlaka>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefMahlaka_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefMahlaka");

                entity.HasIndex(e => e.MahlakaKindId, "MahlakaKindID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Active)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם ישנה מחלקה זו בבית ההורים");

                entity.Property(e => e.BNoMadad).HasColumnName("bNoMadad");

                entity.Property(e => e.CarsexSign).HasDefaultValueSql("((0))");

                entity.Property(e => e.DefaultRoomId).HasColumnName("DefaultRoomID");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Fax)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.LocationId).HasColumnName("locationID");

                entity.Property(e => e.MabarId)
                    .HasColumnName("MabarID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מקושר למחלקה במב\"ר: גריאטריה סיעודית=3 , לפי דוח מב\"ר 105 ב'");

                entity.Property(e => e.MabarId2)
                    .HasMaxLength(12)
                    .HasColumnName("MabarID2");

                entity.Property(e => e.MabarKod)
                    .HasMaxLength(10)
                    .HasColumnName("mabarKod");

                entity.Property(e => e.MacKod).HasColumnName("macKod");

                entity.Property(e => e.MahlakaKindId)
                    .HasColumnName("MahlakaKindID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.MahlakaManager)
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MainDoctor)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MainNurse).HasMaxLength(50);

                entity.Property(e => e.MitotTeken)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מס' מיטות בתקן");

                entity.Property(e => e.Phone)
                    .HasMaxLength(20)
                    .HasColumnName("phone");

                entity.Property(e => e.PriorityId).HasColumnName("PriorityID");

                entity.Property(e => e.Prop1).HasColumnName("prop1");

                entity.Property(e => e.RefueeManager).HasMaxLength(50);

                entity.Property(e => e.SmsLinkMahlaka)
                    .IsRequired()
                    .HasColumnName("smsLinkMahlaka")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Workers).HasMaxLength(500);
            });

            modelBuilder.Entity<TblDefMahlakaMabar>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefMahlakaMabar_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefMahlakaMabar");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefMahlakaOvdim>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefMahlakaOvdim_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefMahlakaOvdim");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefMahoz>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefMahoz1_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefMahoz");

                entity.HasIndex(e => e.Kod, "IX_tblDefMahoz")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.Kod, e.Item }, "IX_tblDefMahoz1")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Kod).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblDefMahozToDell>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefMahoz_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefMahozToDell");

                entity.HasIndex(e => e.Kod, "Kod")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Kod).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblDefMainKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefMainKind");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefMainMahlaka>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefMainMahlaka");

                entity.HasIndex(e => e.Item, "UQ__tblDefMa__99B8822A6761A89B")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(100)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefMaintenanceLevel>(entity =>
            {
                entity.HasKey(e => e.Item)
                    .HasName("PK__tblDefMaintenanc__4FE7AFB8");

                entity.ToTable("tblDefMaintenanceLevel");

                entity.Property(e => e.Item).HasMaxLength(30);

                entity.Property(e => e.Id).HasColumnName("ID");
            });

            modelBuilder.Entity<TblDefMaintenanceMiun>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefMaintenanceMiun_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefMaintenanceMiun");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .HasMaxLength(255)
                    .HasColumnName("item")
                    .HasComment("קבוצה לתקלות");

                entity.Property(e => e.MainKind)
                    .HasMaxLength(20)
                    .HasColumnName("mainKind");
            });

            modelBuilder.Entity<TblDefMaslulService>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefMaslulService");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");
            });

            modelBuilder.Entity<TblDefMedBituah>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefMedBituah_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefMedBituah");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefMedSign>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefMedSigns_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefMedSigns");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Key1).HasMaxLength(20);
            });

            modelBuilder.Entity<TblDefMedTnuot>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefMedTnuot_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefMedTnuot");

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefMedadimMinMax>(entity =>
            {
                entity.ToTable("tblDefMedadimMinMax");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MadadName).HasMaxLength(50);

                entity.Property(e => e.Max).HasDefaultValueSql("((0))");

                entity.Property(e => e.Max1).HasColumnName("max1");

                entity.Property(e => e.Min).HasDefaultValueSql("((0))");

                entity.Property(e => e.Min1).HasColumnName("min1");
            });

            modelBuilder.Entity<TblDefMedahTheme>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefMedahTheme_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefMedahTheme");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefMedicalGroup>(entity =>
            {
                entity.HasKey(e => e.Item)
                    .HasName("PK__tblDefMedicalGro__40A56C28");

                entity.ToTable("tblDefMedicalGroups");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Sector)
                    .HasMaxLength(100)
                    .HasColumnName("SECTOR");
            });

            modelBuilder.Entity<TblDefMedicalImg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefMedicalImg");

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<TblDefMedicalTaskTheme>(entity =>
            {
                entity.ToTable("tblDefMedicalTaskThemes");

                entity.HasIndex(e => e.Key1, "UQ__tblDefMe__60C21B7AD7A973AB")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblDefMe__9CBB9A4E9A168B13")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.ActionSubSql)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.WindowKey)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefMedicalTaskThemes1>(entity =>
            {
                entity.ToTable("tblDefMedicalTaskThemes1");

                entity.HasIndex(e => new { e.Item, e.Key1 }, "PK_tblDefMedicalTaskThemes_item_key")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Key1).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefMedicalTaskThemesBalev>(entity =>
            {
                entity.ToTable("tblDefMedicalTaskThemesBalev");

                entity.HasIndex(e => e.Key1, "UQ__tblDefMe__60C21B7ADBB1303E")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblDefMe__9CBB9A4EF5AC1BA2")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.ActionSubSql)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.WindowKey)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefMedicalTaskThemesBalev1>(entity =>
            {
                entity.ToTable("tblDefMedicalTaskThemesBalev1");

                entity.HasIndex(e => e.Key1, "UQ__tblDefMe__60C21B7AE0DDF49D")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblDefMe__9CBB9A4E59DBEC61")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.ActionSubSql)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.WindowKey)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefMedicalTaskThemesHatichon>(entity =>
            {
                entity.ToTable("tblDefMedicalTaskThemesHatichon");

                entity.HasIndex(e => e.Key1, "UQ__tblDefMe__60C21B7A87DB9FD6")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblDefMe__9CBB9A4EC17C5D4B")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.ActionSubSql)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.WindowKey)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefMedicalTaskThemesHerzog>(entity =>
            {
                entity.ToTable("tblDefMedicalTaskThemesHerzog");

                entity.HasIndex(e => e.Key1, "UQ__tblDefMe__60C21B7AB6930E90")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblDefMe__9CBB9A4E687B6098")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.ActionSubSql)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.WindowKey)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefMedicalTaskThemesReuth>(entity =>
            {
                entity.ToTable("tblDefMedicalTaskThemesReuth");

                entity.HasIndex(e => e.Key1, "UQ__tblDefMe__60C21B7A87F09298")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblDefMe__9CBB9A4EFCA5FE3F")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.ActionSubSql)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.WindowKey)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefMelayOutDest>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefMelayOutDest_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefMelayOutDest");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefMenuKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefMenuKind");

                entity.HasIndex(e => e.Item, "UQ__tblDefMe__9CBB9A4EC318E784")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<TblDefMenue>(entity =>
            {
                entity.ToTable("tblDefMenues");

                entity.Property(e => e.Id).HasColumnName("ID");
            });

            modelBuilder.Entity<TblDefMiniMentalRule>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefMiniMentalRules");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<TblDefMirkamKalkala>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefMirkamKalkala");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefMishmeret>(entity =>
            {
                entity.ToTable("tblDefMishmeret");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.FromTime).HasMaxLength(10);

                entity.Property(e => e.Item).HasMaxLength(15);

                entity.Property(e => e.ToTime).HasMaxLength(10);
            });

            modelBuilder.Entity<TblDefMobileImg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefMobileImg");

                entity.HasIndex(e => e.Item, "ClusteredIndex-20150526-092413")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<TblDefMonth>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefMonth");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item).HasColumnName("item");
            });

            modelBuilder.Entity<TblDefMosadIshpuz>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefMosadIshpuz_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefMosadIshpuz");

                entity.HasIndex(e => e.Kod, "Kod")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(255);

                entity.Property(e => e.Kod).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblDefNehalim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNehalim");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Category).HasMaxLength(50);

                entity.Property(e => e.DateUpdate).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Kind1).HasMaxLength(20);

                entity.Property(e => e.Name1).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefNumPb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNumPB");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<TblDefNursePlanAeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursePlanAEB");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Item).HasMaxLength(200);

                entity.Property(e => e.OrdId)
                    .HasMaxLength(50)
                    .HasColumnName("OrdID");

                entity.Property(e => e.TypFormId)
                    .HasColumnName("TypFormID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblDefNursePlanNoc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursePlanNOC");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Item).HasMaxLength(200);

                entity.Property(e => e.OrdId)
                    .HasMaxLength(50)
                    .HasColumnName("OrdID");

                entity.Property(e => e.TypFormId)
                    .HasColumnName("TypFormID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblDefNursePlanRt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursePlanRT");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Item).HasMaxLength(200);

                entity.Property(e => e.OrdId)
                    .HasMaxLength(50)
                    .HasColumnName("OrdID");

                entity.Property(e => e.TypFormId)
                    .HasColumnName("TypFormID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblDefNursingPlansEtiology>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlansEtiology");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.KindKey).HasMaxLength(20);

                entity.Property(e => e.MainId).HasColumnName("MainID");
            });

            modelBuilder.Entity<TblDefNursingPlansImmed>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlansImmed");

                entity.HasIndex(e => e.Id, "UQ__tblDefNu__3213E83E7A0A68BB")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefNursingPlansNeotEtiology>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlans_neot_Etiology");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.KindKey).HasMaxLength(20);

                entity.Property(e => e.MainId).HasColumnName("MainID");
            });

            modelBuilder.Entity<TblDefNursingPlansNeotImmed>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlans_neot_Immed");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefNursingPlansNeotProblem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlans_neot_Problems");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);

                entity.Property(e => e.MainId).HasColumnName("MainID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.Userid).HasColumnName("userid");
            });

            modelBuilder.Entity<TblDefNursingPlansNeotProblemsEng>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlans_neot_Problems_ENG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(150);

                entity.Property(e => e.MainId).HasColumnName("MainID");
            });

            modelBuilder.Entity<TblDefNursingPlansNeotResult>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlans_neot_Results");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.KindKey).HasMaxLength(20);
            });

            modelBuilder.Entity<TblDefNursingPlansNeotSymptom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlans_neot_Symptoms");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.KindKey).HasMaxLength(20);

                entity.Property(e => e.MainId).HasColumnName("MainID");
            });

            modelBuilder.Entity<TblDefNursingPlansNeotTarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlans_neot_Targets");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.KindKey).HasMaxLength(20);

                entity.Property(e => e.MainId).HasColumnName("MainID");
            });

            modelBuilder.Entity<TblDefNursingPlansNeotTheme>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlans_neot_Themes");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);

                entity.Property(e => e.KindKey).HasMaxLength(20);
            });

            modelBuilder.Entity<TblDefNursingPlansNeotThemesEng>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlans_neot_Themes_ENG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefNursingPlansNeotTipulim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlans_neot_Tipulim");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);

                entity.Property(e => e.KindKey).HasMaxLength(20);

                entity.Property(e => e.MainId).HasColumnName("MainID");

                entity.Property(e => e.ThemeId).HasColumnName("ThemeID");
            });

            modelBuilder.Entity<TblDefNursingPlansProblem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlansProblems");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);

                entity.Property(e => e.MainId).HasColumnName("MainID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Userid).HasColumnName("userid");
            });

            modelBuilder.Entity<TblDefNursingPlansProblemsEng>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlansProblems_ENG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(150);

                entity.Property(e => e.MainId).HasColumnName("MainID");
            });

            modelBuilder.Entity<TblDefNursingPlansResult>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlansResults");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KindKey).HasMaxLength(20);
            });

            modelBuilder.Entity<TblDefNursingPlansSymptom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlansSymptoms");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.KindKey).HasMaxLength(20);

                entity.Property(e => e.MainId).HasColumnName("MainID");
            });

            modelBuilder.Entity<TblDefNursingPlansTarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlansTargets");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.KindKey).HasMaxLength(20);

                entity.Property(e => e.MainId).HasColumnName("MainID");
            });

            modelBuilder.Entity<TblDefNursingPlansTheme>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlansThemes");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);

                entity.Property(e => e.KindKey).HasMaxLength(20);
            });

            modelBuilder.Entity<TblDefNursingPlansThemesEng>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlansThemes_ENG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefNursingPlansTipulim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefNursingPlansTipulim");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Id1).HasColumnName("ID1");

                entity.Property(e => e.Item).HasMaxLength(100);

                entity.Property(e => e.KindKey).HasMaxLength(20);

                entity.Property(e => e.MainId).HasColumnName("MainID");

                entity.Property(e => e.ThemeId).HasColumnName("ThemeID");
            });

            modelBuilder.Entity<TblDefObjectsToPcdisease>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefObjectsToPCdiseases");

                entity.HasIndex(e => e.Item, "item")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<TblDefParamFollow>(entity =>
            {
                entity.HasKey(e => e.Item);

                entity.ToTable("tblDefParamFollow");

                entity.HasIndex(e => e.Key1, "tblDefParamFollow")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Item).HasMaxLength(70);

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1).HasMaxLength(15);

                entity.Property(e => e.Max1).HasDefaultValueSql("((0))");

                entity.Property(e => e.Min1).HasDefaultValueSql("((0))");

                entity.Property(e => e.Ym1)
                    .HasMaxLength(10)
                    .HasColumnName("YM1");
            });

            modelBuilder.Entity<TblDefParitMiun>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefParitMiun_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefParitMiun");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BCharge)
                    .HasColumnName("bCharge")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HeshIn).HasMaxLength(6);

                entity.Property(e => e.HeshOut).HasMaxLength(6);

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefParitUnit>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefParitUnit_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefParitUnit");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(20);
            });

            modelBuilder.Entity<TblDefPayGroup>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefPayGroup_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefPayGroup");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefPayLimit>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefPayLimits_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefPayLimits");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefPayMethod>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefPayMethod");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.HeshId)
                    .HasMaxLength(20)
                    .HasColumnName("HeshID");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(20);

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.Locationid).HasColumnName("locationid");

                entity.Property(e => e.NKind).HasColumnName("nKind");
            });

            modelBuilder.Entity<TblDefPayTheme>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefPayTheme_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefPayTheme");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefPeliative>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefPeliative");

                entity.Property(e => e.Clsname)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("clsname");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .HasMaxLength(30)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefPharmaGroup>(entity =>
            {
                entity.ToTable("tblDefPharmaGroups");

                entity.HasIndex(e => e.Item, "UQ__tblDefPh__9CBB9A4E3DAC3EB0")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(300);
            });

            modelBuilder.Entity<TblDefPhizioMonthGroupActivty>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefPhizioMonthGroupActivties");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblDefPhizioMonthIndividualActivity>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefPhizioMonthIndividualActivities");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefPhizioMonthKindInstruction>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefPhizioMonthKindInstructions");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefPhizioMonthLevelParticipation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefPhizioMonthLevelParticipation");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblDefPhizioMonthReasonChange>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefPhizioMonthReasonChange");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefPhizioMonthSocialInteraction>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefPhizioMonthSocialInteraction");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefPhizioMonthUpperLimb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefPhizioMonthUpperLimb");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefPhyzicalState>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefPhyzicalState");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefPlanNursingNic>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefPlanNursingNIC");

                entity.Property(e => e.Action1).HasMaxLength(100);

                entity.Property(e => e.Caption1).HasMaxLength(50);

                entity.Property(e => e.Drug1).HasMaxLength(255);

                entity.Property(e => e.FormId)
                    .HasColumnName("FormID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Frq1).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblDefPregnancy>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefPregnancy");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).IsRequired();
            });

            modelBuilder.Entity<TblDefQuantityRoom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefQuantityRoom");

                entity.HasIndex(e => new { e.Item, e.Bdel }, "ID")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblDefReason>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefReason");

                entity.HasIndex(e => new { e.Item, e.Val, e.Bdel }, "KK")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.Item, e.Bdel }, "dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(200)
                    .HasColumnName("item");

                entity.Property(e => e.Val).HasColumnName("val");
            });

            modelBuilder.Entity<TblDefReasonDup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefReasonDup");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(200)
                    .HasColumnName("item");

                entity.Property(e => e.Val).HasColumnName("val");
            });

            modelBuilder.Entity<TblDefReasonEditFollow>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefReasonEditFollow");

                entity.HasIndex(e => new { e.Item, e.FollowId }, "Dup")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefRecommendationClinic>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefRecommendationClinic");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<TblDefRegishut>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefRegishut_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefRegishut");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefReligion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefReligion");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Eng).HasMaxLength(20);

                entity.Property(e => e.Heb).HasMaxLength(20);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<TblDefRequestKind>(entity =>
            {
                entity.HasKey(e => e.Item)
                    .HasName("PK__tblDefRequestKin__274FAE79");

                entity.ToTable("tblDefRequestKind");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<TblDefRespCoughLex>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefRespCoughLex");

                entity.HasIndex(e => e.Item, "Dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(200)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefRespLevelSup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefRespLevelSup");

                entity.HasIndex(e => e.Item, "Dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(200)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefRespMachine>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefRespMachine");

                entity.HasIndex(e => e.Item, "Dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(200)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefRespMethod>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefRespMethod");

                entity.HasIndex(e => e.Item, "Dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(200)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefRespQuantityProv>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefRespQuantityProv");

                entity.HasIndex(e => e.Item, "Dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(200)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefRespStatusG>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefRespStatusG");

                entity.HasIndex(e => e.Item, "Dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(200)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblDefRevahCaption>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefRevahCaption_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefRevahCaption");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefRoomClass>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefRoomClass_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefRoomClass");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefRoomMaslul>(entity =>
            {
                entity.ToTable("tblDefRoomMaslul");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TStampUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampUpdate")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblDefRoomOwner>(entity =>
            {
                entity.ToTable("tblDefRoomOwner");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TStampUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampUpdate")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblDefRoomProperty>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefRoomProperties_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefRoomProperties");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefSato>(entity =>
            {
                entity.ToTable("tblDefSato");

                entity.HasIndex(e => e.Item, "UQ__tblDefSa__9CBB9A4EF83D9380")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefSchoolCurse>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefSchoolCurses_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefSchoolCurses");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefShehiaStatus>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefShehiaStatus_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefShehiaStatus");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.NKind)
                    .HasColumnName("nKind")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblDefSikunReason>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefSikunReason");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefSimanimGraph>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefSimanimGraph");

                entity.HasIndex(e => e.Key1, "UQ__tblDefSi__60C21B7AA0F15ABC")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblDefSi__9CBB9A4EBB4A71BB")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefSmsMsg>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefSmsMsg_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefSmsMsg");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefSnif>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefSnif_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefSnif");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefSortBy>(entity =>
            {
                entity.HasKey(e => e.Key1)
                    .HasName("PK__tblDefSortBy__62C57A02");

                entity.ToTable("tblDefSortBy");

                entity.Property(e => e.Key1).HasMaxLength(30);

                entity.Property(e => e.SortByEng).HasMaxLength(100);

                entity.Property(e => e.SortByFields).HasMaxLength(100);

                entity.Property(e => e.SortByHeb).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefSponser>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefSponser_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefSponser");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Archive).HasDefaultValueSql("((0))");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.MacKod).HasColumnName("macKod");
            });

            modelBuilder.Entity<TblDefSponserService>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefSponserService");

                entity.Property(e => e.ClalitDesc).HasMaxLength(50);

                entity.Property(e => e.ClalitKod).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.LeumitDesc).HasMaxLength(100);

                entity.Property(e => e.LeumitKod).HasMaxLength(60);

                entity.Property(e => e.MabarKod)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MaccabiDesc).HasMaxLength(50);

                entity.Property(e => e.MaccabiKod)
                    .HasMaxLength(30)
                    .HasColumnName("maccabiKod");

                entity.Property(e => e.MehoedetDesc).HasMaxLength(30);

                entity.Property(e => e.MehoedetKod).HasMaxLength(30);

                entity.Property(e => e.SponserService).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefSponserSetting>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefSponserSetting");

                entity.Property(e => e.BNotIncLastDay).HasColumnName("bNotIncLastDay");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.SponserId).HasColumnName("SponserID");
            });

            modelBuilder.Entity<TblDefStationImg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefStationIMG");

                entity.HasIndex(e => e.Item, "ClusteredIndex-20150526-095605")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<TblDefStatus>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefStatus_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefStatus");

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Kod, "Kod")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Kod).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblDefStatusForm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefStatusForm");

                entity.HasIndex(e => e.Item, "UQ__tblDefSt__9CBB9A4E493D673C")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(500);
            });

            modelBuilder.Entity<TblDefStatusRoom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefStatusRoom");

                entity.HasIndex(e => new { e.Item, e.Bdel }, "ID")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefStdorPid>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefSTDOrPID");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).IsRequired();
            });

            modelBuilder.Entity<TblDefSubject>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefSubject");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefSubjectDoc>(entity =>
            {
                entity.ToTable("tblDefSubjectDocs");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefSubjectSoInter>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefSubjectSoInter");

                entity.HasIndex(e => new { e.Item, e.Bdel }, "ClusteredIndex-20141118-225211")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<TblDefSubmissionForm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefSubmissionForm");

                entity.HasIndex(e => e.Item, "UQ__tblDefSu__9CBB9A4E70DCF9E3")
                    .IsUnique();

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefSubmissionFormComp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDefSubmissionForm_Comp1");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefSymptomsPain>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefSymptomsPain");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefTargeDoc>(entity =>
            {
                entity.ToTable("tblDefTargeDocs");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefTaskPlace>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefTaskPlace_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefTaskPlace");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefTaskStatus>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefTaskStatus_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefTaskStatus");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefTaskTarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefTaskTarget");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefTavitFile>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefTavitFile");

                entity.HasIndex(e => new { e.FileName, e.FileCap, e.NCols, e.NRows }, "IX_tblDefTavitFile")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.FileCap).HasMaxLength(50);

                entity.Property(e => e.FileName).HasMaxLength(50);

                entity.Property(e => e.HtmlCss)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NCols).HasColumnName("nCols");

                entity.Property(e => e.NColsName).HasColumnName("nColsName");

                entity.Property(e => e.NRows).HasColumnName("nRows");

                entity.Property(e => e.Src1)
                    .IsRequired()
                    .HasColumnName("src1")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDefTelemarketingStatus>(entity =>
            {
                entity.ToTable("tblDefTelemarketingStatus");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefTestDetail>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefTestDetail_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefTestDetail");

                entity.HasIndex(e => e.TestDetailId, "TestDetailID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Caption1)
                    .HasMaxLength(50)
                    .HasComment("הכיתוב");

                entity.Property(e => e.NPoint)
                    .HasColumnName("nPoint")
                    .HasDefaultValueSql("(0)")
                    .HasComment("נקודות לתשובה באם מדובר בשאלה עם ניקוד");

                entity.Property(e => e.TestDetailId)
                    .HasColumnName("TestDetailID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לרשומת האב");
            });

            modelBuilder.Entity<TblDefTestRisk>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefTestRisk");

                entity.Property(e => e.MaxPoint).HasColumnName("maxPoint");

                entity.Property(e => e.MinPoint).HasColumnName("minPoint");

                entity.Property(e => e.ProblemId).HasColumnName("ProblemID");

                entity.Property(e => e.TargetId).HasColumnName("TargetID");

                entity.Property(e => e.TestId).HasColumnName("TestID");
            });

            modelBuilder.Entity<TblDefThemePhiziotrapium>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefThemePhiziotrapia_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefThemePhiziotrapia");

                entity.HasIndex(e => e.Id, "ID")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefThemeRefuee>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefThemeRefuee_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefThemeRefuee");

                entity.HasIndex(e => e.Id, "ID")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefThemeSiudi>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefThemeSiudi_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefThemeSiudi");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefThemeSocial>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefThemeSocial_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefThemeSocial");

                entity.HasIndex(e => e.Id, "ID")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefThroughP>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefThroughP");

                entity.HasIndex(e => e.Item, "UQ__tblDefTh__9CBB9A4E384724E9")
                    .IsUnique();

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefTifkud>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefTifkud_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefTifkud");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefTifkudDescription>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefTifkudDescription_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefTifkudDescription");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.MainId)
                    .HasColumnName("MainID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מקושר לנושא התפקוד מטבלת tblDefTifkud");
            });

            modelBuilder.Entity<TblDefTifkudStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefTifkudStatus");

                entity.Property(e => e.Active).HasDefaultValueSql("((0))");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.MabarKod)
                    .IsRequired()
                    .HasColumnName("mabarKod")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MabarType).HasColumnName("mabarType");

                entity.Property(e => e.MacKod).HasColumnName("macKod");

                entity.Property(e => e.TifkudKindId).HasColumnName("TifkudKindID");
            });

            modelBuilder.Entity<TblDefTipulPositionReson>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefTipulPositionResons");

                entity.HasIndex(e => e.Id, "UQ__tblDefTi__3213E83EAD3E9725")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblDefTi__99B8822A4660CE64")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnName("item");

                entity.Property(e => e.Mainid).HasColumnName("mainid");
            });

            modelBuilder.Entity<TblDefTipulReason>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefTipulReason_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefTipulReason");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(400);
            });

            modelBuilder.Entity<TblDefTipulim>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefTipulim_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefTipulim");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.BharshahaNurse)
                    .HasColumnName("BHarshahaNurse")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Item).HasMaxLength(100);

                entity.Property(e => e.KindKey).HasMaxLength(20);

                entity.Property(e => e.MainId).HasColumnName("MainID");

                entity.Property(e => e.PriorityKey)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("priorityKey")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ThemeId).HasColumnName("ThemeID");
            });

            modelBuilder.Entity<TblDefTipulimMain>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefTipulimMain");

                entity.HasIndex(e => e.Item, "UQ__tblDefTi__9CBB9A4E8E42E898")
                    .IsUnique();

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefToaar>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefToaar_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefToaar");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(15);
            });

            modelBuilder.Entity<TblDefTrainingSubject>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefTrainingSubjects");
            });

            modelBuilder.Entity<TblDefTransferalClinic>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefTransferalClinics_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefTransferalClinics");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefTreatment>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefTreatments");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefTreatmentPlanRep>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefTreatmentPlanRep");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.StrSql)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefTreatmentsPerStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefTreatmentsPerStatus");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.TipulId).HasColumnName("TipulID");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblDefTyingFrequency>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefTyingFrequency");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MainId).HasColumnName("MainID");
            });

            modelBuilder.Entity<TblDefTypeHatzmadum>(entity =>
            {
                entity.ToTable("tblDefTypeHatzmada");

                entity.HasIndex(e => e.Item, "UQ__tblDefTy__9CBB9A4E828D169D")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TblDefTzoa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefTzoa");

                entity.HasIndex(e => new { e.Item, e.Bdel }, "ClusteredIndex-20150419-140759")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(40)
                    .HasColumnName("item");

                entity.Property(e => e.Orderid).HasColumnName("orderid");
            });

            modelBuilder.Entity<TblDefUnitofMeasure>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefUnitofMeasure");

                entity.HasIndex(e => e.Item, "UQ__tblDefUn__9CBB9A4E788D096C")
                    .IsUnique();

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefUnitofMeasureComp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDefUnitofMeasure_Comp1");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TblDefVaccintion>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("defVaccination_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefVaccintion");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Archive).HasColumnName("archive");

                entity.Property(e => e.Item).HasMaxLength(30);
            });

            modelBuilder.Entity<TblDefVaccintionName>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("DefVaccintionName_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefVaccintionName");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MainId).HasColumnName("MainID");
            });

            modelBuilder.Entity<TblDefWeightLoss>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefWeightLoss");

                entity.HasIndex(e => e.ItemEng, "UQ__tblDefWe__8E5771D090F3EEF3")
                    .IsUnique();

                entity.HasIndex(e => e.Item, "UQ__tblDefWe__9CBB9A4EBA3BB41D")
                    .IsUnique();

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.ItemEng)
                    .IsRequired()
                    .HasMaxLength(300)
                    .HasColumnName("Item_Eng");

                entity.Property(e => e.OrdId).HasColumnName("OrdID");
            });

            modelBuilder.Entity<TblDefWorkerProperty>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefWorkerProperties");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(30);

                entity.Property(e => e.MainId)
                    .HasColumnName("MainID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblDefYediah>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefYediah_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefYediah");

                entity.HasIndex(e => e.Item, "Item")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefYediahDescription>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDefYediahDescription_PK")
                    .IsClustered(false);

                entity.ToTable("tblDefYediahDescription");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.MainId)
                    .HasColumnName("MainID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מקושר לנושא התפקוד מטבלת tblDefTifkud");
            });

            modelBuilder.Entity<TblDefYeshivaTarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefYeshivaTargets");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefYeshivotTzevetSummary>(entity =>
            {
                entity.ToTable("tblDefYeshivotTzevetSummary");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).IsRequired();
            });

            modelBuilder.Entity<TblDefZmidRoom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefZmidRoom");

                entity.HasIndex(e => new { e.Item, e.Bdel }, "ID")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblDefdirectionRoom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDefdirectionRoom");

                entity.HasIndex(e => new { e.Item, e.Bdel }, "ID")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblDiagnosisFunction>(entity =>
            {
                entity.ToTable("tblDiagnosisFunction");

                entity.HasIndex(e => new { e.LvelDelay, e.LevelFunction }, "indx1")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateCommittee)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DateCreate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DateDiagnosis).HasColumnType("datetime");

                entity.Property(e => e.LevelFunction)
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Memo).HasDefaultValueSql("('')");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<TblDiaryPharmV1Interaction>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDiaryPharmV1_Interaction");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("clientID");

                entity.Property(e => e.Descr).HasDefaultValueSql("('')");

                entity.Property(e => e.Essence)
                    .HasColumnName("essence")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FormId).HasColumnName("formID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Interaction).HasDefaultValueSql("('')");

                entity.Property(e => e.InteractionId)
                    .HasColumnName("InteractionID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Recommendation).HasDefaultValueSql("('')");

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserId).HasColumnName("userID");

                entity.Property(e => e.UserName)
                    .HasColumnName("userName")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblDietClientPo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDietClientPO");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.FabricMenuL).HasDefaultValueSql("('')");

                entity.Property(e => e.FabricMenuLid)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("FabricMenuLId")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FabricMenuS).HasDefaultValueSql("('')");

                entity.Property(e => e.FabricMenuSid)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("FabricMenuSId")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.MenuKindList)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MenuKindListId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("MenuKindListID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("((1))");

                entity.Property(e => e.Stopresone)
                    .IsRequired()
                    .HasColumnName("stopresone")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblDietClientPoComp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDietClientPO_Comp1");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comment).IsRequired();

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.FabricMenuL).HasMaxLength(200);

                entity.Property(e => e.FabricMenuLid)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("FabricMenuLId");

                entity.Property(e => e.FabricMenuS).HasMaxLength(200);

                entity.Property(e => e.FabricMenuSid)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("FabricMenuSId");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.MenuKindList).IsRequired();

                entity.Property(e => e.MenuKindListId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("MenuKindListID");

                entity.Property(e => e.Stopresone)
                    .IsRequired()
                    .HasColumnName("stopresone");

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblDietOrder>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDietOrders");

                entity.HasIndex(e => new { e.Id, e.TypeForm, e.ClientId, e.OrderKindId, e.RecStatus, e.LunchId, e.MenuId, e.FoodId }, "all")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.Id, e.TypeForm, e.OrderKindId }, "ff")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.AdditiveId)
                    .HasMaxLength(50)
                    .HasColumnName("AdditiveID");

                entity.Property(e => e.Advice).HasMaxLength(500);

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateOk)
                    .HasColumnType("datetime")
                    .HasColumnName("DateOK");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DrugId).HasDefaultValueSql("((0))");

                entity.Property(e => e.FeedMethodId).HasColumnName("FeedMethodID");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LunchDesc).HasMaxLength(50);

                entity.Property(e => e.LunchId)
                    .HasMaxLength(50)
                    .HasColumnName("LunchID");

                entity.Property(e => e.MirkamId).HasColumnName("mirkamID");

                entity.Property(e => e.OkrComment).HasMaxLength(200);

                entity.Property(e => e.Okread).HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderKindId).HasColumnName("OrderKindID");

                entity.Property(e => e.ReasonStop).HasMaxLength(100);

                entity.Property(e => e.ResonStop).HasMaxLength(100);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.ToMedicalGroupId).HasColumnName("ToMedicalGroupID");

                entity.Property(e => e.TypeForm).HasColumnName("typeForm");

                entity.Property(e => e.Unit).HasMaxLength(50);

                entity.Property(e => e.UserCreate).HasMaxLength(50);

                entity.Property(e => e.UserCreate2).HasMaxLength(20);
            });

            modelBuilder.Entity<TblDietOrdersDrug>(entity =>
            {
                entity.ToTable("tblDietOrdersDrugs");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BMoveToActive)
                    .HasColumnName("bMoveToActive")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DrugAvhanaKod).HasMaxLength(20);

                entity.Property(e => e.DrugComments).HasMaxLength(250);

                entity.Property(e => e.DrugFormat).HasMaxLength(50);

                entity.Property(e => e.DrugGenricName).HasMaxLength(800);

                entity.Property(e => e.DrugId)
                    .HasColumnName("DrugID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DrugKod).HasMaxLength(50);

                entity.Property(e => e.DrugMinunNum).HasMaxLength(20);

                entity.Property(e => e.DrugMinunType).HasMaxLength(50);

                entity.Property(e => e.DrugName).HasMaxLength(255);

                entity.Property(e => e.DrugTakeDays).HasMaxLength(30);

                entity.Property(e => e.DrugTakeJumpDays).HasDefaultValueSql("((0))");

                entity.Property(e => e.DrugTakeKind).HasMaxLength(20);

                entity.Property(e => e.DrugTakeTimes).HasMaxLength(100);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.IsRead)
                    .HasColumnName("isRead")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.NumToInvite).HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderId)
                    .HasColumnName("OrderID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PlanId).HasColumnName("PlanID");

                entity.Property(e => e.ReadTime).HasColumnType("datetime");

                entity.Property(e => e.RecKind).HasDefaultValueSql("((0))");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("((0))");

                entity.Property(e => e.ResponsibleGroupId).HasColumnName("ResponsibleGroupID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TakePerDay).HasDefaultValueSql("((0))");

                entity.Property(e => e.TakePerOne).HasDefaultValueSql("((0))");

                entity.Property(e => e.TipulDetails)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TipulId)
                    .HasColumnName("TipulID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.TipulName)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UserName).HasMaxLength(25);

                entity.Property(e => e.WorkerId)
                    .HasColumnName("WorkerID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblDietOrdersDrugsWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDietOrdersDrugsWeb");

                entity.Property(e => e.BTemp).HasColumnName("bTemp");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DrugKod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DrugMinunNum).HasMaxLength(20);

                entity.Property(e => e.DrugTakeDays).HasMaxLength(30);

                entity.Property(e => e.DrugTakeTimes).HasMaxLength(40);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.NumHourDay).HasMaxLength(100);

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.PlanId).HasColumnName("PlanID");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("((1))");

                entity.Property(e => e.Stopresone)
                    .IsRequired()
                    .HasColumnName("stopresone")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate");

                entity.Property(e => e.UnitofMeasureId).HasColumnName("UnitofMeasureID");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblDietOrdersDrugsWebCardexView>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDietOrdersDrugsWebCardex_view");

                entity.Property(e => e.Category)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.DateE).HasMaxLength(30);

                entity.Property(e => e.DateS2).HasColumnType("datetime");

                entity.Property(e => e.Datee2)
                    .HasColumnType("datetime")
                    .HasColumnName("datee2");

                entity.Property(e => e.Dates).HasMaxLength(30);

                entity.Property(e => e.DatesCardex).HasMaxLength(28);

                entity.Property(e => e.Dosage).HasMaxLength(401);

                entity.Property(e => e.Dosage2).HasMaxLength(300);

                entity.Property(e => e.DrugName).HasMaxLength(255);

                entity.Property(e => e.DrugTakeDays).HasMaxLength(30);

                entity.Property(e => e.DrugTakeTimes).HasMaxLength(4000);

                entity.Property(e => e.FeedRate).HasMaxLength(206);

                entity.Property(e => e.GivingManner)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.GivingWay)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Groupid).HasColumnName("groupid");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.NumHourDay).HasMaxLength(100);

                entity.Property(e => e.SubmissionForm)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.TableName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.TimeE).HasMaxLength(5);

                entity.Property(e => e.TimeS).HasMaxLength(5);

                entity.Property(e => e.Tscreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tscreate");

                entity.Property(e => e.TtDateE)
                    .IsRequired()
                    .HasColumnName("TT_DateE");

                entity.Property(e => e.UserCreate).HasMaxLength(200);
            });

            modelBuilder.Entity<TblDietOrdersDrugsWebComp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDietOrdersDrugsWeb_Comp1");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DrugKod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DrugMinunNum).HasMaxLength(20);

                entity.Property(e => e.DrugTakeDays).HasMaxLength(30);

                entity.Property(e => e.DrugTakeTimes).HasMaxLength(40);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.NumHourDay).HasMaxLength(100);

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.PlanId).HasColumnName("PlanID");

                entity.Property(e => e.Stopresone)
                    .IsRequired()
                    .HasColumnName("stopresone");

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate");

                entity.Property(e => e.UnitofMeasureId).HasColumnName("UnitofMeasureID");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblDietOrdersDrugsWebTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDietOrdersDrugsWebTemp");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DrugKod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DrugMinunNum).HasMaxLength(20);

                entity.Property(e => e.DrugTakeDays).HasMaxLength(30);

                entity.Property(e => e.DrugTakeTimes).HasMaxLength(40);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.NumHourDay).HasMaxLength(100);

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.PlanId).HasColumnName("PlanID");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("((1))");

                entity.Property(e => e.Stopresone)
                    .IsRequired()
                    .HasColumnName("stopresone")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate");

                entity.Property(e => e.UnitofMeasureId).HasColumnName("UnitofMeasureID");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblDietOrdersDrugsWebView>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDietOrdersDrugsWeb_view");

                entity.Property(e => e.Category)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.DateE).HasMaxLength(30);

                entity.Property(e => e.DateS2).HasColumnType("datetime");

                entity.Property(e => e.Datee2)
                    .HasColumnType("datetime")
                    .HasColumnName("datee2");

                entity.Property(e => e.Dates).HasMaxLength(30);

                entity.Property(e => e.Dosage).HasMaxLength(401);

                entity.Property(e => e.DrugTakeTimes).HasMaxLength(4000);

                entity.Property(e => e.FeedRate).HasMaxLength(206);

                entity.Property(e => e.GivingManner)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.GivingWay)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.NumHourDay).HasMaxLength(100);

                entity.Property(e => e.Stopresone)
                    .IsRequired()
                    .HasColumnName("stopresone");

                entity.Property(e => e.SubmissionForm)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.TimeE).HasMaxLength(5);

                entity.Property(e => e.TimeS).HasMaxLength(5);

                entity.Property(e => e.TtDateE)
                    .IsRequired()
                    .HasColumnName("TT_DateE");

                entity.Property(e => e.UserCreate).HasMaxLength(200);
            });

            modelBuilder.Entity<TblDietProppertiesClientWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDietProppertiesClient_Web");

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.CalculatesMpo1).HasColumnName("CalculatesMPO1");

                entity.Property(e => e.CalculatesMpo11).HasColumnName("CalculatesMPO1_1");

                entity.Property(e => e.CalculatesMpo2).HasColumnName("CalculatesMPO2");

                entity.Property(e => e.CalculatesMpo22).HasColumnName("CalculatesMPO2_2");

                entity.Property(e => e.CalculatesMpo3).HasColumnName("CalculatesMPO3");

                entity.Property(e => e.CalculatesMpo33).HasColumnName("CalculatesMPO3_3");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.HowFeedComment).IsRequired();

                entity.Property(e => e.HowFeedId).HasColumnName("HowFeedID");

                entity.Property(e => e.HowFeedPocomment)
                    .IsRequired()
                    .HasColumnName("HowFeedPOComment");

                entity.Property(e => e.HowFeedPoid).HasColumnName("HowFeedPOId");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Swallowing).IsRequired();

                entity.Property(e => e.TeethIdList)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.TeethList).IsRequired();

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblDietStopReason>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDietStopReason");

                entity.HasIndex(e => e.Item, "UQ__tblDietS__9CBB9A4E72688B1D")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(4000);
            });

            modelBuilder.Entity<TblDietStopReasonComp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDietStopReason_comp1");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(4000);
            });

            modelBuilder.Entity<TblDietStopTempClient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDietStopTempClient");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Reason)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TsStop)
                    .HasColumnType("datetime")
                    .HasColumnName("tsStop");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdstop).HasColumnName("UserIDStop");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblDietVclientPo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDietVClientPO");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.MenuKindList)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MenuKindListId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("MenuKindListID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblDietVlientPo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDietVlientPO");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.MenuKindList)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MenuKindListId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("MenuKindListID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblDietdrugsgave>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDietdrugsgave");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Memo1)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Time1).HasMaxLength(5);

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblDinkoNum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDinkoNum");
            });

            modelBuilder.Entity<TblDoctor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDoctor");

                entity.Property(e => e.זמניטיפולבפועל)
                    .HasMaxLength(255)
                    .HasColumnName("זמני טיפול בפועל");

                entity.Property(e => e.מזההמערכת).HasColumnName("מזהה מערכת");

                entity.Property(e => e.מטפל).HasMaxLength(255);

                entity.Property(e => e.קטגוריה).HasMaxLength(255);

                entity.Property(e => e.רישוםסיוםביצוע)
                    .HasMaxLength(255)
                    .HasColumnName("רישום סיום ביצוע");

                entity.Property(e => e.שםהטיפול)
                    .HasMaxLength(255)
                    .HasColumnName("שם הטיפול");

                entity.Property(e => e.שםמשפחה)
                    .HasMaxLength(255)
                    .HasColumnName("שם משפחה");

                entity.Property(e => e.שםפרטי)
                    .HasMaxLength(255)
                    .HasColumnName("שם פרטי");

                entity.Property(e => e.שעתביצוע)
                    .HasColumnType("datetime")
                    .HasColumnName("שעת ביצוע");

                entity.Property(e => e.תאריך).HasColumnType("datetime");

                entity.Property(e => e.תאריךסיוםביצוע)
                    .HasColumnType("datetime")
                    .HasColumnName("תאריך סיום ביצוע");

                entity.Property(e => e.תיאורהטיפול)
                    .HasMaxLength(255)
                    .HasColumnName("תיאור הטיפול");
            });

            modelBuilder.Entity<TblDoctor1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDoctors");

                entity.Property(e => e.Address1).HasMaxLength(30);

                entity.Property(e => e.Address2).HasMaxLength(30);

                entity.Property(e => e.BArchive)
                    .HasColumnName("bArchive")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CompanyId).HasColumnName("CompanyID");

                entity.Property(e => e.Email).HasMaxLength(40);

                entity.Property(e => e.EmailPrivate).HasDefaultValueSql("((0))");

                entity.Property(e => e.Fax1).HasMaxLength(12);

                entity.Property(e => e.Fax1Private).HasDefaultValueSql("((0))");

                entity.Property(e => e.Fname).HasMaxLength(20);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kod1Def).HasMaxLength(20);

                entity.Property(e => e.Lname).HasMaxLength(30);

                entity.Property(e => e.Mobile1).HasMaxLength(12);

                entity.Property(e => e.Mobile1Private).HasDefaultValueSql("((0))");

                entity.Property(e => e.NameView).HasMaxLength(50);

                entity.Property(e => e.Tel1).HasMaxLength(12);

                entity.Property(e => e.Tel1Private).HasDefaultValueSql("((0))");

                entity.Property(e => e.Tel2).HasMaxLength(12);

                entity.Property(e => e.Tel2Private).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblDoctorTime>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDoctorTimes");

                entity.Property(e => e.DoctorId).HasColumnName("DoctorID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.NDay).HasColumnName("nDay");

                entity.Property(e => e.NTorItem)
                    .HasColumnName("nTorItem")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NTorType)
                    .HasColumnName("nTorType")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Time1).HasColumnType("datetime");

                entity.Property(e => e.Time2).HasColumnType("datetime");

                entity.Property(e => e.YomanId).HasColumnName("YomanID");
            });

            modelBuilder.Entity<TblDrug>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDrugs");

                entity.Property(e => e.DrugName).HasMaxLength(255);

                entity.Property(e => e.Id).HasColumnName("ID");
            });

            modelBuilder.Entity<TblDrugAccept>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDrugAccept_PK")
                    .IsClustered(false);

                entity.ToTable("tblDrugAccept");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DDayarId)
                    .HasColumnName("dDayarID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך יצירת המירשם");

                entity.Property(e => e.DayarName).HasMaxLength(30);

                entity.Property(e => e.MirshamId)
                    .HasColumnName("MirshamID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblDrugAcceptDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDrugAcceptDetails");

                entity.Property(e => e.AcceptId)
                    .HasColumnName("AcceptID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DrugName).HasMaxLength(255);

                entity.Property(e => e.MirshamId)
                    .HasColumnName("MirshamID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Num1).HasDefaultValueSql("(0)");

                entity.Property(e => e.Price).HasDefaultValueSql("(0)");

                entity.Property(e => e.PriceAll).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblDrugClientNeedAllow>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDrugClientNeedAllow_PK")
                    .IsClustered(false);

                entity.ToTable("tblDrugClientNeedAllow");

                entity.HasIndex(e => e.ClientId, "ClientID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.DrugKod).HasMaxLength(50);

                entity.Property(e => e.DrugName).HasMaxLength(255);
            });

            modelBuilder.Entity<TblDrugClientPrice>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDrugClientPrice_PK")
                    .IsClustered(false);

                entity.ToTable("tblDrugClientPrice");

                entity.HasIndex(e => e.ClientId, "ClientID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DrugKod).HasMaxLength(50);

                entity.Property(e => e.DrugName).HasMaxLength(255);

                entity.Property(e => e.Price1)
                    .HasDefaultValueSql("(0)")
                    .HasComment("% הנחה");
            });

            modelBuilder.Entity<TblDrugGenericCode>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDrugGenericCode");

                entity.Property(e => e.GenericDesc)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Id).HasColumnName("ID");
            });

            modelBuilder.Entity<TblDrugGenric>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDrugGenric");

                entity.Property(e => e.DrugId).HasColumnName("DrugID");

                entity.Property(e => e.DrugKod).HasMaxLength(50);

                entity.Property(e => e.GenricName).HasMaxLength(255);

                entity.Property(e => e.GenricUnit).HasMaxLength(10);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ratio1).HasMaxLength(150);
            });

            modelBuilder.Entity<TblDrugTempList>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDrugTempList");

                entity.Property(e => e.BPurchase).HasColumnName("bPurchase");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DrugComments).HasMaxLength(30);

                entity.Property(e => e.DrugFormat).HasMaxLength(30);

                entity.Property(e => e.DrugKod).HasMaxLength(25);

                entity.Property(e => e.DrugName).HasMaxLength(255);

                entity.Property(e => e.DrugTypeToInvite)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FormPkudotId).HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Minun).HasMaxLength(50);

                entity.Property(e => e.Num1Old)
                    .HasColumnName("num1_old")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UserCreate).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblDrugToClientDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDrugToClientDetails");

                entity.Property(e => e.AcceptId)
                    .HasColumnName("AcceptID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DrugAcceptId)
                    .HasColumnName("DrugAcceptID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DrugName).HasMaxLength(255);

                entity.Property(e => e.DrugToClientId)
                    .HasColumnName("DrugToClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Num1).HasDefaultValueSql("(0)");

                entity.Property(e => e.Price).HasDefaultValueSql("(0)");

                entity.Property(e => e.PriceAll).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblDrugsGave>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDrugsGave");

                entity.HasIndex(e => new { e.DrugId, e.Time1 }, "IDX_tblDrugsGave_DrugId_Time1_INC_Date1")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.GaveStatus).HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Memo1).HasMaxLength(500);

                entity.Property(e => e.Minun).HasMaxLength(50);

                entity.Property(e => e.TStame)
                    .HasColumnType("datetime")
                    .HasColumnName("tStame")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Time1).HasMaxLength(6);

                entity.Property(e => e.TsTamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tsTamp")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblDrugsGaveDeleted>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDrugsGaveDeleted");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.GaveStatus).HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Iddel).HasColumnName("IDDel");

                entity.Property(e => e.Memo1).HasMaxLength(500);

                entity.Property(e => e.Minun).HasMaxLength(50);

                entity.Property(e => e.TStame)
                    .HasColumnType("datetime")
                    .HasColumnName("tStame")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Time1).HasMaxLength(6);

                entity.Property(e => e.TsTamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tsTamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TsTampDel)
                    .HasColumnType("datetime")
                    .HasColumnName("tsTampDEl");
            });

            modelBuilder.Entity<TblDrugsGaveView>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblDrugsGave_View");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Memo1)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Time1)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.TimeGave)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.TsTamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tsTamp");
            });

            modelBuilder.Entity<TblDrugsNotGiven>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDrugsNotGiven");

                entity.HasIndex(e => new { e.BDel, e.TStamp }, "idx_tblDrugsNotGiven_bDel_tStamp_inc_ClientID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.DrugKod).HasMaxLength(15);

                entity.Property(e => e.DrugNotGiven)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.FormPkudotId).HasColumnName("FormPkudotID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.Reason)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.Time1)
                    .IsRequired()
                    .HasMaxLength(12)
                    .HasColumnName("time1");

                entity.Property(e => e.UserCreate)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblDrugtoClient>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblDrugtoClient_PK")
                    .IsClustered(false);

                entity.ToTable("tblDrugtoClient");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DDayarId)
                    .HasColumnName("dDayarID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך יצירת המירשם");

                entity.Property(e => e.DayarName).HasMaxLength(30);

                entity.Property(e => e.DrugAcceptId)
                    .HasColumnName("DrugAcceptID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.MirshamId)
                    .HasColumnName("MirshamID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblDuplicateClient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDuplicateClient");

                entity.Property(e => e.NewId1).HasColumnName("NewID1");

                entity.Property(e => e.OldId1).HasColumnName("OldID1");
            });

            modelBuilder.Entity<TblDuplicateClient1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDuplicateClient1");

                entity.Property(e => e.NewId1).HasColumnName("NewID1");

                entity.Property(e => e.OldId1).HasColumnName("OldID1");
            });

            modelBuilder.Entity<TblDynamicReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblDynamicReports");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BConst)
                    .HasColumnName("bConst")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.NType)
                    .HasColumnName("nType")
                    .HasDefaultValueSql("(0)")
                    .HasComment("סוג הקבוצה של השאילתות");

                entity.Property(e => e.SCaptions)
                    .HasColumnType("ntext")
                    .HasColumnName("sCaptions")
                    .HasComment("כותרת שדות");

                entity.Property(e => e.SConditions)
                    .HasColumnType("ntext")
                    .HasColumnName("sConditions")
                    .HasComment("format is field;condition;value(# is dynamic)");

                entity.Property(e => e.SConditionsCap)
                    .HasColumnType("ntext")
                    .HasColumnName("sConditionsCap")
                    .HasComment("כיתוב לתנאים");

                entity.Property(e => e.SFields)
                    .HasColumnType("ntext")
                    .HasColumnName("sFields")
                    .HasComment("שמות שדות");

                entity.Property(e => e.SGroup)
                    .HasMaxLength(50)
                    .HasColumnName("sGroup")
                    .HasComment("שדה לאיגוד");

                entity.Property(e => e.SName)
                    .HasMaxLength(255)
                    .HasColumnName("sName")
                    .HasComment("שם הדוח");

                entity.Property(e => e.SOrder1)
                    .HasMaxLength(50)
                    .HasColumnName("sOrder1")
                    .HasComment("שדה למיון אחד");

                entity.Property(e => e.SOrder2)
                    .HasMaxLength(50)
                    .HasColumnName("sOrder2")
                    .HasComment("שדה למיון 2");

                entity.Property(e => e.SSizes)
                    .HasColumnType("ntext")
                    .HasColumnName("sSizes")
                    .HasComment("רוחב שדות");
            });

            modelBuilder.Entity<TblEmploymentTipul>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblEmploymentTipul");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.ClientId).HasMaxLength(100);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.GroupsId).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.TimeGroup).HasMaxLength(8);

                entity.Property(e => e.TipulOrGar).HasMaxLength(50);

                entity.Property(e => e.UserCreate).HasMaxLength(100);
            });

            modelBuilder.Entity<TblEnergy>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblEnergy");

                entity.Property(e => e.Asmachta).HasMaxLength(50);

                entity.Property(e => e.DCount)
                    .HasColumnType("money")
                    .HasColumnName("dCount");

                entity.Property(e => e.DSumAll)
                    .HasColumnType("money")
                    .HasColumnName("dSumAll");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kod1).HasMaxLength(10);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Memo1).HasMaxLength(200);

                entity.Property(e => e.UserCreate).HasMaxLength(50);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblEnterExitTime>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblEnterExitTimes_PK")
                    .IsClustered(false);

                entity.ToTable("tblEnterExitTimes");

                entity.HasIndex(e => e.ClientKod, "ClientID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ThemeId, "ThemeID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientKod).HasMaxLength(10);

                entity.Property(e => e.Comment)
                    .HasMaxLength(255)
                    .HasComment("הערה בנוגע לכניסה/יציאה, לדוג' יציאה בתפקיד");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.EnterTime).HasColumnType("datetime");

                entity.Property(e => e.ExitTime).HasColumnType("datetime");

                entity.Property(e => e.ThemeId)
                    .HasColumnName("ThemeID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblErrPdfFollow>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblErrPdfFollow");

                entity.Property(e => e.Desc)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<TblEvenrReuthConclusion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblEvenrReuthConclusions");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(200);
            });

            modelBuilder.Entity<TblEvenrReuthNursePlace>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblEvenrReuthNursePlace");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(200);
            });

            modelBuilder.Entity<TblEvenrReuthNurseResult>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblEvenrReuthNurseResult");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(200);
            });

            modelBuilder.Entity<TblEvenrReuthNurseSign>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblEvenrReuthNurseSign");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(200);
            });

            modelBuilder.Entity<TblEvenrReuthNurseTying>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblEvenrReuthNurseTying");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(200);
            });

            modelBuilder.Entity<TblEvenrReuthNurseType>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblEvenrReuthNurseType");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IsFall).HasColumnName("isFall");

                entity.Property(e => e.Item).HasMaxLength(200);
            });

            modelBuilder.Entity<TblEvenrReuthintervention>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblEvenrReuthintervention");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(200);
            });

            modelBuilder.Entity<TblEventTipulUp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblEventTipulUp");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.Desctipul)
                    .HasMaxLength(3000)
                    .HasColumnName("desctipul");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Reported).HasMaxLength(100);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.UserCreate).HasMaxLength(100);

                entity.Property(e => e.Whorep).HasMaxLength(100);
            });

            modelBuilder.Entity<TblExpertsAdvise>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblExpertsAdvises");

                entity.Property(e => e.Accompany).HasColumnName("accompany");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BExport).HasColumnName("bExport");

                entity.Property(e => e.BExportDone).HasColumnName("bExportDone");

                entity.Property(e => e.BExportRetData).HasColumnName("bExportRetData");

                entity.Property(e => e.BExportWeb).HasColumnName("bExportWeb");

                entity.Property(e => e.BExportWebDone).HasColumnName("bExportWebDone");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateExport).HasColumnType("datetime");

                entity.Property(e => e.DateInvite).HasColumnType("datetime");

                entity.Property(e => e.DateWebExport).HasColumnType("datetime");

                entity.Property(e => e.ExpertName).HasMaxLength(50);

                entity.Property(e => e.Hour1).HasMaxLength(25);

                entity.Property(e => e.Hour2).HasMaxLength(25);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Tasks).HasMaxLength(500);

                entity.Property(e => e.UserCreate)
                    .HasMaxLength(50)
                    .HasColumnName("userCreate");

                entity.Property(e => e.UserCreateId).HasColumnName("userCreateID");
            });

            modelBuilder.Entity<TblFieldsList>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFieldsList");

                entity.HasIndex(e => e.AppId, "AppID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.FieldName, "FieldName")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.FieldName, e.ThemeKey }, "IX_tblFieldsList")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ThemeKey, "ThemeKey")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.AppId)
                    .HasColumnName("AppID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("app.productname");

                entity.Property(e => e.FieldCaption)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FieldName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasDefaultValueSql("((0))")
                    .HasComment("מיקום השדה ברשימה");

                entity.Property(e => e.QueryName).HasMaxLength(30);

                entity.Property(e => e.ThemeKey)
                    .HasMaxLength(20)
                    .HasComment("נושא המודול");
            });

            modelBuilder.Entity<TblFieldsNoToDup>(entity =>
            {
                entity.ToTable("tblFieldsNoToDup");

                entity.HasIndex(e => new { e.FormTypeId, e.ClsName }, "IX_FormTypeID_ClsName")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "IX_tblFieldsNoToDup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClsName).HasMaxLength(200);

                entity.Property(e => e.DefaultVal).HasMaxLength(500);

                entity.Property(e => e.FormTypeId).HasColumnName("FormTypeID");
            });

            modelBuilder.Entity<TblFieldsNotToDuplicate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFieldsNotToDuplicate");

                entity.HasIndex(e => e.Id, "IX_tblFieldsNotToDuplicate")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.ClsName).IsRequired();

                entity.Property(e => e.FormKey).IsRequired();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.TypFormId).HasColumnName("TypFormID");
            });

            modelBuilder.Entity<TblFilter>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFilters");

                entity.Property(e => e.FieldList).HasMaxLength(50);

                entity.Property(e => e.Filed1)
                    .HasMaxLength(50)
                    .HasColumnName("filed1");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.ListAllowOption).HasMaxLength(20);

                entity.Property(e => e.Name1).HasMaxLength(50);

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.TblDefList).HasMaxLength(50);

                entity.Property(e => e.Typ1).HasMaxLength(1);
            });

            modelBuilder.Entity<TblFollow>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFollow");

                entity.Property(e => e.AvhanaDescription).HasMaxLength(300);

                entity.Property(e => e.AvhanaKod).HasMaxLength(25);

                entity.Property(e => e.BCardex).HasColumnName("bCardex");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BEdit).HasColumnName("bEdit");

                entity.Property(e => e.BNoAutoFollow).HasColumnName("bNoAutoFollow");

                entity.Property(e => e.BSadir).HasColumnName("bSadir");

                entity.Property(e => e.BT).HasColumnName("bT");

                entity.Property(e => e.BackClientId).HasColumnName("BackClientID");

                entity.Property(e => e.Bdend).HasColumnName("bdend");

                entity.Property(e => e.Bexp).HasColumnName("bexp");

                entity.Property(e => e.Bsend).HasColumnName("bsend");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateTime1).HasColumnType("smalldatetime");

                entity.Property(e => e.DoctorName).HasMaxLength(50);

                entity.Property(e => e.FamilyId)
                    .HasMaxLength(500)
                    .HasColumnName("familyId");

                entity.Property(e => e.FiverUnder).HasMaxLength(10);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.Memo1).HasMaxLength(1000);

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.SCurrentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sCurrentDate");

                entity.Property(e => e.SatoUnder).HasMaxLength(10);

                entity.Property(e => e.Subject1)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.SubjectId2).HasColumnName("SubjectID2");

                entity.Property(e => e.SubjectId3).HasColumnName("subjectId3");

                entity.Property(e => e.SubjectId4).HasColumnName("subjectID4");

                entity.Property(e => e.TStemp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStemp");

                entity.Property(e => e.TempSubject).HasMaxLength(100);

                entity.Property(e => e.Time1).HasMaxLength(12);

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.Val1).HasColumnType("ntext");

                entity.Property(e => e.Val10).HasMaxLength(250);

                entity.Property(e => e.Val11).HasMaxLength(20);

                entity.Property(e => e.Val12)
                    .HasMaxLength(500)
                    .HasColumnName("val12");

                entity.Property(e => e.Val3).HasColumnType("ntext");

                entity.Property(e => e.Val4).HasColumnType("ntext");

                entity.Property(e => e.Val5).HasColumnType("ntext");

                entity.Property(e => e.Val6).HasColumnType("ntext");

                entity.Property(e => e.Val7).HasColumnType("ntext");

                entity.Property(e => e.Val8).HasColumnType("ntext");

                entity.Property(e => e.Val9).HasColumnType("ntext");
            });

            modelBuilder.Entity<TblFollowDonce>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFollowDOnce");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.DrugId).HasColumnName("DrugID");

                entity.Property(e => e.DrugKod).HasMaxLength(15);

                entity.Property(e => e.DrugOnce)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.Time1)
                    .IsRequired()
                    .HasMaxLength(12)
                    .HasColumnName("time1");

                entity.Property(e => e.UserCreate)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Val1).HasMaxLength(100);
            });

            modelBuilder.Entity<TblFollowGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFollowGroup");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Subject1).HasMaxLength(255);

                entity.Property(e => e.TypeForm)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לסוג הטופס");
            });

            modelBuilder.Entity<TblFollowGroupDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFollowGroupDetails");

                entity.HasIndex(e => e.ClientId, "ClientFormID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לדייר");

                entity.Property(e => e.ClientName).HasMaxLength(100);

                entity.Property(e => e.DoctorName)
                    .HasMaxLength(50)
                    .HasComment("שם הרופא");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Memo1).HasColumnType("ntext");

                entity.Property(e => e.ParentId)
                    .HasColumnName("ParentID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Time1).HasColumnType("datetime");

                entity.Property(e => e.TypeForm)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לסוג הטופס");

                entity.Property(e => e.Val1).HasColumnType("ntext");

                entity.Property(e => e.Val10).HasColumnType("ntext");

                entity.Property(e => e.Val2).HasColumnType("ntext");

                entity.Property(e => e.Val3).HasColumnType("ntext");

                entity.Property(e => e.Val4).HasColumnType("ntext");

                entity.Property(e => e.Val5).HasColumnType("ntext");

                entity.Property(e => e.Val6).HasColumnType("ntext");

                entity.Property(e => e.Val7).HasColumnType("ntext");

                entity.Property(e => e.Val8).HasColumnType("ntext");

                entity.Property(e => e.Val9).HasColumnType("ntext");
            });

            modelBuilder.Entity<TblFollowPdfSend>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFollowPdfSend");

                entity.HasIndex(e => e.FollowId, "UQ__tblFollo__2CE810AF9668BC85")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblFollowSugar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFollowSugar");

                entity.Property(e => e.Ddd)
                    .HasColumnType("datetime")
                    .HasColumnName("ddd");

                entity.Property(e => e.Hour1)
                    .HasMaxLength(10)
                    .HasColumnName("hour1");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Val).HasMaxLength(500);
            });

            modelBuilder.Entity<TblFollowUp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFollowUps");

                entity.HasIndex(e => new { e.Item, e.Id }, "NonClusteredIndex-20140410-131559")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.HarshahKey)
                    .HasMaxLength(50)
                    .HasColumnName("harshahKey");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblFollowupDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFollowupDetails");

                entity.Property(e => e.Caption1).HasMaxLength(50);

                entity.Property(e => e.Class1).HasMaxLength(50);

                entity.Property(e => e.FollowId)
                    .HasColumnName("FollowID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לטבלת המעקבים");

                entity.Property(e => e.Popup1).HasMaxLength(50);

                entity.Property(e => e.Size1).HasMaxLength(5);
            });

            modelBuilder.Entity<TblFormAvhanotDiet>(entity =>
            {
                entity.ToTable("tblFormAvhanotDiet");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AvahanaFull)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Avhanakod)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TsCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TsUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsUpdate");

                entity.Property(e => e.UserCreate)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");

                entity.Property(e => e.UserIdupdate).HasColumnName("UserIDUpdate");
            });

            modelBuilder.Entity<TblFormDyn>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblFormDyn_PK")
                    .IsClustered(false);

                entity.ToTable("tblFormDyn");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FormName).HasMaxLength(50);

                entity.Property(e => e.FormTyp).HasMaxLength(50);

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblFormDynItm>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblFormDynItms_PK")
                    .IsClustered(false);

                entity.ToTable("tblFormDynItms");

                entity.HasIndex(e => e.FormId, "FormID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FormId)
                    .HasColumnName("FormID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מצביע לטבלת הטפסים");

                entity.Property(e => e.NOrd)
                    .HasColumnName("nOrd")
                    .HasDefaultValueSql("(0)")
                    .HasComment("משמש למיון");

                entity.Property(e => e.SCap)
                    .HasMaxLength(50)
                    .HasColumnName("sCap")
                    .HasComment("כותרת-כיתוב");

                entity.Property(e => e.SIm)
                    .HasMaxLength(50)
                    .HasColumnName("sIM")
                    .HasComment("יחידת מידה משמש לבדיקות מעבדה");

                entity.Property(e => e.SMax)
                    .HasMaxLength(10)
                    .HasColumnName("sMax")
                    .HasComment("מקסימום משמש לבדיקות מעבדה");

                entity.Property(e => e.SMin)
                    .HasMaxLength(10)
                    .HasColumnName("sMin")
                    .HasComment("מינימום משמש לבדיקות מעבדה");

                entity.Property(e => e.STyp)
                    .HasMaxLength(30)
                    .HasColumnName("sTyp")
                    .HasComment("'combo ir group or caption or Line(קו מפריד)    use with Test Only");
            });

            modelBuilder.Entity<TblFormHtmlLock>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFormHtmlLock");

                entity.Property(e => e.Date1)
                    .HasMaxLength(50)
                    .HasColumnName("date1")
                    .HasComment("תאריך הנעילה");

                entity.Property(e => e.FormTypeId)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לסוג הטופס הננעל");

                entity.Property(e => e.FormTypeId2)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לסוג הטופס הננעל");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID")
                    .HasComment("מזהה");

                entity.Property(e => e.Time1)
                    .HasMaxLength(50)
                    .HasComment("זמן הנעילה");

                entity.Property(e => e.ToClientId)
                    .HasColumnName("ToClientID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לדייר/אדם שנעלו לגביו את הטופס");

                entity.Property(e => e.UserLock)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לנועל");
            });

            modelBuilder.Entity<TblFormKey>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFormKeys");

                entity.Property(e => e.Archive).HasDefaultValueSql("((0))");

                entity.Property(e => e.Cap1).HasMaxLength(50);

                entity.Property(e => e.FormKey).HasMaxLength(30);

                entity.Property(e => e.Key1).HasMaxLength(50);

                entity.Property(e => e.OrderId).HasColumnName("OrderID");
            });

            modelBuilder.Entity<TblFormPkudotContinueHosp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFormPkudotContinueHosp");

                entity.HasIndex(e => e.DrugId, "UQ__tblFormP__908D66172021CC7D")
                    .IsUnique();

                entity.Property(e => e.BConHosp).HasColumnName("bConHosp");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<TblFormsPermission>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFormsPermissions");

                entity.HasIndex(e => new { e.FormType, e.PermissionKey }, "Dup")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.BLock).HasColumnName("bLock");

                entity.Property(e => e.BOpen).HasColumnName("bOpen");

                entity.Property(e => e.BRead)
                    .IsRequired()
                    .HasColumnName("bRead")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BWrite).HasColumnName("bWrite");

                entity.Property(e => e.FormKey)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.PermissionKey)
                    .IsRequired()
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<TblFormsTemplate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFormsTemplate");

                entity.HasIndex(e => new { e.Id, e.Category1, e.Category2, e.Category3, e.FormKey }, "IX_tblFormsTemplate")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.FormKey, "IX_tblFormsTemplate_FormKey")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.Locked, e.Archive, e.Category1, e.Category2 }, "IX_tblFormsTemplate_Locked_Archive_Category1_Category2")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BZeroTest)
                    .HasColumnName("bZeroTest")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Category1).HasMaxLength(50);

                entity.Property(e => e.Category2).HasMaxLength(50);

                entity.Property(e => e.Category3).HasMaxLength(50);

                entity.Property(e => e.FormKey).HasMaxLength(50);

                entity.Property(e => e.FormKeyGroup)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FormName).HasMaxLength(100);

                entity.Property(e => e.HtmlSource).UseCollation("Cyrillic_General_CI_AS");

                entity.Property(e => e.HtmlSourceEng).HasDefaultValueSql("('')");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.QuestionFirst1).HasMaxLength(50);

                entity.Property(e => e.QuestionFirst2).HasMaxLength(50);

                entity.Property(e => e.QuestionLast1).HasMaxLength(50);

                entity.Property(e => e.QuestionLast2).HasMaxLength(50);

                entity.Property(e => e.SType)
                    .HasMaxLength(3)
                    .HasColumnName("sType");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<TblFormsTemplateBaitBalev>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFormsTemplateBaitBalev");

                entity.Property(e => e.Category1).HasMaxLength(50);

                entity.Property(e => e.Category2).HasMaxLength(50);

                entity.Property(e => e.Category3).HasMaxLength(50);

                entity.Property(e => e.FormKey).HasMaxLength(50);

                entity.Property(e => e.FormName).HasMaxLength(100);

                entity.Property(e => e.HtmlSource).HasColumnType("ntext");

                entity.Property(e => e.HtmlSourceEng).HasDefaultValueSql("('')");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.SType)
                    .HasMaxLength(3)
                    .HasColumnName("sType");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<TblFormsTemplateBeitHadar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFormsTemplateBeitHadar");

                entity.Property(e => e.Category1).HasMaxLength(50);

                entity.Property(e => e.Category2).HasMaxLength(50);

                entity.Property(e => e.Category3).HasMaxLength(50);

                entity.Property(e => e.FormKey).HasMaxLength(50);

                entity.Property(e => e.FormName).HasMaxLength(100);

                entity.Property(e => e.HtmlSource).HasColumnType("ntext");

                entity.Property(e => e.HtmlSourceEng).HasDefaultValueSql("('')");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.SType)
                    .HasMaxLength(3)
                    .HasColumnName("sType");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<TblFormsTemplateHerzog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFormsTemplateHerzog");

                entity.Property(e => e.Category1).HasMaxLength(50);

                entity.Property(e => e.Category2).HasMaxLength(50);

                entity.Property(e => e.Category3).HasMaxLength(50);

                entity.Property(e => e.FormKey).HasMaxLength(50);

                entity.Property(e => e.FormName).HasMaxLength(100);

                entity.Property(e => e.HtmlSource).HasColumnType("ntext");

                entity.Property(e => e.HtmlSourceEng).HasDefaultValueSql("('')");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.SType)
                    .HasMaxLength(3)
                    .HasColumnName("sType");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<TblFormsTemplateNoDup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFormsTemplateNoDup");

                entity.HasIndex(e => new { e.Id, e.Category1, e.Category2, e.Category3, e.FormKey }, "IX_tblFormsTemplate")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Category1).HasMaxLength(50);

                entity.Property(e => e.Category2).HasMaxLength(50);

                entity.Property(e => e.Category3).HasMaxLength(50);

                entity.Property(e => e.FormKey).HasMaxLength(50);

                entity.Property(e => e.FormName).HasMaxLength(100);

                entity.Property(e => e.HtmlSource).HasColumnType("ntext");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.SType)
                    .HasMaxLength(3)
                    .HasColumnName("sType");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<TblFormsTemplateReuth>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFormsTemplateReuth");

                entity.HasIndex(e => new { e.Id, e.Category1, e.Category2, e.Category3, e.FormKey }, "IX_tblFormsTemplate")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Category1).HasMaxLength(50);

                entity.Property(e => e.Category2).HasMaxLength(50);

                entity.Property(e => e.Category3).HasMaxLength(50);

                entity.Property(e => e.FormKey).HasMaxLength(50);

                entity.Property(e => e.FormName).HasMaxLength(100);

                entity.Property(e => e.HtmlSource).HasColumnType("ntext");

                entity.Property(e => e.HtmlSourceEng).HasDefaultValueSql("('')");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.SType)
                    .HasMaxLength(3)
                    .HasColumnName("sType");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<TblFormsTemplatedToDell>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFormsTemplatedToDell");

                entity.Property(e => e.Category1).HasMaxLength(50);

                entity.Property(e => e.Category2).HasMaxLength(50);

                entity.Property(e => e.Category3).HasMaxLength(50);

                entity.Property(e => e.FormKey).HasMaxLength(50);

                entity.Property(e => e.FormName).HasMaxLength(100);

                entity.Property(e => e.HtmlSource).HasColumnType("ntext");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.SType)
                    .HasMaxLength(3)
                    .HasColumnName("sType");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<TblFrequency>(entity =>
            {
                entity.ToTable("tblFrequency");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblFunctionLevel>(entity =>
            {
                entity.ToTable("tblFunctionLevel");

                entity.HasIndex(e => e.Item, "UQ__tblFunct__9CBB9A4E9670FDBD")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<TblFunctionalGuideClient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFunctionalGuideClients");

                entity.Property(e => e.Barchive).HasColumnName("BArchive");

                entity.Property(e => e.Bstop).HasColumnName("BStop");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TStampDelete)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampDelete");

                entity.Property(e => e.TStampStop)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampStop");

                entity.Property(e => e.TStampUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampUpdate");
            });

            modelBuilder.Entity<TblFunctionalGuideDetailClient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblFunctionalGuideDetailClients");

                entity.HasIndex(e => e.MainId, "UQ__tblFunct__71F8F5CD057CF4E5")
                    .IsUnique();

                entity.Property(e => e.BedFunctionComment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CommunicationAidComment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CommunicationAidList)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CommunicationAidListId)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CrossingPhizioComment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DrinkComment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EquipmentPhizioComment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EquipmentPhizioList)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EquipmentPhizioListId)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.HearingAidList)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.HearingAidListId)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.HearingComment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LowerClothesComment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MainLang)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MobileConduciveList)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MobileConduciveListId)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MobilePhizioComment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PhizioOtherComment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PhizioOtherList)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PhizioOtherListId)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SplintsSlingsComment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SplintsSlingsList)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SplintsSlingsListId)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Teethcomment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TopClothesComment)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblGain>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblGain");

                entity.HasIndex(e => e.UserId, "tblGainUserID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.GainId)
                    .HasColumnName("GainID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("קוד של משתמש משותף");

                entity.Property(e => e.GainName)
                    .HasMaxLength(50)
                    .HasComment("שם המשתמש המשותף");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("קוד משתמש");
            });

            modelBuilder.Entity<TblGeneralNurseDetailA10>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblGeneralNurseDetailA10");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DoctorName).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Mahlaka).HasMaxLength(30);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.Mishmeret).HasMaxLength(20);

                entity.Property(e => e.MishmeretId).HasColumnName("MishmeretID");

                entity.Property(e => e.Rep).HasColumnType("ntext");

                entity.Property(e => e.SCurrentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sCurrentDate");

                entity.Property(e => e.Time1).HasMaxLength(12);

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblGoodMorning>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblGoodMorning_PK")
                    .IsClustered(false);

                entity.ToTable("tblGoodMorning");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BLocked)
                    .HasColumnName("bLocked")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Chk1)
                    .HasColumnName("chk1")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Chk2)
                    .HasColumnName("chk2")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Mem1)
                    .HasColumnType("ntext")
                    .HasColumnName("mem1");

                entity.Property(e => e.Mem2)
                    .HasColumnType("ntext")
                    .HasColumnName("mem2");

                entity.Property(e => e.NameView).HasMaxLength(255);

                entity.Property(e => e.SetChk1).HasMaxLength(50);

                entity.Property(e => e.SetChk2).HasMaxLength(250);

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblGroupAction>(entity =>
            {
                entity.ToTable("tblGroupAction");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CriterionId)
                    .HasMaxLength(100)
                    .HasColumnName("CriterionID");

                entity.Property(e => e.DateAction).HasColumnType("datetime");

                entity.Property(e => e.DateCreate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.MedicalGroupId).HasColumnName("MedicalGroupID");

                entity.Property(e => e.Operation).HasMaxLength(50);

                entity.Property(e => e.SubjectActionId).HasColumnName("SubjectActionID");

                entity.Property(e => e.UserCreate).HasMaxLength(50);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblHeightAma>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblHeightAma");

                entity.Property(e => e.AmaLen).HasColumnName("Ama_Len");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.MenD).HasColumnName("Men_D");

                entity.Property(e => e.MenU).HasColumnName("men_U");

                entity.Property(e => e.WomenD).HasColumnName("Women_D");

                entity.Property(e => e.WomenU).HasColumnName("Women_U");
            });

            modelBuilder.Entity<TblHelpItemMersham>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblHelpItemMersham");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DrugFormat).HasMaxLength(200);

                entity.Property(e => e.DrugName)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Minun).HasMaxLength(500);

                entity.Property(e => e.TypeToInvite).HasMaxLength(200);

                entity.Property(e => e.UserCreate).HasMaxLength(300);
            });

            modelBuilder.Entity<TblHeshDocItem>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblHeshDocItems_PK")
                    .IsClustered(false);

                entity.ToTable("tblHeshDocItems");

                entity.HasIndex(e => e.MiunId, "MiunID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DocId, "tblHeshDocumentstblHeshDocItems")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Coin)
                    .HasMaxLength(10)
                    .HasComment("המט\"ח");

                entity.Property(e => e.Comments)
                    .HasMaxLength(255)
                    .HasComment("הערות כגון: עבור 08/2003");

                entity.Property(e => e.DocId).HasColumnName("DocID");

                entity.Property(e => e.KodparitOld).HasColumnName("kodparitOld");

                entity.Property(e => e.Maham)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם חייב מע\"מ");

                entity.Property(e => e.MelayKod).HasMaxLength(30);

                entity.Property(e => e.MiunId)
                    .HasColumnName("MiunID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ParitId).HasColumnName("ParitID");

                entity.Property(e => e.ParitKod).HasMaxLength(50);

                entity.Property(e => e.ParitKod2).HasMaxLength(50);

                entity.Property(e => e.ParitName).HasMaxLength(250);

                entity.Property(e => e.ParitkodOld).HasColumnName("paritkodOld");

                entity.Property(e => e.PerDiscount).HasComment("אחוז הנחה");

                entity.Property(e => e.Rate)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .HasComment("היחידה לחיוב:שעה,הופעה וכדו'");

                entity.Property(e => e.UnitId)
                    .HasColumnName("UnitID")
                    .HasDefaultValueSql("(0)");

                entity.HasOne(d => d.Doc)
                    .WithMany(p => p.TblHeshDocItems)
                    .HasForeignKey(d => d.DocId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("tblHeshDocItems_FK00");
            });

            modelBuilder.Entity<TblHeshDocName>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblHeshDocNames");

                entity.HasIndex(e => e.Id, "DocumentsDef_DocumentID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.Id, e.LocationId }, "aa")
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Copies).HasDefaultValueSql("(0)");

                entity.Property(e => e.CurrentNumber).HasDefaultValueSql("(0)");

                entity.Property(e => e.DocGroup).HasComment("0-מכירות,1-מלאי");

                entity.Property(e => e.DocName).HasMaxLength(50);

                entity.Property(e => e.FirstNumber).HasDefaultValueSql("(0)");

                entity.Property(e => e.FixNumerator).HasDefaultValueSql("(0)");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("locationId");

                entity.Property(e => e.RptDocName).HasMaxLength(50);

                entity.Property(e => e.RptFormat).HasDefaultValueSql("(0)");

                entity.Property(e => e.SalesDoc).HasDefaultValueSql("(0)");

                entity.Property(e => e.TkindFreeKod)
                    .HasMaxLength(50)
                    .HasColumnName("TKindFreeKod");

                entity.Property(e => e.TkindKod)
                    .HasMaxLength(50)
                    .HasColumnName("TKindKod");

                entity.Property(e => e.UpdateMelay).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblHeshDocument>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblHeshDocuments_PK")
                    .IsClustered(false);

                entity.ToTable("tblHeshDocuments");

                entity.HasIndex(e => e.MaintenanceRequestId, "MaintenanceRequestID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Active).HasDefaultValueSql("(0)");

                entity.Property(e => e.Asmachta).HasDefaultValueSql("(0)");

                entity.Property(e => e.Asmachta2).HasMaxLength(100);

                entity.Property(e => e.Asmachta2ListId)
                    .IsRequired()
                    .HasColumnName("Asmachta2ListID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Asmachta2Old)
                    .HasDefaultValueSql("(0)")
                    .HasComment("לדוג': בקבלה מציין את מס' הודעת החיוב עליה שולם");

                entity.Property(e => e.Asmachta3).HasMaxLength(100);

                entity.Property(e => e.BExport)
                    .HasColumnName("bExport")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BIncome)
                    .HasColumnName("bIncome")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BPayed)
                    .HasColumnName("bPayed")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם החשבונית שולמה (בד\"כ אוטו' ע\"י יצירת קובץ מס\"ב)");

                entity.Property(e => e.BPikadon)
                    .HasColumnName("bPikadon")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DateCreate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))")
                    .HasComment("תאריך יצירה");

                entity.Property(e => e.DateSendByMail).HasColumnType("datetime");

                entity.Property(e => e.DayarIdCard).HasMaxLength(50);

                entity.Property(e => e.DayarName).HasMaxLength(50);

                entity.Property(e => e.DayarPlace)
                    .HasMaxLength(50)
                    .HasComment("מיקום הדייר: מחלקה; חדר");

                entity.Property(e => e.Details2).HasMaxLength(300);

                entity.Property(e => e.DocNameId).HasColumnName("DocNameID");

                entity.Property(e => e.DocSum)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("הסכום הסופי במסמך");

                entity.Property(e => e.Finished)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם המסמך הסתיים והופק?");

                entity.Property(e => e.FolderId)
                    .HasColumnName("FolderID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מס' התיקיה שאליה משתייך המסמך");

                entity.Property(e => e.HeshKod).HasMaxLength(30);

                entity.Property(e => e.KodMiunId)
                    .HasColumnName("KodMiunID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("נושא החשבונית ע\"פ שיוך לקוד מיון");

                entity.Property(e => e.LocationId).HasColumnName("locationID");

                entity.Property(e => e.MahamSum)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("ס\"ך המע\"מ שמופיע במסמך (יש פריטים/שרותים שיש עליהם מע\"מ ויש שאין)");

                entity.Property(e => e.MahsanDestId).HasColumnName("MahsanDestID");

                entity.Property(e => e.MahsanId)
                    .HasColumnName("MahsanID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("המחסן , עבור :תעודת כניסה למלאי, בעת הנפקת חשבונית יוצא הפריט מהמחסן המוגדר בטבלת tblPritim");

                entity.Property(e => e.MaintenanceRequestId)
                    .HasColumnName("MaintenanceRequestID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.MelayOutDest).HasDefaultValueSql("(0)");

                entity.Property(e => e.Month)
                    .HasMaxLength(10)
                    .HasComment("החודש אליו מתייחסת הפעולה");

                entity.Property(e => e.NimanAddress).HasMaxLength(100);

                entity.Property(e => e.NimanName)
                    .HasMaxLength(50)
                    .HasComment("השם אליו מופנה המסמך");

                entity.Property(e => e.OsekId)
                    .HasMaxLength(30)
                    .HasColumnName("OsekID");

                entity.Property(e => e.ParitKod2).HasMaxLength(50);

                entity.Property(e => e.Printed)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם הודפס המקור?");

                entity.Property(e => e.RelatedClientId).HasColumnName("RelatedClientID");

                entity.Property(e => e.SapakOsekId).HasMaxLength(50);

                entity.Property(e => e.UserCreate)
                    .HasMaxLength(30)
                    .HasComment("יוצר המסמך");
            });

            modelBuilder.Entity<TblHeshGroup>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblHeshGroups_PK")
                    .IsClustered(false);

                entity.ToTable("tblHeshGroups");

                entity.HasIndex(e => e.Kod, "GroupKod")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Item, "GroupName")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Kod).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblHeshSafe>(entity =>
            {
                entity.ToTable("tblHeshSafe");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Action).HasDefaultValueSql("((0))");

                entity.Property(e => e.Bdel).HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Description).HasDefaultValueSql("('')");

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserCreateId).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblHeshSetting>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblHeshSetting");

                entity.Property(e => e.BSetChargesUnActiveOnDoc)
                    .HasColumnName("bSetChargesUnActiveOnDoc")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BZugCaption)
                    .HasColumnName("bZugCaption")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CollectByMiun).HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");
            });

            modelBuilder.Entity<TblHeshTkind>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblHeshTKind_PK")
                    .IsClustered(false);

                entity.ToTable("tblHeshTKind");

                entity.HasComment("חשבונות המתייחסים לסוג תנועה מסויים");

                entity.HasIndex(e => e.TkindId, "TKindID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TkindId, "tblTnuahKindstblHeshTKind")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.HeshbonId)
                    .HasColumnName("HeshbonID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("אחד החשבונות המתייחסים לסוג תנועה זה");

                entity.Property(e => e.Hova)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם זהו חשבון חובה או זכות");

                entity.Property(e => e.Main)
                    .HasDefaultValueSql("(1)")
                    .HasComment("לכל רשימת חשבונות זכות/חובה יש חשבון ראשי אחד");

                entity.Property(e => e.Per)
                    .HasDefaultValueSql("(100)")
                    .HasComment("האחוז  היחסי לחשבון זה");

                entity.Property(e => e.TkindId)
                    .HasColumnName("TKindID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("סוג התנועה");

                entity.HasOne(d => d.Tkind)
                    .WithMany(p => p.TblHeshTkinds)
                    .HasForeignKey(d => d.TkindId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("tblHeshTKind_FK00");
            });

            modelBuilder.Entity<TblHilutimLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblHilutimLog");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Sum1).HasColumnType("money");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblHistoryUserInSty>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblHistoryUserInSty");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblHospitalVisit>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblHospitalVisits");

                entity.Property(e => e.Archive).HasColumnName("archive");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(1000);

                entity.Property(e => e.Hospital).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.Visitor).HasMaxLength(50);
            });

            modelBuilder.Entity<TblHtmlCaption>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblHtmlCaption");

                entity.HasIndex(e => new { e.Caption, e.FormId, e.Key1 }, "IndexFromKey")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Caption)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Key1).HasMaxLength(200);

                entity.Property(e => e.KeyComment).HasMaxLength(200);

                entity.Property(e => e.OrderId).HasColumnName("orderId");
            });

            modelBuilder.Entity<TblHtmlDefinition>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblHtmlDefinition");

                entity.HasIndex(e => e.FormId, "NonClusteredIndex-20140910-114501")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<TblHtmlFormAsmachtum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblHtmlFormAsmachta");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.LocationId).HasColumnName("locationId");

                entity.Property(e => e.Type1).HasColumnName("type1");
            });

            modelBuilder.Entity<TblHtmlTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblHtmlTemp");

                entity.Property(e => e.HtmlSrc).HasColumnType("ntext");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1).HasMaxLength(50);
            });

            modelBuilder.Entity<TblImportMedLife>(entity =>
            {
                entity.ToTable("tblImportMedLife");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.MonitorId).HasColumnName("MonitorID");

                entity.Property(e => e.PatientId).HasColumnName("PatientID");
            });

            modelBuilder.Entity<TblInvalidMedadim>(entity =>
            {
                entity.HasKey(e => e.ClientId)
                    .IsClustered(false);

                entity.ToTable("tblInvalidMedadim");

                entity.Property(e => e.ClientId).ValueGeneratedNever();

                entity.Property(e => e.DateTime1)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Madad).HasMaxLength(1000);
            });

            modelBuilder.Entity<TblItemsUnique>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblItemsUnique_PK")
                    .IsClustered(false);

                entity.ToTable("tblItemsUnique");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Asmachta).HasMaxLength(25);

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.CurrentPlace)
                    .HasMaxLength(50)
                    .HasComment("מיקום נוכחי של החפץ");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.ItemId)
                    .HasMaxLength(255)
                    .HasColumnName("ItemID")
                    .HasComment("מזהה יחודילפריט");

                entity.Property(e => e.ItemKod)
                    .HasMaxLength(100)
                    .HasComment("מזהה לקוד פריט");

                entity.Property(e => e.Kod1).HasMaxLength(30);

                entity.Property(e => e.Memo1).HasMaxLength(100);

                entity.Property(e => e.OrgPlace)
                    .HasMaxLength(50)
                    .HasColumnName("orgPlace")
                    .HasComment("מיקום אמיתי של החפץ");

                entity.Property(e => e.SapakId).HasColumnName("SapakID");

                entity.Property(e => e.SapakName).HasMaxLength(30);

                entity.Property(e => e.UniqueId).HasMaxLength(50);
            });

            modelBuilder.Entity<TblKabalaDef>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblKabalaDef");

                entity.Property(e => e.Caption1)
                    .HasMaxLength(25)
                    .HasColumnName("caption1");

                entity.Property(e => e.Key1)
                    .HasMaxLength(25)
                    .HasColumnName("key1");

                entity.Property(e => e.OrdId).HasColumnName("ordID");

                entity.Property(e => e.Tag1)
                    .HasMaxLength(25)
                    .HasColumnName("tag1");
            });

            modelBuilder.Entity<TblKind1>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblKind1_PK")
                    .IsClustered(false);

                entity.ToTable("tblKind1");

                entity.HasIndex(e => e.MainId, "MainID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasComment("שם הסיווג הראשי");

                entity.Property(e => e.MainId)
                    .HasColumnName("MainID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblKind2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblKind2");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.MainId, "MainID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(25);

                entity.Property(e => e.MainId).HasColumnName("MainID");
            });

            modelBuilder.Entity<TblKodMiun>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblKodMiun_PK")
                    .IsClustered(false);

                entity.ToTable("tblKodMiun");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DocId)
                    .HasColumnName("DocID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.KodMiunName).HasMaxLength(30);

                entity.Property(e => e.MahamKindId)
                    .HasColumnName("MahamKindID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RevahCaptionId)
                    .HasColumnName("RevahCaptionID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblLangKey>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblLangKeys");

                entity.Property(e => e.Ctrl)
                    .HasMaxLength(255)
                    .HasColumnName("ctrl");

                entity.Property(e => e.Eng).HasMaxLength(100);

                entity.Property(e => e.Frm)
                    .HasMaxLength(255)
                    .HasColumnName("frm");

                entity.Property(e => e.Heb).HasMaxLength(100);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<TblLangKeysNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblLangKeysNew");

                entity.Property(e => e.Ctrl)
                    .HasMaxLength(255)
                    .HasColumnName("ctrl");

                entity.Property(e => e.Eng).HasMaxLength(100);

                entity.Property(e => e.Frm)
                    .HasMaxLength(255)
                    .HasColumnName("frm");

                entity.Property(e => e.Heb).HasMaxLength(100);
            });

            modelBuilder.Entity<TblLangLv>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblLangLv");

                entity.Property(e => e.BCustom).HasColumnName("bCustom");

                entity.Property(e => e.BScroll).HasColumnName("bScroll");

                entity.Property(e => e.BShowHeader).HasColumnName("bShowHeader");

                entity.Property(e => e.Cap1).HasMaxLength(240);

                entity.Property(e => e.Cap1Eng)
                    .HasMaxLength(240)
                    .HasColumnName("Cap1_Eng");

                entity.Property(e => e.Cap1Heb)
                    .HasMaxLength(240)
                    .HasColumnName("Cap1_Heb");

                entity.Property(e => e.CellP).HasMaxLength(3);

                entity.Property(e => e.CellS).HasMaxLength(3);

                entity.Property(e => e.ColLinks).HasMaxLength(150);

                entity.Property(e => e.Column1Eng)
                    .HasMaxLength(500)
                    .HasColumnName("Column1_ENG");

                entity.Property(e => e.Column1Heb).HasColumnName("Column1_HEB");

                entity.Property(e => e.FontC).HasMaxLength(15);

                entity.Property(e => e.FontCsize)
                    .HasMaxLength(3)
                    .HasColumnName("FontCSize");

                entity.Property(e => e.FontH).HasMaxLength(15);

                entity.Property(e => e.FontHsize)
                    .HasMaxLength(3)
                    .HasColumnName("FontHSize");

                entity.Property(e => e.Grid1).HasMaxLength(8);

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("key1");

                entity.Property(e => e.Kind1).HasMaxLength(100);

                entity.Property(e => e.ModeSelect).HasMaxLength(6);

                entity.Property(e => e.OrderCaption).HasMaxLength(10);

                entity.Property(e => e.Size1).HasMaxLength(100);

                entity.Property(e => e.SizeAll)
                    .HasMaxLength(50)
                    .HasColumnName("sizeAll");

                entity.Property(e => e.Tag1).HasColumnName("tag1");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblLangMsg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblLangMsg");

                entity.Property(e => e.Eng).HasMaxLength(500);

                entity.Property(e => e.Heb).HasMaxLength(500);

                entity.Property(e => e.MsgKey)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblLangMsgNoDup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblLangMsgNoDup");

                entity.HasIndex(e => e.MsgKey, "IX_tblLangMsg")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Eng).HasMaxLength(500);

                entity.Property(e => e.Frn).HasMaxLength(500);

                entity.Property(e => e.Heb).HasMaxLength(500);

                entity.Property(e => e.MsgKey)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblLeaderSubject>(entity =>
            {
                entity.ToTable("tblLeaderSubjects");

                entity.HasIndex(e => new { e.Item, e.MedicalType }, "UQ__tblLeade__A0C7C8608427C4CE")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblLedMed>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblLedMed");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.DrugKod).HasMaxLength(100);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.TsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("tsDate");

                entity.Property(e => e.Usercreate)
                    .HasMaxLength(150)
                    .HasColumnName("usercreate");

                entity.Property(e => e.Usercreateid).HasColumnName("usercreateid");
            });

            modelBuilder.Entity<TblLevelPigur>(entity =>
            {
                entity.ToTable("tblLevelPigur");

                entity.HasIndex(e => e.Item, "indx1")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblLimbWeight>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblLimbWeight");

                entity.HasIndex(e => e.Id, "UQ__tblLimbW__3213E83EEADE9039")
                    .IsUnique();

                entity.Property(e => e.Archive)
                    .HasColumnName("archive")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasColumnName("item");

                entity.Property(e => e.Val).HasColumnName("val");
            });

            modelBuilder.Entity<TblListPrice>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblListPrices_PK")
                    .IsClustered(false);

                entity.ToTable("tblListPrices");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Item, "Item")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Key1, "Key1")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.LocationId, "LocationID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.SapakId, "SapakID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BSale)
                    .HasColumnName("bSale")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם זהו מחירון מכירה או קניה?");

                entity.Property(e => e.BasicList)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מחירון הבסיס שעליו מסתמך מחירון זה");

                entity.Property(e => e.Caption1).HasMaxLength(100);

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך יצירה");

                entity.Property(e => e.Date2)
                    .HasColumnType("datetime")
                    .HasComment("תאריך נעילת המחירון");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasComment("שם המחירון");

                entity.Property(e => e.Key1).HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.Madad1).HasColumnType("money");

                entity.Property(e => e.Multiple)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מכפלת מחירון הבסיס");

                entity.Property(e => e.NKind)
                    .HasColumnName("nKind")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Round)
                    .HasDefaultValueSql("(0)")
                    .HasComment("שיטת עיגול:0-ללא,1-למעלה,2-למטה");

                entity.Property(e => e.SapakId)
                    .HasColumnName("SapakID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("ספק מקושר למחירוני רכש");
            });

            modelBuilder.Entity<TblListPriceDetail>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblListPriceDetails_PK")
                    .IsClustered(false);

                entity.ToTable("tblListPriceDetails");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ListId, "ListID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BChargeByStay).HasColumnName("bChargeByStay");

                entity.Property(e => e.BChargeByTofes17).HasColumnName("bChargeByTofes17");

                entity.Property(e => e.BPriceConst).HasColumnName("bPriceConst");

                entity.Property(e => e.CoinId).HasColumnName("CoinID");

                entity.Property(e => e.ListId)
                    .HasColumnName("ListID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה למחירון מטבלת tblListPrices");

                entity.Property(e => e.MakatSapak)
                    .HasMaxLength(50)
                    .HasColumnName("makatSapak");

                entity.Property(e => e.MakatSpak)
                    .HasMaxLength(30)
                    .HasComment("מק\"ט ספק לפריט");

                entity.Property(e => e.NType).HasColumnName("nType");

                entity.Property(e => e.ParitKod)
                    .HasMaxLength(50)
                    .HasComment("קוד הפריט");

                entity.Property(e => e.ParitKodOld).HasColumnName("paritKodOld");

                entity.Property(e => e.ParitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מחיר הפריט");

                entity.Property(e => e.Price2).HasColumnType("money");

                entity.Property(e => e.PriceCoin).HasMaxLength(10);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");

                entity.Property(e => e.UpdateUserId).HasColumnName("UpdateUserID");
            });

            modelBuilder.Entity<TblListPriceRoom>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblListPriceRoom_PK")
                    .IsClustered(false);

                entity.ToTable("tblListPriceRoom");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Archive)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מחירון היסטורי-ארכיב");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך יצירה");

                entity.Property(e => e.Date2)
                    .HasColumnType("datetime")
                    .HasComment("תאריך עדכון אחרון");

                entity.Property(e => e.FactorAhzaka).HasDefaultValueSql("((1))");

                entity.Property(e => e.FactorEnterPrice).HasDefaultValueSql("((1))");

                entity.Property(e => e.Madad)
                    .HasDefaultValueSql("(0)")
                    .HasComment("המדד למחירון");

                entity.Property(e => e.MadadDate).HasColumnType("datetime");

                entity.Property(e => e.Name1)
                    .HasMaxLength(200)
                    .HasComment("שם מחירון-שימושי במקרה של ארכיון");
            });

            modelBuilder.Entity<TblListPriceRoomDetail>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblListPriceRoomDetails_PK")
                    .IsClustered(false);

                entity.ToTable("tblListPriceRoomDetails");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ListId, "ListID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ahzaka).HasColumnType("money");

                entity.Property(e => e.BasicPrice).HasColumnType("money");

                entity.Property(e => e.ListId)
                    .HasColumnName("ListID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה למחירון מטבלת tblListPrices");

                entity.Property(e => e.Price1)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מחיר דיור רגיל");

                entity.Property(e => e.Price2)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מחיר דיור מוגן");

                entity.Property(e => e.Price3)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PriceDolar).HasColumnType("money");

                entity.Property(e => e.RoomId)
                    .HasColumnName("RoomID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("קוד הפריט");
            });

            modelBuilder.Entity<TblListPriceRule>(entity =>
            {
                entity.ToTable("tblListPriceRules");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AddSum).HasColumnType("money");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.ParitKod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.RuleName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblListPriceShehium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblListPriceShehia");

                entity.Property(e => e.Extra).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1).HasMaxLength(50);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.ShehiaCap).HasMaxLength(100);

                entity.Property(e => e.StatusTifkud).HasMaxLength(30);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.ZugOne).HasMaxLength(50);
            });

            modelBuilder.Entity<TblLogFormsAction>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblLogFormsAction");

                entity.Property(e => e.Action1).HasMaxLength(50);

                entity.Property(e => e.ClientFormId).HasColumnName("ClientFormID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.FormTemplateId).HasColumnName("FormTemplateID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.Vbform)
                    .HasMaxLength(200)
                    .HasColumnName("VBForm");
            });

            modelBuilder.Entity<TblLogInfectionsClosed>(entity =>
            {
                entity.ToTable("tblLogInfectionsClosed");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.StatusName).HasMaxLength(100);

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp");

                entity.Property(e => e.Userid).HasColumnName("userid");

                entity.Property(e => e.Username)
                    .HasMaxLength(200)
                    .HasColumnName("username");
            });

            modelBuilder.Entity<TblLogTable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblLogTable");

                entity.Property(e => e.Action1).HasMaxLength(10);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.RecDetails).HasColumnType("ntext");

                entity.Property(e => e.RecId).HasColumnName("RecID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.Table1).HasMaxLength(20);

                entity.Property(e => e.Userid).HasColumnName("userid");
            });

            modelBuilder.Entity<TblLogTableViewForm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblLogTableViewForms");

                entity.Property(e => e.ClientFormId).HasColumnName("ClientFormID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1).HasMaxLength(500);

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblLogUserCheckAvhanotToClientSeegnal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblLogUserCheckAvhanotToClientSeegnal");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Userid).HasColumnName("userid");
            });

            modelBuilder.Entity<TblMaakavimm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMaakavimm");

                entity.Property(e => e.זמניטיפולבפועל)
                    .HasMaxLength(255)
                    .HasColumnName("זמני טיפול בפועל");

                entity.Property(e => e.מזההמערכת).HasColumnName("מזהה מערכת");

                entity.Property(e => e.מטפל).HasMaxLength(255);

                entity.Property(e => e.קטגוריה).HasMaxLength(255);

                entity.Property(e => e.רישוםסיוםביצוע)
                    .HasMaxLength(255)
                    .HasColumnName("רישום סיום ביצוע");

                entity.Property(e => e.שםהטיפול)
                    .HasMaxLength(255)
                    .HasColumnName("שם הטיפול");

                entity.Property(e => e.שםמשפחה)
                    .HasMaxLength(255)
                    .HasColumnName("שם משפחה");

                entity.Property(e => e.שםפרטי)
                    .HasMaxLength(255)
                    .HasColumnName("שם פרטי");

                entity.Property(e => e.שעתביצוע)
                    .HasColumnType("datetime")
                    .HasColumnName("שעת ביצוע");

                entity.Property(e => e.תאריך).HasColumnType("datetime");

                entity.Property(e => e.תאריךסיוםביצוע)
                    .HasColumnType("datetime")
                    .HasColumnName("תאריך סיום ביצוע");

                entity.Property(e => e.תיאורהטיפול)
                    .HasMaxLength(255)
                    .HasColumnName("תיאור הטיפול");
            });

            modelBuilder.Entity<TblMaakavimm1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMaakavimm1");

                entity.Property(e => e.זמניטיפולבפועל)
                    .HasMaxLength(255)
                    .HasColumnName("זמני טיפול בפועל");

                entity.Property(e => e.מזההמערכת).HasColumnName("מזהה מערכת");

                entity.Property(e => e.מטפל).HasMaxLength(255);

                entity.Property(e => e.קטגוריה).HasMaxLength(255);

                entity.Property(e => e.רישוםסיוםביצוע)
                    .HasMaxLength(255)
                    .HasColumnName("רישום סיום ביצוע");

                entity.Property(e => e.שםהטיפול)
                    .HasMaxLength(255)
                    .HasColumnName("שם הטיפול");

                entity.Property(e => e.שםמשפחה)
                    .HasMaxLength(255)
                    .HasColumnName("שם משפחה");

                entity.Property(e => e.שםפרטי)
                    .HasMaxLength(255)
                    .HasColumnName("שם פרטי");

                entity.Property(e => e.שעתביצוע)
                    .HasColumnType("datetime")
                    .HasColumnName("שעת ביצוע");

                entity.Property(e => e.תאריך).HasColumnType("datetime");

                entity.Property(e => e.תאריךסיוםביצוע)
                    .HasColumnType("datetime")
                    .HasColumnName("תאריך סיום ביצוע");

                entity.Property(e => e.תיאורהטיפול).HasColumnName("תיאור הטיפול");
            });

            modelBuilder.Entity<TblMabarControlScore>(entity =>
            {
                entity.ToTable("tblMabarControlScores");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LocId).HasColumnName("LocID");

                entity.Property(e => e.MainId).HasColumnName("MainID");
            });

            modelBuilder.Entity<TblMabarKodFollow>(entity =>
            {
                entity.ToTable("tblMabarKodFollow");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.BDocsToFamily).HasColumnName("bDocsToFamily");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Comments).HasMaxLength(500);

                entity.Property(e => e.DateDocsToMabar).HasColumnType("datetime");

                entity.Property(e => e.PriceBeforeKod).HasColumnType("money");
            });

            modelBuilder.Entity<TblMabarReport>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblMabarReports_PK")
                    .IsClustered(false);

                entity.ToTable("tblMabarReports");

                entity.HasIndex(e => e.MahlakaId, "MahlakaID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TypFormId, "TypFormID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.DayPrice).HasDefaultValueSql("(0)");

                entity.Property(e => e.Details).HasMaxLength(50);

                entity.Property(e => e.FieldA)
                    .HasMaxLength(50)
                    .HasComment("שדה נוסף משתנה בהתאם לטופס");

                entity.Property(e => e.Locked)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם הנתונים סגורים מפני עריכה");

                entity.Property(e => e.MahlakaId)
                    .HasColumnName("MahlakaID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("קישור למחלקה tblDefMahlaka");

                entity.Property(e => e.Month)
                    .HasDefaultValueSql("(0)")
                    .HasComment("החודש אליו מתייחס הדוח");

                entity.Property(e => e.ReportName).HasMaxLength(30);

                entity.Property(e => e.TypFormId)
                    .HasColumnName("TypFormID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("tblFormTemplates מטבלת");

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserLocked)
                    .HasMaxLength(30)
                    .HasComment("נועל הטופס");

                entity.Property(e => e.Year).HasComment("השנה אליה מתייחס הדוח");
            });

            modelBuilder.Entity<TblMadadim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMadadim");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TblMaham>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMaham");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Maham1).HasColumnType("money");
            });

            modelBuilder.Entity<TblMahsanDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMahsanDetail");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KodParit)
                    .HasMaxLength(120)
                    .HasComment("מזהה לפריט");

                entity.Property(e => e.KodparitOld).HasColumnName("kodparitOld");

                entity.Property(e => e.MahsanId)
                    .HasColumnName("MahsanID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה למחסן");

                entity.Property(e => e.MelayMin)
                    .HasDefaultValueSql("(0)")
                    .HasComment("כמות מינימום למלאי");

                entity.Property(e => e.MelayOpt)
                    .HasColumnName("MelayOPT")
                    .HasDefaultValueSql("(0)")
                    .HasComment("כמות מלאי אופטימלית");

                entity.Property(e => e.MelayRest)
                    .HasDefaultValueSql("(0)")
                    .HasComment("כמות נוכחית במלאי");
            });

            modelBuilder.Entity<TblMahsanim>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblMahsanim_PK")
                    .IsClustered(false);

                entity.ToTable("tblMahsanim");

                entity.HasIndex(e => e.LocationId, "LocationID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.NKind)
                    .HasColumnName("nKind")
                    .HasDefaultValueSql("(0)")
                    .HasComment("0-רגיל, 1-מחסן תרופות");

                entity.Property(e => e.NLevel)
                    .HasColumnName("nLevel")
                    .HasDefaultValueSql("(1)")
                    .HasComment("דרגה של המחסן");
            });

            modelBuilder.Entity<TblMaintCrmAction>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMaint_CRM_Action");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(200);
            });

            modelBuilder.Entity<TblMaintCrmStatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMaint_CRM_Status");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(200);
            });

            modelBuilder.Entity<TblMaintenance>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblMaintenance_PK")
                    .IsClustered(false);

                entity.ToTable("tblMaintenance");

                entity.HasIndex(e => e.AgafId, "AgafID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ChargeKod, "ChargeKod")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ItemId, "ItemID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.LocationId, "LocationID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.RoomId, "RoomID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.UserOrderId, "UserOrderID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.WorkerDoneId, "WorkerDoneID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.LocationId, e.BClosed }, "idx_tblMaintenance_LocationID_bClosed_inc_ID_DateR_TakalaKind_JumpDays_DateReccurenceEnd_bDel")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AgafId)
                    .HasColumnName("AgafID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AllowedComments)
                    .HasMaxLength(255)
                    .HasComment("הערות לגבי הביצוע");

                entity.Property(e => e.AllowedSendTo)
                    .HasDefaultValueSql("(0)")
                    .HasComment("index to user that we want to make the job");

                entity.Property(e => e.BClosed)
                    .HasColumnName("bClosed")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם קריאת התחזוקה סגורה");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BHaveResponsibility)
                    .HasColumnName("bHaveResponsibility")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם המוצר באחריות");

                entity.Property(e => e.BSentByMail)
                    .HasColumnName("bSentByMail")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ChargeKod).HasMaxLength(100);

                entity.Property(e => e.ClientToCharge).HasDefaultValueSql("(0)");

                entity.Property(e => e.ClosedDate)
                    .HasColumnType("datetime")
                    .HasComment("תאריך סגירה");

                entity.Property(e => e.ClosedTime)
                    .HasColumnType("datetime")
                    .HasComment("שעת סגירה");

                entity.Property(e => e.DateA)
                    .HasColumnType("datetime")
                    .HasComment("date allowed");

                entity.Property(e => e.DateD)
                    .HasColumnType("datetime")
                    .HasComment("Date Done");

                entity.Property(e => e.DateP).HasColumnType("datetime");

                entity.Property(e => e.DateR)
                    .HasColumnType("datetime")
                    .HasComment("Request Date");

                entity.Property(e => e.DateReccurenceEnd).HasColumnType("datetime");

                entity.Property(e => e.DateResponsibility)
                    .HasColumnType("datetime")
                    .HasComment("תאריך פקיעת האחריות");

                entity.Property(e => e.DateS)
                    .HasColumnType("datetime")
                    .HasComment("ת. התחלת ביצוע");

                entity.Property(e => e.DayarPhone).HasMaxLength(20);

                entity.Property(e => e.DayarimNames).HasComment("שמות דיירים אליהם מתייחסת התקלה");

                entity.Property(e => e.DoneComments)
                    .HasMaxLength(255)
                    .HasComment("הערות לגבי הביצוע");

                entity.Property(e => e.DoneLinkFile)
                    .HasMaxLength(255)
                    .HasComment("לינק לקובץ נלווה");

                entity.Property(e => e.InventarBarcode).HasDefaultValueSql("((0))");

                entity.Property(e => e.InventarKod)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מצביע לאיבר");

                entity.Property(e => e.ItemsUsed)
                    .HasMaxLength(255)
                    .HasComment("משורר בפסיק נקודה  הרשימה הזו מעדכנת את המלאי\r\nמשורר בפסיק נקודה  הרשימה הזו מעדכנת את המלאי\r\n'זה משורשר כולל כמות  משורשר בפסיק נקודה  הרשימה הזו מעדכנת את המלאי");

                entity.Property(e => e.JumpDays).HasDefaultValueSql("((0))");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NLevel)
                    .HasColumnName("nLevel")
                    .HasDefaultValueSql("(0)")
                    .HasComment("0=רגיל,1=דחוף,2=מיידי");

                entity.Property(e => e.NStatus)
                    .HasColumnName("nStatus")
                    .HasDefaultValueSql("(0)")
                    .HasComment("באיזה מצב אנחנו עודמים לגבי הקריאה: לא בוצע,בוצע חלקית,בוצע במלואו=2");

                entity.Property(e => e.NWorkerKind)
                    .HasColumnName("nWorkerKind")
                    .HasDefaultValueSql("(0)")
                    .HasComment("0=עובד פנימי,1=ספק");

                entity.Property(e => e.PriceComments).HasMaxLength(50);

                entity.Property(e => e.RequestComments)
                    .HasMaxLength(255)
                    .HasComment("הערות");

                entity.Property(e => e.RequestItemsNeed)
                    .HasMaxLength(255)
                    .HasComment("רשימה של ציוד נדרש אנחנו רושמים את האנדקס מופרד בפסיק נקודה");

                entity.Property(e => e.RequestKindId).HasColumnName("RequestKindID");

                entity.Property(e => e.RequestSendTo)
                    .HasDefaultValueSql("(0)")
                    .HasComment("index the user that we want to allow the request");

                entity.Property(e => e.RoomId)
                    .HasColumnName("RoomID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("יכול להיות גם מסדרון");

                entity.Property(e => e.TakalaDescription)
                    .HasColumnType("ntext")
                    .HasComment("תיאור תקלה");

                entity.Property(e => e.TakalaKind).HasDefaultValueSql("(0)");

                entity.Property(e => e.TimeA)
                    .HasColumnType("datetime")
                    .HasComment("time allowed");

                entity.Property(e => e.TimeD)
                    .HasColumnType("datetime")
                    .HasComment("Time Done");

                entity.Property(e => e.TimeP).HasColumnType("datetime");

                entity.Property(e => e.TimeR)
                    .HasColumnType("datetime")
                    .HasComment("Request Time");

                entity.Property(e => e.TimeS)
                    .HasColumnType("datetime")
                    .HasComment("שעת התחלת ביצוע");

                entity.Property(e => e.UserAllowed)
                    .HasDefaultValueSql("(0)")
                    .HasComment("user id that Allowed");

                entity.Property(e => e.UserIdclosed).HasColumnName("UserIDClosed");

                entity.Property(e => e.UserOrderId)
                    .HasColumnName("UserOrderID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לסידור עבודה");

                entity.Property(e => e.UserRequest)
                    .HasDefaultValueSql("(0)")
                    .HasComment("user id that Request");

                entity.Property(e => e.UserSetDone)
                    .HasDefaultValueSql("(0)")
                    .HasComment("המשתמש שסימן את זה כמבוצע לא לגבי המבצע");

                entity.Property(e => e.WorkerDoneId)
                    .HasColumnName("WorkerDoneID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לעובד/לספק");

                entity.Property(e => e.Yozem)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblMaintenanceCrm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMaintenanceCRM");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Comments).HasDefaultValueSql("('')");

                entity.Property(e => e.DateCreated).HasColumnType("date");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Tstamp)
                    .HasColumnType("date")
                    .HasColumnName("tstamp");

                entity.Property(e => e.UserCreated).HasMaxLength(200);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblMaintenanceOrder>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblMaintenanceOrder_PK")
                    .IsClustered(false);

                entity.ToTable("tblMaintenanceOrder");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.MaintenanceId, "MaintenanceID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.UserId, "UserID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDone)
                    .HasColumnName("bDone")
                    .HasDefaultValueSql("(0)")
                    .HasComment("בוצע");

                entity.Property(e => e.Comments1).HasMaxLength(250);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DoneDate)
                    .HasMaxLength(14)
                    .HasComment("ת. עדכון");

                entity.Property(e => e.MaintenanceId)
                    .HasColumnName("MaintenanceID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("קישור לקריאת התחזוקה");

                entity.Property(e => e.Place1)
                    .HasMaxLength(250)
                    .HasComment("מיקום");

                entity.Property(e => e.Theme)
                    .HasMaxLength(250)
                    .HasComment("נושא התקלה");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("עובד מבצע");
            });

            modelBuilder.Entity<TblMange17>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMange17");

                entity.HasIndex(e => e.ClientId, "IX_tblMange17")
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DateS, "IX_tblMange17_1")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DateE, "IX_tblMange17_2")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BNotIncLastDay).HasColumnName("bNotIncLastDay");

                entity.Property(e => e.BUnLock).HasColumnName("bUnLock");

                entity.Property(e => e.BUseAll)
                    .HasColumnName("bUseAll")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BZzz).HasColumnName("bZZZ");

                entity.Property(e => e.BackDateUse).HasMaxLength(12);

                entity.Property(e => e.BackDateUse2).HasColumnType("datetime");

                entity.Property(e => e.BikurNum).HasMaxLength(50);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.CountUse).HasDefaultValueSql("((0))");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.DateTemp).HasColumnType("datetime");

                entity.Property(e => e.DateUse).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IdRes).HasMaxLength(50);

                entity.Property(e => e.Kod1).HasMaxLength(20);

                entity.Property(e => e.KodId).HasColumnName("KodID");

                entity.Property(e => e.LastCharge).HasColumnType("datetime");

                entity.Property(e => e.Memo1).HasMaxLength(300);

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.NCount)
                    .HasColumnName("nCount")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Nnn1).HasColumnName("nnn1");

                entity.Property(e => e.NumUse).HasDefaultValueSql("((0))");

                entity.Property(e => e.Price1).HasColumnType("money");

                entity.Property(e => e.PriceNoMaham).HasColumnType("money");

                entity.Property(e => e.PriceWithMaham).HasColumnType("money");

                entity.Property(e => e.SapakId).HasColumnName("SapakID");

                entity.Property(e => e.SnifId).HasColumnName("SnifID");

                entity.Property(e => e.Type1).HasDefaultValueSql("((0))");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblManot>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblManot_PK")
                    .IsClustered(false);

                entity.ToTable("tblManot");

                entity.HasIndex(e => e.ManaId, "ManaID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Closed)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם המנה סגורה");

                entity.Property(e => e.Item)
                    .HasMaxLength(50)
                    .HasComment("שם המנה");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.ManaDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))");

                entity.Property(e => e.ManaId)
                    .HasColumnName("ManaID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblMarketingContract>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMarketingContracts");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.ContractName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.SuggestId).HasColumnName("SuggestID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserName).HasMaxLength(50);
            });

            modelBuilder.Entity<TblMarketingFollow>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMarketingFollow");

                entity.Property(e => e.BLocked).HasColumnName("bLocked");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateLocked).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Info1).HasMaxLength(400);

                entity.Property(e => e.Info2).HasMaxLength(400);
            });

            modelBuilder.Entity<TblMarketingFollowDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMarketingFollowDetails");

                entity.Property(e => e.Date1).HasMaxLength(12);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Key1).HasMaxLength(50);

                entity.Property(e => e.Memo1).HasColumnType("text");

                entity.Property(e => e.Time1).HasMaxLength(12);

                entity.Property(e => e.User1).HasMaxLength(50);
            });

            modelBuilder.Entity<TblMasavSetSumToKabala>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMasavSetSumToKabala");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.MimId).HasColumnName("mimID");

                entity.Property(e => e.Sum1).HasColumnType("money");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblMasavTempTable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMasavTempTable");

                entity.Property(e => e.Gid)
                    .IsRequired()
                    .HasColumnName("gid");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Sum1).HasColumnType("money");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblMedadim>(entity =>
            {
                entity.ToTable("tblMedadim");

                entity.HasIndex(e => e.CaseNumber, "UQ__tblMedad__9B948C91EF254A43")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AddressCityName)
                    .HasMaxLength(100)
                    .HasColumnName("Address_CityName");

                entity.Property(e => e.AddressHouse)
                    .HasMaxLength(100)
                    .HasColumnName("Address_House");

                entity.Property(e => e.AddressStreet)
                    .HasMaxLength(100)
                    .HasColumnName("Address_Street");

                entity.Property(e => e.AnasEndDate)
                    .HasMaxLength(10)
                    .HasColumnName("AnasEnd_Date");

                entity.Property(e => e.AnasEndTime)
                    .HasMaxLength(5)
                    .HasColumnName("AnasEnd_Time");

                entity.Property(e => e.AnasStartDate)
                    .HasMaxLength(10)
                    .HasColumnName("AnasStart_Date");

                entity.Property(e => e.AnasStartTime)
                    .HasMaxLength(5)
                    .HasColumnName("AnasStart_Time");

                entity.Property(e => e.BirthYear).HasColumnName("Birth_Year");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Case_Number");

                entity.Property(e => e.DiagnosisIcd)
                    .HasMaxLength(200)
                    .HasColumnName("Diagnosis_ICD");

                entity.Property(e => e.DischargeDate)
                    .HasMaxLength(10)
                    .HasColumnName("Discharge_Date");

                entity.Property(e => e.HospDate)
                    .HasMaxLength(10)
                    .HasColumnName("Hosp_Date");

                entity.Property(e => e.HospTime)
                    .HasMaxLength(5)
                    .HasColumnName("Hosp_Time");

                entity.Property(e => e.HospitalId)
                    .HasMaxLength(10)
                    .HasColumnName("Hospital_ID");

                entity.Property(e => e.IdTypes)
                    .HasMaxLength(1)
                    .HasColumnName("ID_Types");

                entity.Property(e => e.MeasurmentId)
                    .HasMaxLength(14)
                    .HasColumnName("Measurment_ID");

                entity.Property(e => e.PatientId)
                    .HasMaxLength(10)
                    .HasColumnName("Patient_ID");

                entity.Property(e => e.PatientbikoretId)
                    .HasMaxLength(1)
                    .HasColumnName("Patientbikoret_ID");

                entity.Property(e => e.ProcedureIcd)
                    .HasMaxLength(200)
                    .HasColumnName("Procedure_ICD");

                entity.Property(e => e.ProcedureIcdLocal)
                    .HasMaxLength(200)
                    .HasColumnName("Procedure_ICD_Local");

                entity.Property(e => e.Remarks).HasMaxLength(200);

                entity.Property(e => e.Ses).HasColumnName("SES");

                entity.Property(e => e.SurgDepId)
                    .HasMaxLength(10)
                    .HasColumnName("SurgDep_ID");

                entity.Property(e => e.SurgeryEndDate)
                    .HasMaxLength(10)
                    .HasColumnName("SurgeryEnd_Date");

                entity.Property(e => e.SurgeryEndTime)
                    .HasMaxLength(5)
                    .HasColumnName("SurgeryEnd_Time");

                entity.Property(e => e.SurgeryStartDate)
                    .HasMaxLength(10)
                    .HasColumnName("SurgeryStart_Date");

                entity.Property(e => e.SurgeryStartTime)
                    .HasMaxLength(5)
                    .HasColumnName("SurgeryStart_Time");
            });

            modelBuilder.Entity<TblMedadimBp>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("tblMedadimBP");

                entity.Property(e => e.RowId)
                    .ValueGeneratedNever()
                    .HasColumnName("rowId");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Notes).HasMaxLength(100);

                entity.HasOne(d => d.Row)
                    .WithOne(p => p.TblMedadimBp)
                    .HasForeignKey<TblMedadimBp>(d => d.RowId)
                    .HasConstraintName("FK_tblMedadimBP_tblClientMedadim");
            });

            modelBuilder.Entity<TblMedadimBreathing>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("tblMedadimBreathing");

                entity.Property(e => e.RowId).ValueGeneratedNever();

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(100);

                entity.HasOne(d => d.Row)
                    .WithOne(p => p.TblMedadimBreathing)
                    .HasForeignKey<TblMedadimBreathing>(d => d.RowId)
                    .HasConstraintName("FK_tblMedadimBreathing_tblClientMedadim");
            });

            modelBuilder.Entity<TblMedadimEtco2>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("tblMedadimETCO2");

                entity.Property(e => e.RowId).ValueGeneratedNever();

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Etco2).HasColumnName("ETCO2");

                entity.Property(e => e.Notes).HasMaxLength(100);

                entity.HasOne(d => d.Row)
                    .WithOne(p => p.TblMedadimEtco2)
                    .HasForeignKey<TblMedadimEtco2>(d => d.RowId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tblMedadimETCO2_tblClientMedadim");
            });

            modelBuilder.Entity<TblMedadimFiver>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("tblMedadimFiver");

                entity.Property(e => e.RowId).ValueGeneratedNever();

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FiverWay).HasMaxLength(10);

                entity.Property(e => e.Notes).HasMaxLength(100);

                entity.HasOne(d => d.Row)
                    .WithOne(p => p.TblMedadimFiver)
                    .HasForeignKey<TblMedadimFiver>(d => d.RowId)
                    .HasConstraintName("FK_tblMedadimFiver_tblClientMedadim");
            });

            modelBuilder.Entity<TblMedadimHeadScope>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("tblMedadimHeadScope");

                entity.Property(e => e.RowId).ValueGeneratedNever();

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Notes).HasMaxLength(100);
            });

            modelBuilder.Entity<TblMedadimMenstruation>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("tblMedadimMenstruation");

                entity.Property(e => e.RowId).ValueGeneratedNever();

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(200);

                entity.HasOne(d => d.Row)
                    .WithOne(p => p.TblMedadimMenstruation)
                    .HasForeignKey<TblMedadimMenstruation>(d => d.RowId)
                    .HasConstraintName("FK_tblMedadimMenstruation_tblClientMedadim");
            });

            modelBuilder.Entity<TblMedadimPressB>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("tblMedadimPressB");

                entity.Property(e => e.RowId).ValueGeneratedNever();

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(100);

                entity.Property(e => e.PressB).HasMaxLength(20);

                entity.HasOne(d => d.Row)
                    .WithOne(p => p.TblMedadimPressB)
                    .HasForeignKey<TblMedadimPressB>(d => d.RowId)
                    .HasConstraintName("FK_tblMedadimPressB_tblClientMedadim");
            });

            modelBuilder.Entity<TblMedadimProvDrain>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMedadimProvDrain");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Notes).HasMaxLength(100);
            });

            modelBuilder.Entity<TblMedadimProvZondum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMedadimProvZonda");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Notes).HasMaxLength(100);
            });

            modelBuilder.Entity<TblMedadimPulse>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("tblMedadimPulse");

                entity.Property(e => e.RowId).ValueGeneratedNever();

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BSadir).HasColumnName("bSadir");

                entity.Property(e => e.Notes).HasMaxLength(100);

                entity.HasOne(d => d.Row)
                    .WithOne(p => p.TblMedadimPulse)
                    .HasForeignKey<TblMedadimPulse>(d => d.RowId)
                    .HasConstraintName("FK_tblMedadimPulse_tblClientMedadim");
            });

            modelBuilder.Entity<TblMedadimSato>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("tblMedadimSato");

                entity.Property(e => e.RowId).ValueGeneratedNever();

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(150);

                entity.Property(e => e.SatoWay).HasMaxLength(150);

                entity.HasOne(d => d.Row)
                    .WithOne(p => p.TblMedadimSato)
                    .HasForeignKey<TblMedadimSato>(d => d.RowId)
                    .HasConstraintName("FK_tblMedadimSato_tblClientMedadim");
            });

            modelBuilder.Entity<TblMedadimSugar>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("tblMedadimSugar");

                entity.Property(e => e.RowId).ValueGeneratedNever();

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(100);

                entity.HasOne(d => d.Row)
                    .WithOne(p => p.TblMedadimSugar)
                    .HasForeignKey<TblMedadimSugar>(d => d.RowId)
                    .HasConstraintName("FK_tblMedadimSugar_tblClientMedadim");
            });

            modelBuilder.Entity<TblMedadimTzoa>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("tblMedadimTzoa");

                entity.Property(e => e.RowId).ValueGeneratedNever();

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(200);

                entity.Property(e => e.Tzoa).HasMaxLength(50);

                entity.HasOne(d => d.Row)
                    .WithOne(p => p.TblMedadimTzoa)
                    .HasForeignKey<TblMedadimTzoa>(d => d.RowId)
                    .HasConstraintName("FK_tblMedadimTzoa_tblClientMedadim");
            });

            modelBuilder.Entity<TblMedadimUrine>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("tblMedadimUrine");

                entity.Property(e => e.RowId).ValueGeneratedNever();

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(200);

                entity.Property(e => e.Urine).HasMaxLength(50);

                entity.HasOne(d => d.Row)
                    .WithOne(p => p.TblMedadimUrine)
                    .HasForeignKey<TblMedadimUrine>(d => d.RowId)
                    .HasConstraintName("FK_tblMedadimUrine_tblClientMedadim");
            });

            modelBuilder.Entity<TblMedadimWeight>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("tblMedadimWeight");

                entity.Property(e => e.RowId).ValueGeneratedNever();

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes)
                    .HasMaxLength(100)
                    .HasColumnName("notes");

                entity.Property(e => e.Weight).HasColumnName("weight");

                entity.HasOne(d => d.Row)
                    .WithOne(p => p.TblMedadimWeight)
                    .HasForeignKey<TblMedadimWeight>(d => d.RowId)
                    .HasConstraintName("FK_tblMedadimWeight_tblClientMedadim");
            });

            modelBuilder.Entity<TblMedadimWeight22>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMedadimWeight22");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Notes)
                    .HasMaxLength(100)
                    .HasColumnName("notes")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Weight).HasColumnName("weight");
            });

            modelBuilder.Entity<TblMedadimWeightLoss>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMedadimWeightLoss");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.WeightLossId)
                    .HasMaxLength(100)
                    .HasColumnName("WeightLossID");

                entity.HasOne(d => d.Row)
                    .WithMany()
                    .HasForeignKey(d => d.RowId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tblMedadi__RowId__0606F6A3");
            });

            modelBuilder.Entity<TblMedicalTask>(entity =>
            {
                entity.ToTable("tblMedicalTasks");

                entity.HasIndex(e => new { e.ClientId, e.LocationId }, "tblMedicalTasks_ClientID_LocationID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BTaskKind)
                    .HasColumnName("bTaskKind")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.ClosedDate).HasColumnType("datetime");

                entity.Property(e => e.Comments).HasMaxLength(700);

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.DateDone).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(250);

                entity.Property(e => e.FormKey).HasMaxLength(30);

                entity.Property(e => e.FormTypeId).HasColumnName("FormTypeID");

                entity.Property(e => e.JobId).HasColumnName("JobID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.MedicalGroupDone).HasDefaultValueSql("((0))");

                entity.Property(e => e.PlanId).HasColumnName("PlanID");

                entity.Property(e => e.TStmpDateDone)
                    .HasColumnType("datetime")
                    .HasColumnName("tStmpDateDone");

                entity.Property(e => e.Target).HasMaxLength(100);

                entity.Property(e => e.TaskTheme).HasMaxLength(500);

                entity.Property(e => e.Time1)
                    .HasMaxLength(5)
                    .IsFixedLength(true);

                entity.Property(e => e.Workers).HasMaxLength(250);

                entity.Property(e => e.YeshivaId).HasColumnName("YeshivaID");
            });

            modelBuilder.Entity<TblMedicalTaskDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMedicalTaskDetails");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DayarId).HasColumnName("DayarID");

                entity.Property(e => e.Description).HasMaxLength(250);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Status).HasMaxLength(50);

                entity.Property(e => e.Summery).HasColumnType("ntext");

                entity.Property(e => e.TaskTheme).HasMaxLength(50);

                entity.Property(e => e.Time1).HasMaxLength(10);

                entity.Property(e => e.WorkerId).HasColumnName("WorkerID");
            });

            modelBuilder.Entity<TblMeducalTask>(entity =>
            {
                entity.ToTable("tblMeducalTasks");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BClosed).HasColumnName("bClosed");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BKindId).HasColumnName("bKindID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.ClosedDate).HasColumnType("datetime");

                entity.Property(e => e.Comments)
                    .IsRequired()
                    .HasMaxLength(300)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Date2)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.SpesificWorKers)
                    .IsRequired()
                    .HasMaxLength(300)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SubjectWorkers)
                    .IsRequired()
                    .HasMaxLength(300)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TStampUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampUpdate");

                entity.Property(e => e.Target)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TaskKindId).HasColumnName("TaskKindID");

                entity.Property(e => e.TaskTheme).IsRequired();

                entity.Property(e => e.UserClosedId).HasColumnName("UserClosedID");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");

                entity.Property(e => e.UserUpdateId).HasColumnName("UserUpdateID");
            });

            modelBuilder.Entity<TblMelayPrRefuee>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMelayPrRefuee");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DateFuture).HasColumnType("datetime");

                entity.Property(e => e.DateLast).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TakeBy).HasColumnName("TakeBY");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblMelayRest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMelayRest");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך ספירת מלאי");

                entity.Property(e => e.MahsanId)
                    .HasColumnName("MahsanID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("המחסן");

                entity.Property(e => e.ParitKod)
                    .HasMaxLength(30)
                    .HasComment("קוד הפריט");

                entity.Property(e => e.Rest1)
                    .HasDefaultValueSql("(0)")
                    .HasComment("היתרה במלאי לפי חישוב : כניסה למלאי- חשבוניות");

                entity.Property(e => e.Rest2)
                    .HasDefaultValueSql("(0)")
                    .HasComment("היתרה ע\"פ ספירת המלאי");
            });

            modelBuilder.Entity<TblMelaySetup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMelaySetup");

                entity.Property(e => e.GroupListId)
                    .HasColumnType("ntext")
                    .HasColumnName("GroupListID");

                entity.Property(e => e.StoId)
                    .HasColumnName("StoID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UsersListId)
                    .HasColumnType("ntext")
                    .HasColumnName("UsersListID");
            });

            modelBuilder.Entity<TblMenage17DateUse>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMenage17DateUse");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Menage17DateUse)
                    .HasColumnType("datetime")
                    .HasColumnName("Menage17_DateUse");

                entity.Property(e => e.Menage17Id).HasColumnName("Menage17_ID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblMimsakLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMimsakLog");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.ListId)
                    .HasColumnType("ntext")
                    .HasColumnName("ListID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Type1).HasMaxLength(4);

                entity.Property(e => e.UserCreate).HasMaxLength(40);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblMimsakim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMimsakim");

                entity.Property(e => e.BUnLock).HasColumnName("bUnLock");

                entity.Property(e => e.Bexp).HasColumnName("bexp");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.DateCreate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KindId).HasColumnName("KindID");

                entity.Property(e => e.KindId2).HasColumnName("KindID2");

                entity.Property(e => e.ListId).HasColumnName("ListID");

                entity.Property(e => e.ListId2).HasColumnName("ListID2");

                entity.Property(e => e.ListId3).HasColumnName("ListID3");

                entity.Property(e => e.ListId4).HasColumnName("ListID4");

                entity.Property(e => e.ListId5).HasColumnName("ListID5");

                entity.Property(e => e.ListId6).HasColumnName("ListID6");

                entity.Property(e => e.ListXml1).HasColumnType("xml");

                entity.Property(e => e.ListXml2).HasColumnType("xml");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Maham1).HasColumnType("money");

                entity.Property(e => e.Name1)
                    .HasMaxLength(300)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Param1)
                    .IsRequired()
                    .HasMaxLength(600)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Param2)
                    .IsRequired()
                    .HasMaxLength(600)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Param3)
                    .IsRequired()
                    .HasMaxLength(600)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Price1).HasColumnType("money");

                entity.Property(e => e.Price2).HasColumnType("money");

                entity.Property(e => e.UserCreate)
                    .HasMaxLength(80)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblMirshamDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMirshamDetails");

                entity.HasIndex(e => e.MirshamId, "MirshamID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Num1, "num1")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.MirshamId, "tblMirshamimtblMirshamDetails")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Capsule).HasMaxLength(30);

                entity.Property(e => e.DrugName).HasMaxLength(300);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LastAmount)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MelayRest).HasMaxLength(10);

                entity.Property(e => e.Minun)
                    .HasMaxLength(30)
                    .HasComment("מינון, סוג הקפסול ותכיפות מופרד ע\"י @");

                entity.Property(e => e.MirshamId)
                    .HasColumnName("MirshamID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Monthly)
                    .HasDefaultValueSql("((0))")
                    .HasComment("הכמות החודשית");

                entity.Property(e => e.Num1)
                    .HasColumnName("num1")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Numday).HasColumnName("numday");

                entity.Property(e => e.SalBriyut).HasMaxLength(2);

                entity.Property(e => e.TypeToInvite).HasMaxLength(10);

                entity.HasOne(d => d.Mirsham)
                    .WithMany()
                    .HasForeignKey(d => d.MirshamId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("tblMirshamDetails_FK00");
            });

            modelBuilder.Entity<TblMirshamim>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblMirshamim_PK")
                    .IsClustered(false);

                entity.ToTable("tblMirshamim");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BNarkotika).HasColumnName("bNarkotika");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasComment("תאריך יצירת המירשם");

                entity.Property(e => e.DayarName).HasMaxLength(30);

                entity.Property(e => e.Idcard)
                    .HasMaxLength(10)
                    .HasColumnName("IDCard")
                    .HasComment("ת.זהות");

                entity.Property(e => e.Kupa)
                    .HasMaxLength(25)
                    .HasComment("קופ\"ח");

                entity.Property(e => e.MirshamCap).HasMaxLength(50);

                entity.Property(e => e.ReasonDetail)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblMishkalim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMishkalim");

                entity.HasIndex(e => e.Id, "id")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("id");
            });

            modelBuilder.Entity<TblMitotTeken>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMitotTeken");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");
            });

            modelBuilder.Entity<TblMonim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblMonim");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.NType).HasColumnName("nType");
            });

            modelBuilder.Entity<TblMonthlyForm>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblMonthlyForms_PK")
                    .IsClustered(false);

                entity.ToTable("tblMonthlyForms");

                entity.HasIndex(e => e.MahlakaId, "MahlakaID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TypFormId, "TypFormID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.DateLocked).HasColumnType("datetime");

                entity.Property(e => e.DayarimCount).HasDefaultValueSql("(0)");

                entity.Property(e => e.Details).HasMaxLength(50);

                entity.Property(e => e.FieldA)
                    .HasMaxLength(50)
                    .HasComment("שדה נוסף משתנה בהתאם לטופס");

                entity.Property(e => e.HeshbonitId).HasColumnName("HeshbonitID");

                entity.Property(e => e.HtmlSource)
                    .HasColumnType("ntext")
                    .HasComment("הטופס השמור");

                entity.Property(e => e.LocationId).HasColumnName("locationID");

                entity.Property(e => e.Locked)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם הנתונים סגורים מפני עריכה");

                entity.Property(e => e.MahlakaId)
                    .HasColumnName("MahlakaID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("קישור למחלקה tblDefMahlaka");

                entity.Property(e => e.Month)
                    .HasDefaultValueSql("(0)")
                    .HasComment("החודש אליו מתייחס הדוח");

                entity.Property(e => e.ReportName).HasMaxLength(30);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.TypFormId)
                    .HasColumnName("TypFormID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("tblFormTemplates מטבלת");

                entity.Property(e => e.UserIdcreate)
                    .HasColumnName("UserIDCreate")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UserIdlocked)
                    .HasColumnName("UserIDLocked")
                    .HasDefaultValueSql("(0)")
                    .HasComment("נועל הטופס");

                entity.Property(e => e.Year).HasComment("השנה אליה מתייחס הדוח");
            });

            modelBuilder.Entity<TblNoSignToCardex>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblNoSignToCardex");

                entity.Property(e => e.DateC).HasColumnType("datetime");

                entity.Property(e => e.Dates).HasMaxLength(50);

                entity.Property(e => e.DrugMinun).HasMaxLength(100);

                entity.Property(e => e.DrugName).HasMaxLength(300);

                entity.Property(e => e.HourPkuda).HasMaxLength(7);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.NameView).HasMaxLength(60);

                entity.Property(e => e.Regishut)
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Sign1).HasMaxLength(100);
            });

            modelBuilder.Entity<TblNursingPlansResult>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblNursingPlansResults");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.PlanId)
                    .HasColumnName("PlanID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Results).HasMaxLength(1000);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Target).HasMaxLength(100);

                entity.Property(e => e.UserName).HasMaxLength(30);
            });

            modelBuilder.Entity<TblOutMail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblOutMail");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.IsSent).HasColumnName("isSent");

                entity.Property(e => e.Message1)
                    .HasMaxLength(4000)
                    .HasColumnName("message1");

                entity.Property(e => e.SendTo)
                    .HasMaxLength(500)
                    .HasColumnName("sendTo");

                entity.Property(e => e.Subject1).HasMaxLength(200);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblPainRequest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblPainRequests");

                entity.Property(e => e.ActionKind).HasMaxLength(50);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.TimeE).HasMaxLength(10);

                entity.Property(e => e.TimeS).HasMaxLength(10);

                entity.Property(e => e.WorkerKod)
                    .HasDefaultValueSql("((0))")
                    .HasComment("מזהה ממערכת אסקום");
            });

            modelBuilder.Entity<TblParamFollow>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblParamFollow");

                entity.HasIndex(e => new { e.Key1, e.Rowid }, "idx_doctor2")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.Date1, e.BDel }, "idx_tblParamFollow_Date1_bDel_inc_Clientid")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Key1, "idx_tblParamFollow_Key1_inc_Rowid")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BExp).HasColumnName("bExp");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1).HasMaxLength(20);

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.ReportBy)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Rowid).HasDefaultValueSql("((0))");

                entity.Property(e => e.TempName).HasMaxLength(100);

                entity.Property(e => e.Time1).HasMaxLength(10);

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblPharmacistBakara4>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblPharmacistBakara4");

                entity.Property(e => e.DateCreated).HasColumnType("datetime");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp");

                entity.Property(e => e.Txt1).HasColumnName("TXT1");

                entity.Property(e => e.Txt1YesNo).HasColumnName("txt1YesNo");

                entity.Property(e => e.Txt2).HasColumnName("TXT2");

                entity.Property(e => e.Txt2YesNo).HasColumnName("txt2YesNo");

                entity.Property(e => e.Txt3).HasColumnName("TXT3");

                entity.Property(e => e.Txt3YesNo).HasColumnName("txt3YesNo");

                entity.Property(e => e.UserCreate).HasMaxLength(50);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblPhizioMonthActivity>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblPhizioMonthActivities");

                entity.Property(e => e.ActivityId).HasColumnName("ActivityID");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.FailedActivityId).HasColumnName("FailedActivityID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KindInstructionsId).HasColumnName("KindInstructionsID");

                entity.Property(e => e.LeftUpperLimbId).HasColumnName("LeftUpperLimbID");

                entity.Property(e => e.Month1).HasColumnType("datetime");

                entity.Property(e => e.ReasonChangeId).HasColumnName("ReasonChangeID");

                entity.Property(e => e.RightUpperLimbId).HasColumnName("RightUpperLimbID");

                entity.Property(e => e.SocialInteractionId).HasColumnName("SocialInteractionID");

                entity.Property(e => e.SuccessActivityId).HasColumnName("SuccessActivityID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblPhizioRipuyOrder>(entity =>
            {
                entity.ToTable("tblPhizioRipuyOrders");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DateOk).HasColumnType("datetime");

                entity.Property(e => e.DateS).HasColumnType("datetime");

                entity.Property(e => e.IsOk).HasDefaultValueSql("((0))");

                entity.Property(e => e.MedicalGroupId).HasColumnName("MedicalGroupID");

                entity.Property(e => e.MedicalGroupId2).HasColumnName("medicalGroupID2");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("((0))");

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserCreate2).HasMaxLength(30);

                entity.Property(e => e.UserIdOk).HasColumnName("UserIdOK");
            });

            modelBuilder.Entity<TblPhoneParameter>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblPhoneParameters");

                entity.Property(e => e.KodHul).HasMaxLength(20);

                entity.Property(e => e.KodNayad).HasMaxLength(20);

                entity.Property(e => e.KodNayah).HasMaxLength(20);
            });

            modelBuilder.Entity<TblPkodutTemporarySclient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblPkodutTemporarySClient");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.DateB).HasColumnType("datetime");

                entity.Property(e => e.DateE).HasColumnType("datetime");

                entity.Property(e => e.DrugId).HasColumnName("DrugID");

                entity.Property(e => e.DrugKod).HasMaxLength(100);

                entity.Property(e => e.DrugName).HasMaxLength(510);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.TimeB).HasColumnName("timeB");

                entity.Property(e => e.TimeE).HasColumnName("timeE");

                entity.Property(e => e.UserCreate).HasMaxLength(100);
            });

            modelBuilder.Entity<TblPkudotConfirmation>(entity =>
            {
                entity.ToTable("tblPkudotConfirmation");

                entity.HasIndex(e => new { e.IsRead, e.TimeIn, e.MahlakaId }, "IX_tblPkudotConfirmation")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.IsRead, e.OrderKind, e.TimeIn, e.MahlakaId }, "idx_tblPkudotConfirmation_isRead_OrderKind_TimeIn_MahlakaID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DoctorId).HasColumnName("DoctorID");

                entity.Property(e => e.IsRead).HasColumnName("isRead");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.OrderKind)
                    .HasMaxLength(30)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ReadTime).HasColumnType("datetime");

                entity.Property(e => e.TimeIn)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WorkerId).HasColumnName("WorkerID");
            });

            modelBuilder.Entity<TblPkudotToCardex>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblPkudotToCardex");

                entity.HasIndex(e => e.PkudaId, "UQ__tblPkudo__D476574D24973D07")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");
            });

            modelBuilder.Entity<TblPotencialClient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblPotencialClients");

                entity.Property(e => e.BearthCountry).HasMaxLength(100);

                entity.Property(e => e.BearthDay).HasColumnType("datetime");

                entity.Property(e => e.BearthDay1).HasMaxLength(50);

                entity.Property(e => e.City).HasMaxLength(50);

                entity.Property(e => e.CityId).HasColumnName("cityID");

                entity.Property(e => e.Comments).HasMaxLength(255);

                entity.Property(e => e.CountryId).HasColumnName("CountryID");

                entity.Property(e => e.FName)
                    .HasMaxLength(50)
                    .HasColumnName("fName");

                entity.Property(e => e.FatherName).HasMaxLength(50);

                entity.Property(e => e.HouseNum).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.IdCard)
                    .HasMaxLength(50)
                    .HasColumnName("idCard");

                entity.Property(e => e.LName)
                    .HasMaxLength(50)
                    .HasColumnName("lName");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MaagarId)
                    .HasColumnName("MaagarID")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NameView).HasMaxLength(100);

                entity.Property(e => e.Phone1).HasMaxLength(15);

                entity.Property(e => e.Phone2).HasMaxLength(15);

                entity.Property(e => e.Phone3).HasMaxLength(30);

                entity.Property(e => e.Phone4).HasMaxLength(30);

                entity.Property(e => e.Street).HasMaxLength(50);

                entity.Property(e => e.TimeInsert)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Zip).HasMaxLength(50);
            });

            modelBuilder.Entity<TblPritim>(entity =>
            {
                entity.ToTable("tblPritim");

                entity.HasIndex(e => new { e.Kod, e.ParitName }, "IX_tblPritim")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ImageName, "ImageName")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.KeyWords, "KeyWords")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Kod, "Kod")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.MainSapakId, "MainSapakID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.BArchive)
                    .HasColumnName("bArchive")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BConst)
                    .HasColumnName("bConst")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BMelay)
                    .HasColumnName("bMelay")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BNeedId)
                    .HasColumnName("bNeedID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("דרוש זיהוי חד חד ערכי");

                entity.Property(e => e.BPriceList)
                    .HasColumnName("bPriceList")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BSale)
                    .HasColumnName("bSale")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BService)
                    .HasColumnName("bService")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BZikuy)
                    .HasColumnName("bZikuy")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Barkod).HasMaxLength(50);

                entity.Property(e => e.CoinIdbuy)
                    .HasColumnName("CoinIDBuy")
                    .HasDefaultValueSql("(0)")
                    .HasComment("קוד מטבע מטבלת tblDefCoin");

                entity.Property(e => e.CoinIdsale)
                    .HasColumnName("CoinIDSale")
                    .HasDefaultValueSql("(0)")
                    .HasComment("קוד מטבע מטבלת tblDefCoin");

                entity.Property(e => e.HeshKodIn)
                    .HasMaxLength(15)
                    .HasComment("חשבון הכנסות");

                entity.Property(e => e.HeshKodOut)
                    .HasMaxLength(15)
                    .HasComment("חשבון הוצאות");

                entity.Property(e => e.ImageName).HasMaxLength(50);

                entity.Property(e => e.IsParitMelay)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם זהו פריט המנהל מלאי?");

                entity.Property(e => e.ItemIndex)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מספר רץ לזיהוי יחודי");

                entity.Property(e => e.KeyWords)
                    .HasMaxLength(250)
                    .HasComment("מילות מפתח");

                entity.Property(e => e.Kod).HasMaxLength(30);

                entity.Property(e => e.Maham)
                    .HasDefaultValueSql("(1)")
                    .HasComment("האם חייב במע\"מ");

                entity.Property(e => e.MahsanId).HasColumnName("MahsanID");

                entity.Property(e => e.MainMahsanId)
                    .HasColumnName("MainMahsanID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("המחסן העיקרי לפריט, לפ\"ז נקבע המחסן עבור החשבוניות");

                entity.Property(e => e.MainSapakId)
                    .HasColumnName("MainSapakID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("ספק ראשי לפריט");

                entity.Property(e => e.MelayDate)
                    .HasColumnType("datetime")
                    .HasComment("תאריך ספירת מלאי");

                entity.Property(e => e.MelayRest)
                    .HasDefaultValueSql("(0)")
                    .HasComment("הכמות הנותרת במלאי");

                entity.Property(e => e.MinCount)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מינימום יתרה לפריט");

                entity.Property(e => e.MiunId)
                    .HasColumnName("MiunID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("קוד מיון מהטבלה tblDefParitMiun");

                entity.Property(e => e.Mkt)
                    .HasMaxLength(10)
                    .HasComment("מק\"ט מס' קטלוגי של הפריט");

                entity.Property(e => e.MktSapak)
                    .HasMaxLength(20)
                    .HasComment("מס' קטלוגי אצל הספק");

                entity.Property(e => e.OptimicCount)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מלאי אופטימלי");

                entity.Property(e => e.ParitKind)
                    .HasDefaultValueSql("(0)")
                    .HasComment("0-פריט רגיל,1-פריט מלאי,2-רכוש קבוע,3-שירות");

                entity.Property(e => e.ParitName).HasMaxLength(50);

                entity.Property(e => e.PerDiscount).HasDefaultValueSql("(0)");

                entity.Property(e => e.PriceListBuy)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מחירון קניה נבחר");

                entity.Property(e => e.PriceListSale)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מחירון מכירה נבחר");

                entity.Property(e => e.QuantityBuy)
                    .HasDefaultValueSql("(0)")
                    .HasComment("כמות ליחידת קניה");

                entity.Property(e => e.QuantitySale)
                    .HasDefaultValueSql("(0)")
                    .HasComment("כמות ליחידת מכירה");

                entity.Property(e => e.UnitId)
                    .HasColumnName("UnitID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה ליחידת המידה מטבלת tblDefParitUnit");

                entity.Property(e => e.UnitIdbuy)
                    .HasColumnName("UnitIDBuy")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה ליחידת קניה מטבלת tblDefParitUnit");

                entity.Property(e => e.UnitIdsale)
                    .HasColumnName("UnitIDSale")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה ליחידת מכירה מטבלת tblDefParitUnit");

                entity.Property(e => e.Weight).HasMaxLength(15);
            });

            modelBuilder.Entity<TblPritimHeshKod>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblPritimHeshKod");

                entity.HasIndex(e => new { e.Kod, e.HeshkodIn, e.LocationId }, "IX_tblPritimHeshKod")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.HeshkodIn).HasMaxLength(15);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kod)
                    .HasMaxLength(30)
                    .HasColumnName("kod");

                entity.Property(e => e.LocationId).HasColumnName("locationId");
            });

            modelBuilder.Entity<TblPurchase>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblPurchase_PK")
                    .IsClustered(false);

                entity.ToTable("tblPurchase");

                entity.HasIndex(e => e.FormId, "FormID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.SapakId, "SapakID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.UserId, "UserID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasComment("מזהה יחודי");

                entity.Property(e => e.AllowComptrollerDate)
                    .HasColumnType("datetime")
                    .HasComment("תאריך האישור");

                entity.Property(e => e.AllowComptrollerId)
                    .HasColumnName("AllowComptrollerID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לחשב המאשר");

                entity.Property(e => e.BAllowComptroller)
                    .HasColumnName("bAllowComptroller")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם בוצע אישור חשב");

                entity.Property(e => e.BEnsure)
                    .HasColumnName("bEnsure")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם בוצע אישור סופי");

                entity.Property(e => e.BUpdateMelay)
                    .HasColumnName("bUpdateMelay")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם עודכן מלאי  שייך רק לתעודת משלוח");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.EnsureDate)
                    .HasColumnType("datetime")
                    .HasComment("תאריך האישור");

                entity.Property(e => e.EnsureId)
                    .HasColumnName("EnsureID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה למאשר");

                entity.Property(e => e.FormId)
                    .HasColumnName("FormID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מספר סידורי  של הטופס זה מספר רץ שנוצר רק אחרי  שהטופס ננעל");

                entity.Property(e => e.FormOwnerId)
                    .HasColumnName("FormOwnerID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("טופס מקור שזה יהיה בדרלך כלל  ההזמנה מספק");

                entity.Property(e => e.Locked)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם זה נעול?");

                entity.Property(e => e.Memo1)
                    .HasColumnType("ntext")
                    .HasComment("הערות");

                entity.Property(e => e.NKind)
                    .HasColumnName("nKind")
                    .HasDefaultValueSql("(0)")
                    .HasComment("סוג המסמך 1=הזמנה מספק 2=תעודת משלוח   3=חשבונית ספק");

                entity.Property(e => e.NStatus)
                    .HasColumnName("nStatus")
                    .HasComment("1 ההזמנה מחכים לביצוע   2-הפריטים הגיעו  התאמה מלאה  3-הפריטים הגיעו אבל אין התאמה בין ההזמנה לבין המשלוח");

                entity.Property(e => e.SapakId)
                    .HasColumnName("SapakID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לספק");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("יוצר או נועל");

                entity.Property(e => e.UserResponsible)
                    .HasDefaultValueSql("(0)")
                    .HasComment("עובד מטפל");
            });

            modelBuilder.Entity<TblPurchaseDetail>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblPurchaseDetails_PK")
                    .IsClustered(false);

                entity.ToTable("tblPurchaseDetails");

                entity.HasIndex(e => e.FormPurchaseId, "FormPurchaseID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ParitKod, "ParitID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DPrice)
                    .HasColumnName("dPrice")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מחיר");

                entity.Property(e => e.DPriceAll)
                    .HasColumnName("dPriceAll")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מחיר סופי");

                entity.Property(e => e.FormPurchaseId)
                    .HasColumnName("FormPurchaseID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לטבלת  טפסי רכש");

                entity.Property(e => e.MakatParit)
                    .HasMaxLength(50)
                    .HasComment("מקט פריט  המקט הוא של הספק");

                entity.Property(e => e.NCount)
                    .HasColumnName("nCount")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מספר הפריטים שהוזמן");

                entity.Property(e => e.ParitKod)
                    .HasMaxLength(50)
                    .HasComment("מזהה לפריט במערכת");
            });

            modelBuilder.Entity<TblPurchaseInvite>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblPurchaseInvite");

                entity.Property(e => e.BPrint)
                    .HasColumnName("bPrint")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.DateSapakInvite).HasColumnType("datetime");

                entity.Property(e => e.DocId).HasColumnName("docId");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.NStatus)
                    .HasColumnName("nStatus")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ParitKod)
                    .HasMaxLength(50)
                    .HasColumnName("paritKod");

                entity.Property(e => e.ParitName)
                    .HasMaxLength(100)
                    .HasColumnName("paritName");

                entity.Property(e => e.ParitPrice).HasColumnType("money");
            });

            modelBuilder.Entity<TblPurchasePromotor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblPurchasePromotor");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.SapakId, "SapakID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.UserId, "UserID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.DateCreated)
                    .HasColumnType("datetime")
                    .HasComment("תאריך יצירה");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.ParitCount)
                    .HasDefaultValueSql("(0)")
                    .HasComment("מספר פריטים לרכישה");

                entity.Property(e => e.ParitKod)
                    .HasMaxLength(50)
                    .HasComment("קוד פריט");

                entity.Property(e => e.SapakId)
                    .HasColumnName("SapakID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לספק");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה ליוזם");
            });

            modelBuilder.Entity<TblPurchaseSetup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblPurchaseSetup");

                entity.Property(e => e.AllowHeshId)
                    .HasColumnName("AllowHeshID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AllowHeshName)
                    .HasMaxLength(255)
                    .HasComment("מאשר תשלום לספק");

                entity.Property(e => e.AllowId)
                    .HasColumnName("AllowID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AllowName)
                    .HasMaxLength(255)
                    .HasComment("מאשר");

                entity.Property(e => e.BuyerId)
                    .HasColumnName("BuyerID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BuyerName)
                    .HasMaxLength(255)
                    .HasComment("קניין");

                entity.Property(e => e.ComptrollerId)
                    .HasColumnName("ComptrollerID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ComptrollerName)
                    .HasMaxLength(255)
                    .HasComment("חשב");

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PaymentName)
                    .HasMaxLength(255)
                    .HasComment("ממונה על התשלומים");

                entity.Property(e => e.UpdateMelayByHeshDoc)
                    .HasDefaultValueSql("(0)")
                    .HasComment("באם אמת אזי המלאי מעודכן על ידי חשבונית ספק באם לא אזי על ידי תעודת כניסה למחסן");
            });

            modelBuilder.Entity<TblRate>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblRates_PK")
                    .IsClustered(false);

                entity.ToTable("tblRates");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CoinId)
                    .HasColumnName("CoinID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Kod1).HasMaxLength(4);

                entity.Property(e => e.Rate)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("שער המטבע");
            });

            modelBuilder.Entity<TblRefueeMainForm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblRefueeMainForms");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.FormKind)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.ListLocked).HasMaxLength(300);

                entity.Property(e => e.RekaId).HasColumnName("RekaID");

                entity.Property(e => e.SikumId).HasColumnName("SikumID");

                entity.Property(e => e.Skira2Id).HasColumnName("Skira2ID");

                entity.Property(e => e.SkiraId).HasColumnName("SkiraID");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblRefueeManageForm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblRefueeManageForms");

                entity.HasIndex(e => e.ClientId, "tblRefueeManageForms")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BConv).HasColumnName("bConv");

                entity.Property(e => e.BConv2).HasColumnName("bConv2");

                entity.Property(e => e.BImport).HasColumnName("bImport");

                entity.Property(e => e.BPsychiatry).HasColumnName("bPsychiatry");

                entity.Property(e => e.BackClientId).HasColumnName("BackClientID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateCreated).HasColumnType("datetime");

                entity.Property(e => e.DateTmp).HasMaxLength(12);

                entity.Property(e => e.FormKind)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.ListLocked).HasMaxLength(300);

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.RekaId).HasColumnName("RekaID");

                entity.Property(e => e.SikumId).HasColumnName("SikumID");

                entity.Property(e => e.Skira2Id).HasColumnName("Skira2ID");

                entity.Property(e => e.SkiraId).HasColumnName("SkiraID");

                entity.Property(e => e.TsLockedDate).HasColumnType("datetime");

                entity.Property(e => e.TsLockedKabala)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TscreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("TSCreateDate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserCreated)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnName("userCreated")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserIdcreate)
                    .HasMaxLength(20)
                    .HasColumnName("UserIDCreate");

                entity.Property(e => e.UserLocked)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnName("userLocked")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblRefueeMange>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblRefueeMange");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblRefueeMangeDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblRefueeMangeDetails");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1).HasMaxLength(100);

                entity.Property(e => e.ListId)
                    .HasColumnType("ntext")
                    .HasColumnName("ListID");

                entity.Property(e => e.ParentId).HasColumnName("ParentID");
            });

            modelBuilder.Entity<TblReminder>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblReminder_PK")
                    .IsClustered(false);

                entity.ToTable("tblReminder");

                entity.HasIndex(e => new { e.MessageKey, e.Clientid }, "IX_tblReminder_MessageKey_clientid")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.ReceiverId, e.ReminderOn, e.ByLocation, e.Clientid, e.ReminderDateReceive }, "idx_tblReminder_ReceiverID_ReminderOn_byLocation_clientid_ReminderDateREceive")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActionId)
                    .HasColumnName("ActionID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מס' מציין לפעילות");

                entity.Property(e => e.ActivityDate)
                    .HasColumnType("datetime")
                    .HasComment("תאריך ושעת הפעילות");

                entity.Property(e => e.Archive)
                    .HasColumnName("archive")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ByLocation).HasColumnName("byLocation");

                entity.Property(e => e.Clientid)
                    .HasColumnName("clientid")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FormName)
                    .HasMaxLength(30)
                    .HasComment("הטופס בו נמצאת הפעילות");

                entity.Property(e => e.MessageKey).HasMaxLength(20);

                entity.Property(e => e.NameView)
                    .HasMaxLength(50)
                    .HasComment("הגורם אליו קשורה התזכורת");

                entity.Property(e => e.Place).HasMaxLength(100);

                entity.Property(e => e.Receiver).HasMaxLength(50);

                entity.Property(e => e.ReceiverId)
                    .HasColumnName("ReceiverID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("המשתמש אליו מיועדת התזכורת");

                entity.Property(e => e.ReminderDate).HasColumnType("datetime");

                entity.Property(e => e.ReminderDateCreate).HasColumnType("datetime");

                entity.Property(e => e.ReminderDateReceive)
                    .HasColumnType("datetime")
                    .HasColumnName("ReminderDateREceive");

                entity.Property(e => e.ReminderOn).HasDefaultValueSql("(0)");

                entity.Property(e => e.SoundPath).HasMaxLength(255);

                entity.Property(e => e.Status)
                    .HasDefaultValueSql("(0)")
                    .HasComment("12");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserIdcreate)
                    .HasColumnName("UserIDCreate")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblReminderModule>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblReminderModules");

                entity.Property(e => e.Cap1).HasMaxLength(50);

                entity.Property(e => e.Caption)
                    .HasMaxLength(200)
                    .HasColumnName("caption");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.ModuleName)
                    .HasMaxLength(30)
                    .HasColumnName("moduleName");

                entity.Property(e => e.ReminderDelay)
                    .HasColumnName("reminderDelay")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ReminderMode)
                    .HasMaxLength(200)
                    .HasColumnName("reminderMode");

                entity.Property(e => e.ReminderTime)
                    .HasColumnName("reminderTime")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblReminderTheme>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblReminderThemes");

                entity.HasIndex(e => new { e.Id, e.Key1 }, "ClusteredIndex-20181108-094333")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "NonClusteredIndex-20181108-094623")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Key1, "NonClusteredIndex-20181108-102359")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ModuleName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TimeBefore).HasDefaultValueSql("((0))");

                entity.Property(e => e.TimeKind)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TblRentgenPrice>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblRentgenPrices");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).IsRequired();

                entity.Property(e => e.MktHospital)
                    .HasMaxLength(50)
                    .HasColumnName("MKT_Hospital");

                entity.Property(e => e.MktSapak)
                    .HasMaxLength(50)
                    .HasColumnName("MKT_Sapak");

                entity.Property(e => e.Price).HasColumnType("money");
            });

            modelBuilder.Entity<TblRepCol>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblRepCols");

                entity.Property(e => e.BCustom).HasColumnName("bCustom");

                entity.Property(e => e.Col1).HasMaxLength(100);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Key1).HasMaxLength(30);

                entity.Property(e => e.Tag1).HasMaxLength(30);
            });

            modelBuilder.Entity<TblReportHeader>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblReportHeaders");

                entity.Property(e => e.Cap1).HasMaxLength(50);

                entity.Property(e => e.Headers).HasMaxLength(300);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.ReportName).HasMaxLength(30);
            });

            modelBuilder.Entity<TblRole>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblRoles_PK")
                    .IsClustered(false);

                entity.ToTable("tblRoles");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.RoleCategory)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סוג הנוהל");

                entity.Property(e => e.RoleDecription)
                    .HasMaxLength(255)
                    .HasComment("תיאור");

                entity.Property(e => e.RoleName).HasMaxLength(100);

                entity.Property(e => e.RoleTreeSrc)
                    .HasColumnType("ntext")
                    .HasComment("העץ");

                entity.Property(e => e.RoleType)
                    .HasDefaultValueSql("(2)")
                    .HasComment("1=tree ,2=reguler");
            });

            modelBuilder.Entity<TblRolesDetail>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblRolesDetails_PK")
                    .IsClustered(false);

                entity.ToTable("tblRolesDetails");

                entity.HasIndex(e => e.RoleId, "RoleID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "id")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasComment("מזהה יחודי");

                entity.Property(e => e.RoleId)
                    .HasColumnName("RoleID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לרשימה של הנהלים");

                entity.Property(e => e.RolePictures)
                    .HasColumnType("ntext")
                    .HasComment("התמונות הקשורות לחלק הזה משרשרות ב;");

                entity.Property(e => e.RoleRtf)
                    .HasColumnType("ntext")
                    .HasColumnName("RoleRTF");

                entity.Property(e => e.RoleVideos)
                    .HasColumnType("ntext")
                    .HasComment("הוידאו המקושר לחלק זה משורשר ב;");

                entity.Property(e => e.RolesDoc)
                    .HasColumnType("ntext")
                    .HasComment("המסמכים המקושרים לחלק הזה משורשר ;");
            });

            modelBuilder.Entity<TblRoom>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblRooms_PK")
                    .IsClustered(false);

                entity.ToTable("tblRooms");

                entity.HasIndex(e => e.AgafId, "AgafID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.BedsNum, "BedsNum")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.MahlakaId, "MahlakaID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.RoomNum, "RoomNum")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.AgafId, "tblAgafstblRooms")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AgafId)
                    .HasColumnName("AgafID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AirCond)
                    .HasDefaultValueSql("((0))")
                    .HasComment("האם יש מיזוג בדירה?");

                entity.Property(e => e.Archive).HasDefaultValueSql("((0))");

                entity.Property(e => e.BedsNum).HasDefaultValueSql("((0))");

                entity.Property(e => e.Comments)
                    .HasMaxLength(255)
                    .HasComment("הערות על החדר");

                entity.Property(e => e.DefdirectionId).HasMaxLength(20);

                entity.Property(e => e.DefdirectionName).HasMaxLength(70);

                entity.Property(e => e.MahlakaId)
                    .HasColumnName("MahlakaID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MaslulId).HasColumnName("MaslulID");

                entity.Property(e => e.NObj)
                    .HasColumnName("nObj")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.OwnerDetails)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.OwnerId).HasColumnName("OwnerID");

                entity.Property(e => e.PropId).HasMaxLength(20);

                entity.Property(e => e.PropName).HasMaxLength(50);

                entity.Property(e => e.QuantityName).HasMaxLength(30);

                entity.Property(e => e.RoomClass).HasMaxLength(50);

                entity.Property(e => e.RoomDefs)
                    .HasMaxLength(255)
                    .HasComment("הגדרות עבור החדר מתוך tblDefRoomProperties");

                entity.Property(e => e.RoomName).HasMaxLength(30);

                entity.Property(e => e.RoomNum)
                    .HasMaxLength(10)
                    .HasComment("מספר חדרים");

                entity.Property(e => e.RoomPrice)
                    .HasMaxLength(10)
                    .HasComment("מחיר לחדר");

                entity.Property(e => e.RoomSize)
                    .HasMaxLength(20)
                    .HasComment("גודל חדר");

                entity.Property(e => e.StatusName).HasMaxLength(50);

                entity.Property(e => e.Teken).HasDefaultValueSql("((0))");

                entity.Property(e => e.ZmidId).HasMaxLength(20);

                entity.Property(e => e.ZmidName).HasMaxLength(50);

                entity.HasOne(d => d.Agaf)
                    .WithMany(p => p.TblRooms)
                    .HasForeignKey(d => d.AgafId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("tblRooms_FK00");
            });

            modelBuilder.Entity<TblRoomBed>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblRoomBeds");

                entity.HasIndex(e => new { e.RoomId, e.BedNum }, "RoomID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BedNum).HasDefaultValueSql("(0)");

                entity.Property(e => e.BedStatus).HasDefaultValueSql("(0)");

                entity.Property(e => e.EnterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("enterDate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FreeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("freeDate");

                entity.Property(e => e.RoomId)
                    .HasColumnName("RoomID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TnuahId)
                    .HasColumnName("TnuahID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("תנועה אחרונה בדירה");
            });

            modelBuilder.Entity<TblRoomPic>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblRoomPics");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.RoomId, "RoomID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.PicDesc)
                    .HasMaxLength(100)
                    .HasColumnName("picDesc")
                    .HasComment("תיאור התמונה");

                entity.Property(e => e.PicLocation)
                    .HasMaxLength(255)
                    .HasComment("מיקום הקובץ");

                entity.Property(e => e.RoomId)
                    .HasColumnName("RoomID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לחדר /מסדרון");
            });

            modelBuilder.Entity<TblRoomPriceRole>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblRoomPriceRoles_PK")
                    .IsClustered(false);

                entity.ToTable("tblRoomPriceRoles");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClsName)
                    .HasMaxLength(50)
                    .HasComment("סיווג");

                entity.Property(e => e.PerNum)
                    .HasMaxLength(50)
                    .HasComment("תוספת באחוזים");

                entity.Property(e => e.PerNum2)
                    .HasMaxLength(50)
                    .HasComment("תוספת באחוזים-דיור מוגן");

                entity.Property(e => e.PerNum3).HasMaxLength(50);

                entity.Property(e => e.PriceId)
                    .HasMaxLength(50)
                    .HasColumnName("PriceID");
            });

            modelBuilder.Entity<TblRoomService>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblRoomServices");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.RoomId, "RoomID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ServiceId, "ServiceID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.DateCreated).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.RoomId)
                    .HasColumnName("RoomID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לחדר");

                entity.Property(e => e.ServiceId)
                    .HasColumnName("ServiceID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לשירותים");
            });

            modelBuilder.Entity<TblRoomShehiaRule>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblRoomShehiaRules_PK")
                    .IsClustered(false);

                entity.ToTable("tblRoomShehiaRules");

                entity.HasIndex(e => e.StatusDayarId, "DiurKindID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.PerNum, "PerNum")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClassId)
                    .HasColumnName("ClassID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("סיווג דירה");

                entity.Property(e => e.NKind)
                    .HasColumnName("nKind")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מסלול כניסה: רגיל/דיור מוגן");

                entity.Property(e => e.PerNum)
                    .HasDefaultValueSql("(0)")
                    .HasComment("תוספת  באחוזים");

                entity.Property(e => e.StatusDayarId)
                    .HasColumnName("StatusDayarID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("סטאטוס הדייר");
            });

            modelBuilder.Entity<TblRoomsAgaf>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblRoomsAgafs");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item).HasMaxLength(133);
            });

            modelBuilder.Entity<TblRoomsDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblRoomsDetails");

                entity.Property(e => e.BGander).HasColumnName("bGander");

                entity.Property(e => e.City).HasMaxLength(50);

                entity.Property(e => e.GeneralState).HasMaxLength(500);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.InnerNum).HasMaxLength(50);

                entity.Property(e => e.KeyKind).HasMaxLength(50);

                entity.Property(e => e.Kind1Id).HasColumnName("Kind1ID");

                entity.Property(e => e.Maslul).HasMaxLength(50);

                entity.Property(e => e.MivneKind).HasMaxLength(50);

                entity.Property(e => e.Neighbor)
                    .HasMaxLength(50)
                    .HasColumnName("neighbor");

                entity.Property(e => e.PersonalEval).HasMaxLength(500);

                entity.Property(e => e.Phone).HasMaxLength(50);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Storage).HasMaxLength(50);

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.SuppervisionId).HasColumnName("SuppervisionID");

                entity.Property(e => e.Symbole).HasMaxLength(50);

                entity.Property(e => e.WorkerId).HasColumnName("WorkerID");

                entity.Property(e => e.YardState).HasMaxLength(50);
            });

            modelBuilder.Entity<TblServiceContract>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblServiceContracts");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.Coin).HasMaxLength(10);

                entity.Property(e => e.Comments).HasColumnType("ntext");

                entity.Property(e => e.Date1).HasColumnType("smalldatetime");

                entity.Property(e => e.Date2).HasColumnType("smalldatetime");

                entity.Property(e => e.DocName)
                    .HasMaxLength(500)
                    .HasColumnName("docName");

                entity.Property(e => e.DocNameView)
                    .HasMaxLength(500)
                    .HasColumnName("docNameView");

                entity.Property(e => e.HatsmadaId).HasColumnName("HatsmadaID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ResponsibleId).HasColumnName("ResponsibleID");

                entity.Property(e => e.SapakId).HasColumnName("SapakID");

                entity.Property(e => e.ServiceId)
                    .HasColumnName("ServiceID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ServiceKod).HasMaxLength(50);

                entity.Property(e => e.ServicePrice).HasColumnType("money");
            });

            modelBuilder.Entity<TblSidurWorkerRoom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblSidurWorkerRooms");

                entity.Property(e => e.Action1)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Days)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FromDate).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Time1)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Time2)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ToDate).HasColumnType("datetime");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.WorkerId).HasColumnName("WorkerID");
            });

            modelBuilder.Entity<TblSkirot>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblSkirot");

                entity.HasIndex(e => e.Id, "id")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SkiraName).HasMaxLength(100);
            });

            modelBuilder.Entity<TblSkirotDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblSkirotDetails");

                entity.Property(e => e.Caption1).HasMaxLength(200);

                entity.Property(e => e.Class1).HasMaxLength(50);

                entity.Property(e => e.NType)
                    .HasColumnName("nType")
                    .HasDefaultValueSql("(0)")
                    .HasComment("'1=caption      '2=only text     '3=with chkbox   '4=with combo  '5=with option");

                entity.Property(e => e.SkiraId)
                    .HasColumnName("SkiraID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblSm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblSMS");

                entity.Property(e => e.BSent)
                    .HasColumnName("bSent")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.SMsg)
                    .HasMaxLength(50)
                    .HasColumnName("sMsg");

                entity.Property(e => e.SendTo).HasMaxLength(50);
            });

            modelBuilder.Entity<TblSponserChild>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblSponserChild");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(70);

                entity.Property(e => e.Kod).HasMaxLength(10);

                entity.Property(e => e.ParentId).HasColumnName("ParentID");
            });

            modelBuilder.Entity<TblSubjectAction>(entity =>
            {
                entity.ToTable("tblSubjectActions");

                entity.HasIndex(e => e.Item, "IX_tblSubjectActions")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(100)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TblSubjectOrder>(entity =>
            {
                entity.ToTable("tblSubjectOrders");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(100)
                    .HasColumnName("item")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblSummaryRecommendation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblSummaryRecommendations");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Exercise).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.MedicalGroup).HasMaxLength(300);

                entity.Property(e => e.MedicalGroupId).HasColumnName("MedicalGroupID");

                entity.Property(e => e.Recommendations).HasMaxLength(50);

                entity.Property(e => e.SType).HasColumnName("sType");

                entity.Property(e => e.Subject).HasMaxLength(300);

                entity.Property(e => e.UserCreate).HasMaxLength(400);
            });

            modelBuilder.Entity<TblSupplyAsk>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblSupplyAsk");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.SupplyBalance).HasDefaultValueSql("((0))");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<TblSynToWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblSynToWeb");

                entity.Property(e => e.Action)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Param1)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Param2)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Param3)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Param4)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblSynelCharge>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblSynelCharges");

                entity.Property(e => e.BDay).HasColumnName("bDay");

                entity.Property(e => e.ChargeKod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(50)
                    .HasColumnName("IDCard");

                entity.Property(e => e.MiunId).HasColumnName("MiunID");

                entity.Property(e => e.UnitPrice).HasColumnType("money");
            });

            modelBuilder.Entity<TblSynelKodByDay>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblSynelKodByDay");

                entity.Property(e => e.ChargeKod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DayId).HasColumnName("DayID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");
            });

            modelBuilder.Entity<TblSynelKodToAvot>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblSynelKodToAvot");

                entity.Property(e => e.AvotKod)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.SynelKod)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblTabLogRead>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTabLogRead");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Memo1).HasColumnType("text");
            });

            modelBuilder.Entity<TblTabSetting>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTabSetting");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Memo1).HasMaxLength(50);

                entity.Property(e => e.TabNum).HasMaxLength(50);

                entity.Property(e => e.Type1).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblTakziv>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblTakziv_PK")
                    .IsClustered(false);

                entity.ToTable("tblTakziv");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1")
                    .HasComment("תאריך התחלה");

                entity.Property(e => e.Date2)
                    .HasColumnType("datetime")
                    .HasColumnName("date2")
                    .HasComment("תאריך סיום");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.SYear)
                    .HasMaxLength(10)
                    .HasColumnName("sYear");

                entity.Property(e => e.TreeName).HasMaxLength(100);

                entity.Property(e => e.TreeSrc).HasColumnType("ntext");
            });

            modelBuilder.Entity<TblTakzivDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTakzivDetails");

                entity.HasIndex(e => e.HeshId, "HashID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TakzivId, "TakzivID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.CurrentSum)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום בפועל");

                entity.Property(e => e.CurrentSum1)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום בפועל לחודש");

                entity.Property(e => e.CurrentSum10)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום בפועל לחודש");

                entity.Property(e => e.CurrentSum11)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום בפועל לחודש");

                entity.Property(e => e.CurrentSum12)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום בפועל לחודש");

                entity.Property(e => e.CurrentSum2)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום בפועל לחודש");

                entity.Property(e => e.CurrentSum3)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום בפועל לחודש");

                entity.Property(e => e.CurrentSum4)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום בפועל לחודש");

                entity.Property(e => e.CurrentSum5)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום בפועל לחודש");

                entity.Property(e => e.CurrentSum6)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום בפועל לחודש");

                entity.Property(e => e.CurrentSum7)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום בפועל לחודש");

                entity.Property(e => e.CurrentSum8)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום בפועל לחודש");

                entity.Property(e => e.CurrentSum9)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום בפועל לחודש");

                entity.Property(e => e.HeshId)
                    .HasColumnName("HeshID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("קישור לחשבון");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.NType)
                    .HasColumnName("nType")
                    .HasDefaultValueSql("(0)")
                    .HasComment("0=הוצאה 1=הכנסה");

                entity.Property(e => e.Sum1)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום מוקצה לחודש הראשון");

                entity.Property(e => e.Sum10)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום מוקצה לחודש העשירי");

                entity.Property(e => e.Sum11)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום מוקצה לחודש האחד עשרה");

                entity.Property(e => e.Sum12)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום מוקצה לחודש השתים עשרה");

                entity.Property(e => e.Sum2)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום מוקצה לחודש השני");

                entity.Property(e => e.Sum3)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום מוקצה לחודש השלישי");

                entity.Property(e => e.Sum4)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום מוקצה לחודש הרביעי");

                entity.Property(e => e.Sum5)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום מוקצה לחודש החמישי");

                entity.Property(e => e.Sum6)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום מוקצה לחודש השישי");

                entity.Property(e => e.Sum7)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום מוקצה לחודש השביעי");

                entity.Property(e => e.Sum8)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום מוקצה לחודש השמיני");

                entity.Property(e => e.Sum9)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום מוקצה לחודש התשיעי");

                entity.Property(e => e.SumAll)
                    .HasDefaultValueSql("(0)")
                    .HasComment("סכום מוקצה");

                entity.Property(e => e.TakzivId)
                    .HasColumnName("TakzivID")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblTaskProcedure>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTaskProcedures");

                entity.HasIndex(e => new { e.ProcedureKey, e.StatusListId }, "dup")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.AvhanaKod)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BDanger).HasColumnName("bDanger");

                entity.Property(e => e.BNotEdit).HasColumnName("bNotEdit");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Frequency).HasColumnName("frequency");

                entity.Property(e => e.FrequencyDesc)
                    .IsRequired()
                    .HasColumnName("frequencyDesc")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.KindFrequency)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('d')");

                entity.Property(e => e.NumOfKmahlaka).HasColumnName("NumOfKMahlaka");

                entity.Property(e => e.ProcedureDesc)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ProcedureKey)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ProfileList)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ProfileListId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PropertiesList)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.StatusList)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.StatusListId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblTelemarketingAction>(entity =>
            {
                entity.ToTable("tblTelemarketingActions");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActionKind)
                    .HasMaxLength(50)
                    .HasComment("1= פניה נוספת, 2=לשלוח חומר, 3=פגישה,4=פעולה אחרת");

                entity.Property(e => e.B2bUserName)
                    .HasMaxLength(50)
                    .HasColumnName("B2B_UserName");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusS).HasMaxLength(100);

                entity.Property(e => e.Time1).HasMaxLength(10);

                entity.Property(e => e.TsTemp)
                    .HasColumnType("datetime")
                    .HasColumnName("tsTemp");

                entity.Property(e => e.WorkerId).HasColumnName("WorkerID");
            });

            modelBuilder.Entity<TblTelemarketingField>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTelemarketingFields");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Key).HasMaxLength(50);

                entity.Property(e => e.OrderId).HasColumnName("OrderID");
            });

            modelBuilder.Entity<TblTempAv>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTempAv");

                entity.Property(e => e.A)
                    .HasMaxLength(200)
                    .HasColumnName("a");

                entity.Property(e => e.B)
                    .HasMaxLength(200)
                    .HasColumnName("b");

                entity.Property(e => e.C)
                    .HasMaxLength(200)
                    .HasColumnName("c");

                entity.Property(e => e.D)
                    .HasMaxLength(200)
                    .HasColumnName("d");

                entity.Property(e => e.E)
                    .HasMaxLength(200)
                    .HasColumnName("e");
            });

            modelBuilder.Entity<TblTempFim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTempFim");

                entity.Property(e => e.Cap1)
                    .HasMaxLength(100)
                    .HasColumnName("cap1");

                entity.Property(e => e.Key1).HasMaxLength(20);
            });

            modelBuilder.Entity<TblTempRep2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTempRep2");

                entity.Property(e => e.Aaa)
                    .HasMaxLength(10)
                    .HasColumnName("AAA")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TblTempRepTnout>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTempRepTnout");

                entity.Property(e => e.BIshpuz)
                    .HasColumnName("bIshpuz")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.ClientName).HasMaxLength(50);

                entity.Property(e => e.Date1).HasMaxLength(12);

                entity.Property(e => e.Date2).HasMaxLength(12);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IdCard).HasMaxLength(50);

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.NCount).HasColumnName("nCount");

                entity.Property(e => e.NDays).HasColumnName("nDays");

                entity.Property(e => e.ParitPrice).HasColumnType("money");

                entity.Property(e => e.Price1).HasColumnType("money");

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserKod).HasMaxLength(50);

                entity.Property(e => e.TifkudId).HasColumnName("TifkudID");
            });

            modelBuilder.Entity<TblTest>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblTests_PK")
                    .IsClustered(false);

                entity.ToTable("tblTests");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TestName, "TestName")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasComment("מזהה יחודי");

                entity.Property(e => e.Archive)
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם זה מבדק ארכיון כך שלא יוצג יותר במערכת");

                entity.Property(e => e.CorrectMax)
                    .HasDefaultValueSql("(0)")
                    .HasComment("הגדרת ערכים תקניים באזם זה מבחן של נקודות-ערך עליון");

                entity.Property(e => e.CorrectMin)
                    .HasDefaultValueSql("(0)")
                    .HasComment("הגדרת ערכים תקניים באזם זה מבחן של נקודות-ערך תחתון");

                entity.Property(e => e.Desc)
                    .HasMaxLength(255)
                    .HasComment("תיאור קצר שמופיע בראש המבחן");

                entity.Property(e => e.Locked)
                    .HasDefaultValueSql("(0)")
                    .HasComment("רק אחרי נעילה אפשר להשתמש במבחן");

                entity.Property(e => e.NKind)
                    .HasColumnName("nKind")
                    .HasDefaultValueSql("(0)")
                    .HasComment("איזה סוג 0=מבחן   2=");

                entity.Property(e => e.TestName)
                    .HasMaxLength(120)
                    .HasComment("שם המבחן בדיקה");

                entity.Property(e => e.UserIdcreate)
                    .HasColumnName("UserIDCreate")
                    .HasDefaultValueSql("(0)")
                    .HasComment("יוצר");
            });

            modelBuilder.Entity<TblTestDetail>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblTestDetail_PK")
                    .IsClustered(false);

                entity.ToTable("tblTestDetail");

                entity.HasIndex(e => e.TestId, "TestID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasComment("מזהה יחודי");

                entity.Property(e => e.NLine)
                    .HasColumnName("nLine")
                    .HasDefaultValueSql("(1)")
                    .HasComment("בתצוגה כמה שורות יופיע התיבת טקסט");

                entity.Property(e => e.NType)
                    .HasColumnName("nType")
                    .HasDefaultValueSql("(0)")
                    .HasComment("סוג השורה 0-כותרת  1-ערך חופשי/מספרי  2-קומבו      3-Group");

                entity.Property(e => e.TestId)
                    .HasColumnName("TestID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לטבלת מבחנים");

                entity.Property(e => e.Value1)
                    .HasMaxLength(120)
                    .HasComment("הכיתוב שיופיע במבחן");
            });

            modelBuilder.Entity<TblTestMarkDescription>(entity =>
            {
                entity.ToTable("tblTestMarkDescription");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("id");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.EPoint).HasColumnName("e_Point");

                entity.Property(e => e.SPoint).HasColumnName("s_Point");

                entity.Property(e => e.TestId).HasColumnName("testId");
            });

            modelBuilder.Entity<TblTeumTipulParticipant>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTeumTipulParticipants");

                entity.HasIndex(e => new { e.Id, e.Item }, "NonClusteredIndex-20161218-114423")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblTmpHeshEnrgy>(entity =>
            {
                entity.ToTable("tblTmpHeshEnrgy");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.NType).HasColumnName("nType");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TblTmpRoomEmpty>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTmpRoomEmpty");

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.LocationId, "LocationID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Mahlaka, "Mahlaka")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.AgafName).HasMaxLength(50);

                entity.Property(e => e.BedsInUse).HasDefaultValueSql("(0)");

                entity.Property(e => e.Comments).HasMaxLength(200);

                entity.Property(e => e.DateAsk).HasColumnType("datetime");

                entity.Property(e => e.DateEnter).HasMaxLength(15);

                entity.Property(e => e.DateLeave).HasMaxLength(15);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Mahlaka).HasMaxLength(20);

                entity.Property(e => e.RoomClass).HasMaxLength(10);

                entity.Property(e => e.RoomName).HasMaxLength(50);

                entity.Property(e => e.Teken).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TblTnuahKind>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblTnuahKinds_PK")
                    .IsClustered(false);

                entity.ToTable("tblTnuahKinds");

                entity.HasIndex(e => e.Kod, "Kod")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Details)
                    .HasMaxLength(100)
                    .HasComment("תיאור , כגון:חייבת במע\"מ");

                entity.Property(e => e.Kod)
                    .HasMaxLength(10)
                    .HasComment("קיצור לסוג התנועה, למשל :חל מתייחס לחשבונית לקוח");

                entity.Property(e => e.TkindName)
                    .HasMaxLength(50)
                    .HasColumnName("TKindName")
                    .HasComment("שם סוג התנועה, כגון: חשבונית ספק");
            });

            modelBuilder.Entity<TblTnuot>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblTnuot_PK")
                    .IsClustered(false);

                entity.ToTable("tblTnuot");

                entity.HasIndex(e => e.Asmachta1, "Asmachta")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Asmachta2, "Asmachta2")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Asmachta1).HasMaxLength(25);

                entity.Property(e => e.Asmachta2).HasMaxLength(25);

                entity.Property(e => e.BZmani)
                    .HasColumnName("bZmani")
                    .HasDefaultValueSql("(1)")
                    .HasComment("האם התנועה זמנית או קבועה?");

                entity.Property(e => e.CardHeshId)
                    .HasColumnName("CardHeshID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("כרטיס הנה\"ח");

                entity.Property(e => e.ClientHeshId)
                    .HasColumnName("ClientHeshID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("חשבון לקוח/ספק");

                entity.Property(e => e.DateCreate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))")
                    .HasComment("תאריך יצירה");

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DocId)
                    .HasColumnName("DocID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מס' המסמך מהטבלה tblHeshDocNames");

                entity.Property(e => e.KodMiunId)
                    .HasColumnName("KodMiunID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.MahamKindId)
                    .HasColumnName("MahamKindID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("סוג המע\"מ: רגיל,תשומות");

                entity.Property(e => e.MahamSum)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("סך מע\"מ");

                entity.Property(e => e.ManaId)
                    .HasColumnName("ManaID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מס' המנה מטבלה tblManot");

                entity.Property(e => e.PayDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))")
                    .HasComment("תאריך ערך");

                entity.Property(e => e.PaySum)
                    .HasColumnType("money")
                    .HasComment("הסכום כולל מע\"מ");

                entity.Property(e => e.RevahCaptionId)
                    .HasColumnName("RevahCaptionID")
                    .HasComment("כותרת לדוח רווח והפסד");
            });

            modelBuilder.Entity<TblTnuot2>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblTnuot2_PK")
                    .IsClustered(false);

                entity.ToTable("tblTnuot2");

                entity.HasIndex(e => e.Asmachta1, "Asmachta")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Asmachta2, "Asmachta2")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.DocId, "DocID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.HeshId, "HeshID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.ManaId, "tblTnuotManaID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Asmachta1).HasMaxLength(25);

                entity.Property(e => e.Asmachta2).HasMaxLength(25);

                entity.Property(e => e.BHashavshevet)
                    .HasColumnName("bHashavshevet")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם התנועה יוצאה לחשבשבת?");

                entity.Property(e => e.BZmani)
                    .HasColumnName("bZmani")
                    .HasDefaultValueSql("(0)")
                    .HasComment("תנועה בקובץ זמני/קבוע");

                entity.Property(e => e.DateCreate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))")
                    .HasComment("תאריך יצירה");

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DocId)
                    .HasColumnName("DocID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("המסמך ממנו נוצרה התנועה");

                entity.Property(e => e.HeshId)
                    .HasColumnName("HeshID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.HeshKod).HasMaxLength(30);

                entity.Property(e => e.ManaId)
                    .HasColumnName("ManaID")
                    .HasComment("מס' המנה");

                entity.Property(e => e.PayDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(convert(datetime,convert(varchar,getdate(),1),1))")
                    .HasComment("תאריך ערך");

                entity.Property(e => e.SumHova).HasColumnType("money");

                entity.Property(e => e.SumZchut).HasColumnType("money");

                entity.Property(e => e.TkindKod)
                    .HasMaxLength(20)
                    .HasColumnName("TKindKod")
                    .HasComment("סוג התנועה");
            });

            modelBuilder.Entity<TblToolbarButton>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatblToolbarButtons_PK")
                    .IsClustered(false);

                entity.ToTable("tblToolbarButtons");

                entity.HasIndex(e => e.ProductName, "AppID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Id, "ID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.Key, "Key")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.BDefault)
                    .HasColumnName("bDefault")
                    .HasDefaultValueSql("(0)")
                    .HasComment("האם להציג לחצן זה כברירת מחדל");

                entity.Property(e => e.Caption).HasMaxLength(25);

                entity.Property(e => e.ImageFile)
                    .HasMaxLength(15)
                    .HasComment("שם הקובץ");

                entity.Property(e => e.Key).HasMaxLength(20);

                entity.Property(e => e.ProductName).HasMaxLength(50);

                entity.Property(e => e.ToolTip).HasMaxLength(50);
            });

            modelBuilder.Entity<TblTorimRecommend>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTorimRecommend");

                entity.Property(e => e.BDone)
                    .HasColumnName("bDone")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.RelatedId).HasColumnName("RelatedID");

                entity.Property(e => e.SponserId)
                    .HasColumnName("SponserID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Type1).HasDefaultValueSql("((0))");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblTranseTo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTranse_To");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(100);
            });

            modelBuilder.Entity<TblTreatment>(entity =>
            {
                entity.ToTable("tblTreatments");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateCreate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DateEnd).HasColumnType("datetime");

                entity.Property(e => e.Entitle)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NumHoursWeeks).HasMaxLength(100);

                entity.Property(e => e.Plans)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.TelA)
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TelB)
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasColumnName("TElB")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TelC).HasMaxLength(30);

                entity.Property(e => e.WorkerIdA)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.WorkerIdC).HasMaxLength(60);

                entity.Property(e => e.WorkerIdb)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("WorkerIDB")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblTreatmentNotDone>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTreatmentNotDone");

                entity.HasIndex(e => new { e.Id, e.ClientId, e.UserId, e.UserCreate, e.TreatmentId, e.Date1, e.BDel }, "trying")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.TreatmentId)
                    .HasColumnName("TreatmentID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UserCreate).HasMaxLength(30);

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblTreatmentPlanReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTreatmentPlanReports");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.DateR).HasColumnType("datetime");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.RepType)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.UserCreate).HasMaxLength(300);
            });

            modelBuilder.Entity<TblTyingClient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTyingClient");

                entity.Property(e => e.AgreeFamily).HasMaxLength(200);

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.BPsichater).HasColumnName("bPsichater");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateEnd).HasColumnType("datetime");

                entity.Property(e => e.DateRenew).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.StatusReason).HasMaxLength(200);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.Time1).HasMaxLength(20);

                entity.Property(e => e.Time2).HasMaxLength(40);

                entity.Property(e => e.TimeRenew).HasMaxLength(20);

                entity.Property(e => e.TipulId).HasDefaultValueSql("((0))");

                entity.Property(e => e.TyingEvarId).HasMaxLength(50);

                entity.Property(e => e.TyingKindId).HasMaxLength(50);

                entity.Property(e => e.TyingLimitHow).HasMaxLength(50);

                entity.Property(e => e.TyingReasonId).HasMaxLength(50);

                entity.Property(e => e.UserCreate).HasMaxLength(100);
            });

            modelBuilder.Entity<TblTyingClientKafolFix>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTyingClientKafolFix");

                entity.Property(e => e.AgreeFamily).HasMaxLength(200);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DateEnd).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.TyingEvarId).HasMaxLength(50);

                entity.Property(e => e.TyingLimitHow).HasMaxLength(50);

                entity.Property(e => e.TyingReasonId).HasMaxLength(50);

                entity.Property(e => e.UserCreate).HasMaxLength(100);
            });

            modelBuilder.Entity<TblTyingGave>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblTyingGave");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Memo1)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TsTamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tsTamp")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblUpdate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblUpdates");

                entity.Property(e => e.Dest).HasMaxLength(50);

                entity.Property(e => e.File1).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Status).HasDefaultValueSql("((0))");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Version).HasMaxLength(50);
            });

            modelBuilder.Entity<TblUpdateInfo>(entity =>
            {
                entity.ToTable("tblUpdateInfo");

                entity.HasIndex(e => new { e.ModuleName, e.Subject1, e.UpdateDetails }, "IX_tblUpdateInfo")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Comments).HasMaxLength(100);

                entity.Property(e => e.Date1)
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar],getdate(),(101)))");

                entity.Property(e => e.Href).HasMaxLength(100);

                entity.Property(e => e.ModuleName).HasMaxLength(50);

                entity.Property(e => e.Subject1).HasMaxLength(150);

                entity.Property(e => e.UpdateDetails).HasMaxLength(1000);

                entity.Property(e => e.UserDelete).HasMaxLength(300);

                entity.Property(e => e.VersionNum).HasMaxLength(50);
            });

            modelBuilder.Entity<TblUserChangePassword>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblUserChangePassword");

                entity.Property(e => e.ByUser)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<TblUserDrugSetting>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblUserDrugSetting");

                entity.HasIndex(e => e.ClientId, "ClientID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.LocationId, "LocationID")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.PriceListId, "PriceListID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.BUpSal)
                    .HasColumnName("bUpSal")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClassDrugtoInvite)
                    .HasDefaultValueSql("(0)")
                    .HasComment("קבוצה להזמנה ולחלוקה של התרופות");

                entity.Property(e => e.ClientId)
                    .HasColumnName("ClientID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.MedDiscount)
                    .HasDefaultValueSql("(0)")
                    .HasComment("אחוז הנחה");

                entity.Property(e => e.PriceListId)
                    .HasColumnName("PriceListID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מחירון בהנחה");
            });

            modelBuilder.Entity<TblUserGetMassageReminderKey>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblUserGetMassageReminderKey");
            });

            modelBuilder.Entity<TblUserSetting>(entity =>
            {
                entity.HasKey(e => e.UserId)
                    .HasName("aaaaatblUserSetting_PK")
                    .IsClustered(false);

                entity.ToTable("tblUserSetting");

                entity.HasIndex(e => e.UserId, "UserID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.UserId)
                    .ValueGeneratedNever()
                    .HasColumnName("UserID");

                entity.Property(e => e.BMahlakaOnly).HasColumnName("bMahlakaOnly");

                entity.Property(e => e.BMustStrongPassword).HasColumnName("bMustStrongPassword");

                entity.Property(e => e.BgColor)
                    .HasDefaultValueSql("((-1))")
                    .HasComment("צבע רקע");

                entity.Property(e => e.BgColorList).HasDefaultValueSql("((-1))");

                entity.Property(e => e.CaptionColor).HasDefaultValueSql("((-1))");

                entity.Property(e => e.ClientsFields).HasColumnType("ntext");

                entity.Property(e => e.ClientsFieldsHeader)
                    .HasColumnType("ntext")
                    .HasComment("שם שדות ברשימת לקוחות/דיירים");

                entity.Property(e => e.ClientsSize).HasMaxLength(255);

                entity.Property(e => e.EnterScreenId)
                    .HasColumnName("EnterScreenID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FontName)
                    .HasMaxLength(50)
                    .HasComment("הפונט שנבחר");

                entity.Property(e => e.FontSize).HasMaxLength(10);

                entity.Property(e => e.Harshah)
                    .HasColumnType("ntext")
                    .HasComment("הרשאות המשתמש, התו הראשון מסמן :0-אין הרשאה,1-קריאה,2-מלאה");

                entity.Property(e => e.KupaIdonly).HasColumnName("KupaIDOnly");

                entity.Property(e => e.LastInfoId).HasColumnName("LastInfoID");

                entity.Property(e => e.Mahlaka)
                    .HasMaxLength(100)
                    .HasColumnName("mahlaka");

                entity.Property(e => e.MahlakaReminder).HasColumnName("mahlakaReminder");

                entity.Property(e => e.OthersFields).HasColumnType("ntext");

                entity.Property(e => e.OthersSize).HasMaxLength(255);

                entity.Property(e => e.SapakimFields).HasColumnType("ntext");

                entity.Property(e => e.SapakimSize).HasMaxLength(255);

                entity.Property(e => e.SelectIdKupaOrSponser)
                    .HasMaxLength(250)
                    .HasColumnName("selectIdKupaOrSponser");

                entity.Property(e => e.SponserIdOnly).HasDefaultValueSql("((0))");

                entity.Property(e => e.TextColorForms)
                    .HasDefaultValueSql("((-1))")
                    .HasComment("צבע פונט טבלאות");

                entity.Property(e => e.TextColorList)
                    .HasDefaultValueSql("((-1))")
                    .HasComment("צבע רשימה");

                entity.Property(e => e.ToolbarKeys)
                    .HasMaxLength(1000)
                    .HasComment("מקושר לתפריט הראשי");

                entity.Property(e => e.UserLocationId)
                    .HasMaxLength(50)
                    .HasColumnName("userLocationID");

                entity.Property(e => e.UserLocations).HasMaxLength(30);

                entity.Property(e => e.UsersFields)
                    .HasColumnType("ntext")
                    .HasComment("השדות שנבחרו ע\"י המשתמש לרשימה הראשית-lvClients מופרד ב-;");

                entity.Property(e => e.UsersSize)
                    .HasMaxLength(255)
                    .HasComment("גודל הטורים ברשימה מופרד עם ;");
            });

            modelBuilder.Entity<TblUserinSystem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblUserinSystem");

                entity.Property(e => e.Action1).HasMaxLength(50);

                entity.Property(e => e.AduserName)
                    .IsRequired()
                    .HasColumnName("ADUserName")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BVirtual).HasColumnName("bVirtual");

                entity.Property(e => e.ComputerIp)
                    .IsRequired()
                    .HasColumnName("ComputerIP")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ComputerName)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ver)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TblUsersToDelBalev>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblUsersToDel_Balev");

                entity.Property(e => e.UserName).IsRequired();
            });

            modelBuilder.Entity<TblVisitlist>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblVisitlist");

                entity.Property(e => e.BArrived)
                    .HasColumnName("bArrived")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BDone)
                    .HasColumnName("bDone")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BLocked).HasColumnName("bLocked");

                entity.Property(e => e.BNeedPay).HasColumnName("bNeedPay");

                entity.Property(e => e.Clientid).HasDefaultValueSql("((0))");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kod1).HasMaxLength(20);

                entity.Property(e => e.NTorRange).HasColumnName("nTorRange");

                entity.Property(e => e.NTorRanhe).HasColumnName("nTorRanhe");

                entity.Property(e => e.NTorType)
                    .HasColumnName("nTorType")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NotArrived)
                    .HasColumnName("notArrived")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PlaceId).HasColumnName("PlaceID");

                entity.Property(e => e.PriceId)
                    .HasColumnName("PriceID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ResId)
                    .HasColumnName("ResID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SnifId).HasColumnName("SnifID");

                entity.Property(e => e.TimeArrived).HasColumnType("datetime");

                entity.Property(e => e.Tofes17Id).HasColumnName("Tofes17ID");

                entity.Property(e => e.UserCreateId)
                    .HasColumnName("UserCreateID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.YomanId).HasColumnName("YomanID");
            });

            modelBuilder.Entity<TblWorkerRoom>(entity =>
            {
                entity.ToTable("tblWorkerRoom");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.FreeDays)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.JobId)
                    .HasMaxLength(50)
                    .HasColumnName("JobID");

                entity.HasOne(d => d.Client)
                    .WithMany(p => p.TblWorkerRooms)
                    .HasForeignKey(d => d.Clientid)
                    .HasConstraintName("FK_tblWorkerRoom_ClientDetails");
            });

            modelBuilder.Entity<TblWorkersDaysTime>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblWorkersDaysTimes");

                entity.HasIndex(e => e.WorkerId, "DoctorID")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MishmeretId).HasColumnName("MishmeretID");

                entity.Property(e => e.NDay)
                    .HasColumnName("nDay")
                    .HasDefaultValueSql("(0)")
                    .HasComment("1-7 יום בשבוע");

                entity.Property(e => e.Time1From)
                    .HasMaxLength(50)
                    .HasComment("זמן משמרת 1");

                entity.Property(e => e.Time1To)
                    .HasMaxLength(50)
                    .HasComment("זמן משמרת 1");

                entity.Property(e => e.Time2From)
                    .HasMaxLength(50)
                    .HasComment("זמן משמרת 2");

                entity.Property(e => e.Time2To)
                    .HasMaxLength(50)
                    .HasComment("זמן משמרת 2");

                entity.Property(e => e.WorkerId)
                    .HasColumnName("WorkerID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לעובד");
            });

            modelBuilder.Entity<TblYeshivaParticipate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblYeshivaParticipates");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.JobId).HasColumnName("JobID");

                entity.Property(e => e.PlanId).HasColumnName("PlanID");

                entity.Property(e => e.SkiraDate)
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Target).HasMaxLength(100);

                entity.Property(e => e.WorkerId).HasColumnName("WorkerID");

                entity.Property(e => e.WorkerName).HasMaxLength(50);

                entity.Property(e => e.YeshivaId).HasColumnName("YeshivaID");
            });

            modelBuilder.Entity<TblYeshivatTzevetLock>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblYeshivatTzevetLock");

                entity.Property(e => e.Date1).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Time1).HasMaxLength(50);

                entity.Property(e => e.ToClientId)
                    .HasColumnName("ToClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UserLock).HasDefaultValueSql("((0))");

                entity.Property(e => e.UserLogin).HasMaxLength(100);

                entity.Property(e => e.YeshivaId)
                    .HasColumnName("YeshivaID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblYeshivatTzevetLockSummery>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblYeshivatTzevetLockSummery");

                entity.Property(e => e.Date1).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Time1).HasMaxLength(50);

                entity.Property(e => e.ToClientId)
                    .HasColumnName("ToClientID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UserLock).HasDefaultValueSql("((0))");

                entity.Property(e => e.UserLogin).HasMaxLength(100);

                entity.Property(e => e.YeshivaId)
                    .HasColumnName("YeshivaID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblYoman>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblYoman");

                entity.Property(e => e.BArchive)
                    .HasColumnName("bArchive")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CompanyId).HasColumnName("CompanyID");

                entity.Property(e => e.DoctorId).HasColumnName("DoctorID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Memo1).HasMaxLength(500);

                entity.Property(e => e.Memo2).HasMaxLength(500);

                entity.Property(e => e.Memo3).HasMaxLength(500);

                entity.Property(e => e.NLevel).HasColumnName("nLevel");

                entity.Property(e => e.Name1).HasMaxLength(50);
            });

            modelBuilder.Entity<TblbiList>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblbiList");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Key1).IsRequired();

                entity.Property(e => e.Url).IsRequired();
            });

            modelBuilder.Entity<TblclientEquipment>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblclientEquipment");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.EquipmentId).HasMaxLength(100);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Memo).HasColumnName("memo");

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp");

                entity.Property(e => e.Usercreate)
                    .HasMaxLength(200)
                    .HasColumnName("usercreate");

                entity.Property(e => e.Userid).HasColumnName("userid");
            });

            modelBuilder.Entity<TblclientRespiration>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblclientRespiration");

                entity.Property(e => e.Bdel)
                    .HasColumnName("bdel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Tstamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tstamp");

                entity.Property(e => e.Userid).HasColumnName("userid");

                entity.Property(e => e.UseridDel).HasColumnName("useridDel");

                entity.Property(e => e.Username)
                    .HasMaxLength(100)
                    .HasColumnName("username");
            });

            modelBuilder.Entity<TblclientTakingWC>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblclientTaking_W_C");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("date");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.TsCreateDate)
                    .HasColumnType("date")
                    .HasColumnName("tsCreateDate");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserName).HasMaxLength(50);
            });

            modelBuilder.Entity<TblclientsWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblclients_Web");

                entity.Property(e => e.AppDoctorId).HasColumnName("appDoctorId");

                entity.Property(e => e.AvotId).HasColumnName("AvotID");

                entity.Property(e => e.BPassport).HasColumnName("bPassport");

                entity.Property(e => e.Fname)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Fnameeng)
                    .IsRequired()
                    .HasColumnName("fnameeng");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IdCard)
                    .HasMaxLength(30)
                    .HasColumnName("idCard");

                entity.Property(e => e.Lname)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Lnameeng)
                    .IsRequired()
                    .HasColumnName("lnameeng");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.NType).HasColumnName("nType");

                entity.Property(e => e.NameView)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate");

                entity.Property(e => e.TStampUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampUpdate");

                entity.Property(e => e.UniqId)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasColumnName("UniqID");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TbldefDrugUnit>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefDrugUnit");

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.DrugMinunType).IsRequired();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.SeegnalCode)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SeegnalUnitName)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Tstampcreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tstampcreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Tstampupdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tstampupdate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Useridcreate).HasColumnName("useridcreate");

                entity.Property(e => e.Useridupdate).HasColumnName("useridupdate");
            });

            modelBuilder.Entity<TbldefEmploymentGroup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefEmploymentGroups");

                entity.HasIndex(e => e.Item, "IX_tblSubjectActions")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(400)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TbldefItemType>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefItemTypes");

                entity.Property(e => e.BArchive)
                    .HasColumnName("bArchive")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CompanyId).HasColumnName("CompanyID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.OrderId).HasColumnName("orderID");
            });

            modelBuilder.Entity<TbldefMaintenance>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .HasName("aaaaatbldefMaintenance_PK")
                    .IsClustered(false);

                entity.ToTable("tbldefMaintenance");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Archive).HasDefaultValueSql("((0))");

                entity.Property(e => e.Item)
                    .HasMaxLength(255)
                    .HasComment("סוג התקלה");

                entity.Property(e => e.KodParit)
                    .HasColumnName("KOdParit")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MiunId)
                    .HasColumnName("MiunID")
                    .HasDefaultValueSql("(0)")
                    .HasComment("מזהה לנושא");
            });

            modelBuilder.Entity<TbldefMappingTypeMed>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefMappingTypeMed");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item).HasColumnName("item");
            });

            modelBuilder.Entity<TbldefPlace>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefPlace");

                entity.Property(e => e.BArchive)
                    .HasColumnName("bArchive")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);
            });

            modelBuilder.Entity<TbldefTimeType>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefTimeType");

                entity.Property(e => e.BArchive)
                    .HasColumnName("bArchive")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CompanyId).HasColumnName("CompanyID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item).HasMaxLength(50);

                entity.Property(e => e.Kod1)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NTime).HasColumnName("nTime");

                entity.Property(e => e.OrderId).HasColumnName("orderID");
            });

            modelBuilder.Entity<TbldefTrainingGet>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefTrainingGet");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TbldefTyingEvar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefTyingEvar");

                entity.HasIndex(e => new { e.Item, e.Bdel }, "Dup")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(400)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TbldefTyingKind>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefTyingKind");

                entity.HasIndex(e => new { e.Item, e.Bdel }, "Dup")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(400)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TbldefTyingKindPsichater>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefTyingKindPsichater");

                entity.HasIndex(e => e.Item, "IX_tbldefTyingKindPsichaterItem")
                    .IsUnique();

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TbldefTyingReason>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefTyingReason");

                entity.HasIndex(e => new { e.Item, e.Bdel }, "Dup")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(400)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TbldefTyingReasonPsichater>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefTyingReasonPsichater");

                entity.HasIndex(e => e.Item, "IX_tbldefTyingReasonPsichaterItem")
                    .IsUnique();

                entity.Property(e => e.BDel)
                    .HasColumnName("bDel")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TbldefTyingResult>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefTyingResult");

                entity.HasIndex(e => e.Item, "dup")
                    .IsUnique()
                    .HasFillFactor((byte)90);

                entity.Property(e => e.Bdel).HasColumnName("bdel");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Item)
                    .HasMaxLength(300)
                    .HasColumnName("item");
            });

            modelBuilder.Entity<TbldefVaccintionComment>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefVaccintionComments");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");
            });

            modelBuilder.Entity<TbldefhtmlcntZarfati>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbldefhtmlcntZarfati");

                entity.Property(e => e.ClsName).HasMaxLength(30);

                entity.Property(e => e.DPoint).HasColumnName("dPoint");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.OrdId).HasColumnName("OrdID");

                entity.Property(e => e.STmp)
                    .HasMaxLength(40)
                    .HasColumnName("sTmp");

                entity.Property(e => e.STmp2)
                    .HasColumnType("ntext")
                    .HasColumnName("sTmp2");

                entity.Property(e => e.TypFormId).HasColumnName("TypFormID");

                entity.Property(e => e.TypFormId2).HasColumnName("TypFormID2");
            });

            modelBuilder.Entity<TbldefparitmiunWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tbldefparitmiun_Web");

                entity.Property(e => e.HeshKod).HasMaxLength(20);

                entity.Property(e => e.HeshKod2).HasMaxLength(20);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ItemEng)
                    .IsRequired()
                    .HasColumnName("Item_Eng");

                entity.Property(e => e.ParentId).HasColumnName("ParentID");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate");

                entity.Property(e => e.TStampUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampUpdate");
            });

            modelBuilder.Entity<TblhmoPriceList>(entity =>
            {
                entity.ToTable("tblhmoPriceLists");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.KupaId).HasColumnName("kupaId");

                entity.Property(e => e.PriceDetails)
                    .IsRequired()
                    .HasColumnName("priceDetails")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PriceKod)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("priceKod")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Reason)
                    .IsRequired()
                    .HasColumnName("reason")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SumOfPrice).HasColumnName("sumOfPrice");

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");
            });

            modelBuilder.Entity<TblleaderWorker>(entity =>
            {
                entity.ToTable("tblleaderWorkers");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.DateCreate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LeaderSubjectId).HasColumnName("LeaderSubjectID");

                entity.Property(e => e.LeaderSubjectList)
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ListMahlakaId)
                    .HasMaxLength(30)
                    .HasColumnName("ListMahlakaID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Memo)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ProfilId).HasMaxLength(200);

                entity.Property(e => e.ProfileId).HasMaxLength(200);

                entity.Property(e => e.TreatName)
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");

                entity.Property(e => e.WorkerId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("WorkerID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TblmimsakimLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblmimsakimLog");

                entity.Property(e => e.BSpec)
                    .HasColumnName("bSpec")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Bmname)
                    .HasMaxLength(300)
                    .HasColumnName("BMName");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(20)
                    .HasColumnName("IDCard");

                entity.Property(e => e.LastRead).HasColumnType("datetime");

                entity.Property(e => e.ListId)
                    .HasColumnType("ntext")
                    .HasColumnName("ListID");

                entity.Property(e => e.LogErr).HasDefaultValueSql("((0))");

                entity.Property(e => e.LogMsg).HasMaxLength(300);

                entity.Property(e => e.Max1).HasMaxLength(20);

                entity.Property(e => e.Memo1).HasMaxLength(500);

                entity.Property(e => e.Min1).HasMaxLength(20);

                entity.Property(e => e.Type1).HasMaxLength(4);

                entity.Property(e => e.UserCreate).HasMaxLength(40);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");

                entity.Property(e => e.Val1).HasMaxLength(100);

                entity.Property(e => e.Ym)
                    .HasMaxLength(20)
                    .HasColumnName("YM");
            });

            modelBuilder.Entity<Tblmmm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblmmm");

                entity.Property(e => e.Archive).HasColumnName("archive");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Key1)
                    .HasMaxLength(10)
                    .HasColumnName("key1");

                entity.Property(e => e.Miunid).HasColumnName("miunid");

                entity.Property(e => e.Name1)
                    .HasMaxLength(50)
                    .HasColumnName("name1");
            });

            modelBuilder.Entity<TblpritimWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblpritim_Web");

                entity.Property(e => e.Archive).HasColumnName("archive");

                entity.Property(e => e.BArchive).HasColumnName("bArchive");

                entity.Property(e => e.Bbill).HasColumnName("bbill");

                entity.Property(e => e.Bmaham).HasColumnName("bmaham");

                entity.Property(e => e.DoctorKod).IsRequired();

                entity.Property(e => e.FreeMaham).IsRequired();

                entity.Property(e => e.HeshKodIn).IsRequired();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.KindId).HasColumnName("KindID");

                entity.Property(e => e.Kod)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.MekParit)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.NGroupLevel).HasColumnName("nGroupLevel");

                entity.Property(e => e.ParitName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.St1)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("ST1");

                entity.Property(e => e.St2)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("ST2");

                entity.Property(e => e.Stbasic)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("STBasic");

                entity.Property(e => e.Stm)
                    .IsRequired()
                    .HasColumnName("STM");

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate");

                entity.Property(e => e.TStampUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampUpdate");

                entity.Property(e => e.YomanTypeId).HasColumnName("YomanTypeID");
            });

            modelBuilder.Entity<TblsmsDetali>(entity =>
            {
                entity.ToTable("tblsmsDetalis");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BSent).HasColumnName("bSent");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.PhoneToSms)
                    .IsRequired()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ResponseMen)
                    .IsRequired()
                    .HasColumnName("responseMen")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SMsg)
                    .IsRequired()
                    .HasColumnName("sMsg")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UseridSend).HasColumnName("useridSend");
            });

            modelBuilder.Entity<Tbltemp3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbltemp3");

                entity.Property(e => e.BConv)
                    .HasMaxLength(255)
                    .HasColumnName("bConv");

                entity.Property(e => e.BConv2)
                    .HasMaxLength(255)
                    .HasColumnName("bConv2");

                entity.Property(e => e.BDel)
                    .HasMaxLength(255)
                    .HasColumnName("bDel");

                entity.Property(e => e.BMain).HasColumnName("bMain");

                entity.Property(e => e.BackClientId)
                    .HasMaxLength(255)
                    .HasColumnName("BackClientID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.DateE).HasMaxLength(255);

                entity.Property(e => e.DateEOld)
                    .HasMaxLength(255)
                    .HasColumnName("DateE_Old");

                entity.Property(e => e.DateS).HasMaxLength(255);

                entity.Property(e => e.DateSOld)
                    .HasMaxLength(255)
                    .HasColumnName("DateS_Old");

                entity.Property(e => e.DescReason).HasMaxLength(255);

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.DoctorName).HasMaxLength(255);

                entity.Property(e => e.FormId).HasColumnName("FormID");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.KabalaId).HasColumnName("KabalaID");

                entity.Property(e => e.KindId).HasColumnName("KindID");

                entity.Property(e => e.NConv)
                    .HasMaxLength(255)
                    .HasColumnName("nConv");

                entity.Property(e => e.Place).HasMaxLength(255);

                entity.Property(e => e.Position)
                    .HasMaxLength(255)
                    .HasColumnName("position");

                entity.Property(e => e.RelatedId).HasColumnName("RelatedID");

                entity.Property(e => e.Status).HasMaxLength(255);

                entity.Property(e => e.StopReason).HasMaxLength(255);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.Theme).HasMaxLength(255);

                entity.Property(e => e.Urgentcy)
                    .HasMaxLength(255)
                    .HasColumnName("urgentcy");

                entity.Property(e => e.UserCreate).HasMaxLength(255);

                entity.Property(e => e.UserCreateId).HasColumnName("UserCreateID");
            });

            modelBuilder.Entity<Tbltmp2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tbltmp2");

                entity.Property(e => e.Date1)
                    .HasColumnType("datetime")
                    .HasColumnName("date1");

                entity.Property(e => e.Mahlaka).HasColumnName("mahlaka");

                entity.Property(e => e.Time1).HasColumnName("time1");

                entity.Property(e => e.Val1)
                    .HasColumnType("ntext")
                    .HasColumnName("val1");
            });

            modelBuilder.Entity<TbltoDekel>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbltoDEKEL");

                entity.Property(e => e.BEndSec).HasColumnName("bEndSec");

                entity.Property(e => e.BMemo).HasColumnName("bMemo");

                entity.Property(e => e.Cap1).HasMaxLength(150);

                entity.Property(e => e.Cap1Eng)
                    .HasMaxLength(150)
                    .HasColumnName("cap1_Eng");

                entity.Property(e => e.Cap1Heb)
                    .HasMaxLength(150)
                    .HasColumnName("cap1_Heb");

                entity.Property(e => e.Htmlsrc).HasColumnType("ntext");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Key1)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.OHeader).HasColumnName("oHeader");

                entity.Property(e => e.OHeaderCap)
                    .HasMaxLength(30)
                    .HasColumnName("oHeaderCap");

                entity.Property(e => e.OrderId).HasColumnName("OrderID");

                entity.Property(e => e.ParentKey).HasMaxLength(50);

                entity.Property(e => e.SType)
                    .HasMaxLength(50)
                    .HasColumnName("sType");

                entity.Property(e => e.Subject1).HasMaxLength(150);
            });

            modelBuilder.Entity<TblvisitlistWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblvisitlist_Web");

                entity.Property(e => e.BArrived).HasColumnName("bArrived");

                entity.Property(e => e.BConfirmByCard).HasColumnName("bConfirmByCard");

                entity.Property(e => e.BConfirmByFree).HasColumnName("bConfirmByFree");

                entity.Property(e => e.BConv).HasColumnName("bConv");

                entity.Property(e => e.BDel).HasColumnName("bDel");

                entity.Property(e => e.BDoctor).HasColumnName("bDoctor");

                entity.Property(e => e.BExport17).HasColumnName("bExport17");

                entity.Property(e => e.BFreq).HasColumnName("bFreq");

                entity.Property(e => e.BHold).HasColumnName("bHold");

                entity.Property(e => e.BLocked).HasColumnName("bLocked");

                entity.Property(e => e.BMarkDone).HasColumnName("bMarkDone");

                entity.Property(e => e.BModeStandBy).HasColumnName("bModeStandBy");

                entity.Property(e => e.BNeedPay).HasColumnName("bNeedPay");

                entity.Property(e => e.BNoReminder).HasColumnName("bNoReminder");

                entity.Property(e => e.BPayWorker).HasColumnName("bPayWorker");

                entity.Property(e => e.BSendSms).HasColumnName("bSendSMS");

                entity.Property(e => e.BSendSmsauto).HasColumnName("bSendSMSAuto");

                entity.Property(e => e.BSentToSponser).HasColumnName("bSentToSponser");

                entity.Property(e => e.BSentToSponserSum)
                    .HasColumnType("money")
                    .HasColumnName("bSentToSponserSum");

                entity.Property(e => e.BSentToWorker).HasColumnName("bSentToWorker");

                entity.Property(e => e.BSesia).HasColumnName("bSesia");

                entity.Property(e => e.BShaban).HasColumnName("bShaban");

                entity.Property(e => e.BSto).HasColumnName("bSto");

                entity.Property(e => e.ChargesId).HasColumnName("ChargesID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.DocHeshId).HasColumnName("DocHeshID");

                entity.Property(e => e.FreqId).HasColumnName("freqID");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.GroupManagerTor)
                    .IsRequired()
                    .HasMaxLength(400);

                entity.Property(e => e.GroupTor)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.MahlakaId1).HasColumnName("MahlakaID1");

                entity.Property(e => e.ManagerTorId).HasColumnName("ManagerTorID");

                entity.Property(e => e.Memo1)
                    .IsRequired()
                    .HasColumnName("memo1");

                entity.Property(e => e.MemoAction)
                    .IsRequired()
                    .HasColumnName("memoAction");

                entity.Property(e => e.MemoManage).IsRequired();

                entity.Property(e => e.MivId).HasColumnName("MivID");

                entity.Property(e => e.NColor).HasColumnName("nColor");

                entity.Property(e => e.ParitKod)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Place)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.Price1).HasColumnType("money");

                entity.Property(e => e.ReasonNoShowId).HasColumnName("ReasonNoShowID");

                entity.Property(e => e.RelateId).HasColumnName("RelateID");

                entity.Property(e => e.SentToSponserSum).HasColumnType("money");

                entity.Property(e => e.SentToWorkerSum).HasColumnType("money");

                entity.Property(e => e.T17Ref).HasColumnName("t17Ref");

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate");

                entity.Property(e => e.TStampUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampUpdate");

                entity.Property(e => e.TimeArrive)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.TorKindId).HasColumnName("TorKindID");

                entity.Property(e => e.TorTypeId).HasColumnName("TorTypeID");

                entity.Property(e => e.WId).HasColumnName("wID");

                entity.Property(e => e.YomanId).HasColumnName("YomanID");
            });

            modelBuilder.Entity<TblyomanWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tblyoman_Web");

                entity.Property(e => e.BSpec).HasColumnName("bSpec");

                entity.Property(e => e.DtEnd).HasColumnType("datetime");

                entity.Property(e => e.DtStart).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.NH).HasColumnName("nH");

                entity.Property(e => e.NW).HasColumnName("nW");

                entity.Property(e => e.Room)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TStampCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampCreate");

                entity.Property(e => e.TStampUpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("tStampUpdate");

                entity.Property(e => e.UniqeYoman)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.YomanMax)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.YomanMin)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.YomanName)
                    .IsRequired()
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<TelemarketingClientDetails1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TelemarketingClientDetails1");

                entity.Property(e => e.AskToEnterDate).HasColumnType("datetime");

                entity.Property(e => e.Bakashot).HasColumnType("ntext");

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.BirthdayZug).HasColumnType("datetime");

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.Comments).HasColumnType("ntext");

                entity.Property(e => e.DateFirst).HasColumnType("datetime");

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.FamilyStatus).HasMaxLength(50);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.Gender)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.GenderZug)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.GoremMafne).HasMaxLength(50);

                entity.Property(e => e.HufnaToMid).HasColumnName("HufnaToMId");

                entity.Property(e => e.HufnaToMtxt).HasColumnName("HufnaToMTxt");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.IdcardZug).HasMaxLength(15);

                entity.Property(e => e.Kupa).HasMaxLength(30);

                entity.Property(e => e.KupaId).HasColumnName("KupaID");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.ModelApartment).HasMaxLength(200);

                entity.Property(e => e.MosadIshpuz).HasMaxLength(50);

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.NameViewZug).HasMaxLength(402);

                entity.Property(e => e.NameViewZug1).HasMaxLength(200);

                entity.Property(e => e.NameViewZug2).HasMaxLength(402);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.ResponsibleId).HasColumnName("ResponsibleID");

                entity.Property(e => e.ResponsibleNameView).HasMaxLength(200);

                entity.Property(e => e.Sponser).HasMaxLength(50);

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.Status).HasMaxLength(100);

                entity.Property(e => e.Street)
                    .HasMaxLength(100)
                    .HasColumnName("street");

                entity.Property(e => e.TifkudStatus).HasMaxLength(50);

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.UserCreateContactNameView).HasMaxLength(200);
            });

            modelBuilder.Entity<TelemarketingDoc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TelemarketingDocs");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.ContractName).HasMaxLength(50);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.SuggestId).HasColumnName("suggestID");

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("type");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.Username)
                    .HasMaxLength(50)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<TempBm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tempBm");

                entity.Property(e => e.KeyT)
                    .HasMaxLength(30)
                    .IsFixedLength(true);

                entity.Property(e => e.Name1).HasMaxLength(444);
            });

            modelBuilder.Entity<TempMedMbr1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tempMedMbr_1");

                entity.Property(e => e.Idkupa).HasColumnName("IDKupa");

                entity.Property(e => e.KodTrade)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Kupa)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ParitId).HasColumnName("ParitID");

                entity.Property(e => e.TradeName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TempMerge>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tempMerge");

                entity.Property(e => e.ContactmanCity).HasMaxLength(50);

                entity.Property(e => e.ContactmanName)
                    .IsRequired()
                    .HasMaxLength(101);

                entity.Property(e => e.ContactmanStreet).HasMaxLength(40);

                entity.Property(e => e.ContactmanZip).HasMaxLength(8);

                entity.Property(e => e.History)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Lt)
                    .HasColumnType("datetime")
                    .HasColumnName("LT");

                entity.Property(e => e.RoomName).HasMaxLength(30);
            });

            modelBuilder.Entity<TempParit>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tempParit");

                entity.Property(e => e.Desc1).HasMaxLength(255);

                entity.Property(e => e.F2).HasMaxLength(255);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kod1).HasColumnName("kod1");

                entity.Property(e => e.M1)
                    .HasMaxLength(255)
                    .HasColumnName("m1");

                entity.Property(e => e.Mi).HasColumnName("MI");

                entity.Property(e => e.Subject1).HasMaxLength(255);
            });

            modelBuilder.Entity<TmpIshpuzByAge>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tmpIshpuzByAge");

                entity.Property(e => e.Age1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("age1");

                entity.Property(e => e.ClientTnuotId).HasColumnName("clientTnuotID");

                entity.Property(e => e.Clientid).HasColumnName("clientid");

                entity.Property(e => e.Datee)
                    .HasColumnType("datetime")
                    .HasColumnName("datee");

                entity.Property(e => e.Dates)
                    .HasColumnType("datetime")
                    .HasColumnName("dates");

                entity.Property(e => e.IDays).HasColumnName("iDays");
            });

            modelBuilder.Entity<TorimRecommendDetail>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Kod1).HasMaxLength(50);

                entity.Property(e => e.Num1).HasDefaultValueSql("((0))");

                entity.Property(e => e.ParentId)
                    .HasColumnName("ParentID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SubjectId)
                    .HasColumnName("SubjectID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TorType).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Ttt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ttt");

                entity.Property(e => e.Id).HasColumnName("id");
            });

            modelBuilder.Entity<VTblclienttnuot>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_tblclienttnuot");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.AllowDoctorTnuah).HasMaxLength(50);

                entity.Property(e => e.ArrivedFrom).HasMaxLength(50);

                entity.Property(e => e.BMahlakaNotChanged).HasColumnName("bMahlakaNotChanged");

                entity.Property(e => e.ChangeKind).HasMaxLength(10);

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.Date2).HasColumnType("datetime");

                entity.Property(e => e.Details).HasMaxLength(255);

                entity.Property(e => e.DiurKindId).HasColumnName("DiurKindID");

                entity.Property(e => e.Hospital).HasMaxLength(25);

                entity.Property(e => e.HospitalMahlaka).HasMaxLength(25);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.LeaveKindId).HasColumnName("LeaveKindID");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.NConv).HasColumnName("nConv");

                entity.Property(e => e.Results).HasColumnType("ntext");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.SponserId).HasColumnName("SponserID");

                entity.Property(e => e.SponserIdold).HasColumnName("SponserIDOld");

                entity.Property(e => e.SponserService).HasMaxLength(50);

                entity.Property(e => e.TStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("tStamp");

                entity.Property(e => e.TifkudStatusId).HasColumnName("TifkudStatusID");

                entity.Property(e => e.Time1).HasMaxLength(5);

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");

                entity.Property(e => e.TnuahIdold).HasColumnName("TnuahIDOld");

                entity.Property(e => e.UserIdcreate).HasColumnName("UserIDCreate");
            });

            modelBuilder.Entity<VclientsTnuhot>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VClientsTnuhot");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.FName)
                    .HasMaxLength(30)
                    .HasColumnName("fName");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Lname)
                    .HasMaxLength(100)
                    .HasColumnName("lname");

                entity.Property(e => e.LocationId).HasColumnName("locationID");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.NameView).HasMaxLength(200);

                entity.Property(e => e.Tnuahid).HasColumnName("tnuahid");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<View1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VIEW1");

                entity.Property(e => e.DateCreate).HasColumnType("datetime");

                entity.Property(e => e.DocNameId).HasColumnName("DocNameID");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MahsanId).HasColumnName("MahsanID");
            });

            modelBuilder.Entity<View2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VIEW2");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.MDate)
                    .HasColumnType("datetime")
                    .HasColumnName("mDate");

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");
            });

            modelBuilder.Entity<View3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VIEW3");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");
            });

            modelBuilder.Entity<View4>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VIEW4");

                entity.Property(e => e.Caption1).HasMaxLength(100);

                entity.Property(e => e.Idcard)
                    .HasMaxLength(15)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Mahlaka).HasMaxLength(50);

                entity.Property(e => e.NameView).HasMaxLength(50);
            });

            modelBuilder.Entity<View5>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VIEW5");

                entity.Property(e => e.AgafId).HasColumnName("AgafID");

                entity.Property(e => e.ClientId).HasColumnName("ClientID");

                entity.Property(e => e.Date1).HasColumnType("datetime");

                entity.Property(e => e.MahlakaId).HasColumnName("MahlakaID");

                entity.Property(e => e.MahlakaIdold).HasColumnName("MahlakaIDOld");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.RoomIdold).HasColumnName("RoomIDOld");

                entity.Property(e => e.TnuahId).HasColumnName("TnuahID");
            });

            modelBuilder.Entity<Word>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("word");

                entity.Property(e => e.Active)
                    .HasMaxLength(255)
                    .HasColumnName("active");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.F6).HasMaxLength(255);

                entity.Property(e => e.Fname)
                    .HasMaxLength(255)
                    .HasColumnName("fname");

                entity.Property(e => e.HouseNum)
                    .HasMaxLength(255)
                    .HasColumnName("houseNum");

                entity.Property(e => e.IdCard).HasColumnName("idCard");

                entity.Property(e => e.Kupa).HasMaxLength(255);

                entity.Property(e => e.Lname)
                    .HasMaxLength(255)
                    .HasColumnName("lname");

                entity.Property(e => e.Mikud).HasColumnName("mikud");

                entity.Property(e => e.Street)
                    .HasMaxLength(255)
                    .HasColumnName("street");

                entity.Property(e => e.Temp1)
                    .HasMaxLength(255)
                    .HasColumnName("temp1");
            });

            modelBuilder.Entity<X4>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("x4");

                entity.Property(e => e.A1)
                    .IsRequired()
                    .HasColumnName("a1")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.A2)
                    .IsRequired()
                    .HasColumnName("a2")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.A3)
                    .IsRequired()
                    .HasColumnName("a3")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.A4)
                    .IsRequired()
                    .HasColumnName("a4")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.A5)
                    .IsRequired()
                    .HasColumnName("a5")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.A6)
                    .IsRequired()
                    .HasColumnName("a6")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.A7)
                    .IsRequired()
                    .HasColumnName("a7")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.A8)
                    .IsRequired()
                    .HasColumnName("a8")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Xml2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("xml_2017");

                entity.Property(e => e.F1).HasMaxLength(255);

                entity.Property(e => e.F10).HasMaxLength(255);

                entity.Property(e => e.F11).HasMaxLength(255);

                entity.Property(e => e.F12).HasMaxLength(255);

                entity.Property(e => e.F13).HasMaxLength(255);

                entity.Property(e => e.F14).HasMaxLength(255);

                entity.Property(e => e.F15).HasMaxLength(255);

                entity.Property(e => e.F16).HasMaxLength(255);

                entity.Property(e => e.F17).HasMaxLength(255);

                entity.Property(e => e.F18).HasMaxLength(255);

                entity.Property(e => e.F19).HasMaxLength(255);

                entity.Property(e => e.F2).HasMaxLength(255);

                entity.Property(e => e.F20).HasMaxLength(255);

                entity.Property(e => e.F21).HasColumnType("datetime");

                entity.Property(e => e.F22).HasColumnType("datetime");

                entity.Property(e => e.F23).HasMaxLength(255);

                entity.Property(e => e.F24).HasMaxLength(255);

                entity.Property(e => e.F25).HasMaxLength(255);

                entity.Property(e => e.F26).HasMaxLength(255);

                entity.Property(e => e.F27).HasMaxLength(255);

                entity.Property(e => e.F28).HasMaxLength(255);

                entity.Property(e => e.F29).HasMaxLength(255);

                entity.Property(e => e.F3).HasMaxLength(255);

                entity.Property(e => e.F30).HasMaxLength(255);

                entity.Property(e => e.F31).HasMaxLength(255);

                entity.Property(e => e.F32).HasMaxLength(255);

                entity.Property(e => e.F4).HasMaxLength(255);

                entity.Property(e => e.F5).HasColumnType("datetime");

                entity.Property(e => e.F6).HasMaxLength(255);

                entity.Property(e => e.F7).HasColumnType("datetime");

                entity.Property(e => e.F8).HasMaxLength(255);

                entity.Property(e => e.F9).HasMaxLength(255);
            });

            modelBuilder.Entity<XmlMax>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("xml_max");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.ארץלידה)
                    .HasMaxLength(255)
                    .HasColumnName("ארץ לידה ");

                entity.Property(e => e.התחלתהרדמה)
                    .HasColumnType("datetime")
                    .HasColumnName("התחלת הרדמה ");

                entity.Property(e => e.התחלתניתוח)
                    .HasColumnType("datetime")
                    .HasColumnName("התחלת ניתוח ");

                entity.Property(e => e.חדרניתוח).HasColumnName("חדר ניתוח");

                entity.Property(e => e.מין)
                    .HasMaxLength(255)
                    .HasColumnName("מין ");

                entity.Property(e => e.מסניתוח).HasColumnName("מס ניתוח");

                entity.Property(e => e.מסקבלה)
                    .HasMaxLength(255)
                    .HasColumnName("מס קבלה");

                entity.Property(e => e.סוגניתוח)
                    .HasMaxLength(255)
                    .HasColumnName("סוג ניתוח");

                entity.Property(e => e.סיוםהרדמה)
                    .HasColumnType("datetime")
                    .HasColumnName("סיום הרדמה");

                entity.Property(e => e.סיוםניתוח)
                    .HasColumnType("datetime")
                    .HasColumnName("סיום ניתוח");

                entity.Property(e => e.סןגהרדמה)
                    .HasMaxLength(255)
                    .HasColumnName("סןג הרדמה");

                entity.Property(e => e.צוותבניתוח)
                    .HasMaxLength(255)
                    .HasColumnName("צוות בניתוח");

                entity.Property(e => e.קודאבחנה)
                    .HasMaxLength(255)
                    .HasColumnName("קוד אבחנה");

                entity.Property(e => e.קודפעולה)
                    .HasMaxLength(255)
                    .HasColumnName("קוד פעולה ");

                entity.Property(e => e.קופתחולים)
                    .HasMaxLength(255)
                    .HasColumnName("קופת חולים");

                entity.Property(e => e.שםצוותבניתוח)
                    .HasMaxLength(255)
                    .HasColumnName("שם צוות בניתוח");

                entity.Property(e => e.שנתלידה).HasColumnName("שנת לידה ");

                entity.Property(e => e.תאוראבחנה)
                    .HasMaxLength(255)
                    .HasColumnName("תאור אבחנה");

                entity.Property(e => e.תאורפעולה)
                    .HasMaxLength(255)
                    .HasColumnName("תאור פעולה");

                entity.Property(e => e.תז)
                    .HasMaxLength(255)
                    .HasColumnName("ת#ז");

                entity.Property(e => e.תניתוח)
                    .HasColumnType("datetime")
                    .HasColumnName("ת#ניתוח ");

                entity.Property(e => e.תקבלה)
                    .HasColumnType("datetime")
                    .HasColumnName("ת#קבלה");

                entity.Property(e => e.תשחרור)
                    .HasColumnType("datetime")
                    .HasColumnName("ת#שחרור");
            });

            modelBuilder.Entity<XmlTnu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("xml_tnu");

                entity.Property(e => e.AdTaarich)
                    .HasColumnType("datetime")
                    .HasColumnName("AD_TAARICH");

                entity.Property(e => e.AsmahtaTxt)
                    .HasMaxLength(255)
                    .HasColumnName("ASMAHTA_TXT");

                entity.Property(e => e.CfAtarim)
                    .HasMaxLength(255)
                    .HasColumnName("CF_ATARIM");

                entity.Property(e => e.CfUser)
                    .HasMaxLength(255)
                    .HasColumnName("CF_USER");

                entity.Property(e => e.CodeKupa).HasColumnName("CODE_KUPA");

                entity.Property(e => e.Field1Txt)
                    .HasMaxLength(255)
                    .HasColumnName("FIELD_1_TXT");

                entity.Property(e => e.Field2Txt)
                    .HasMaxLength(255)
                    .HasColumnName("FIELD_2_TXT");

                entity.Property(e => e.ForSort).HasColumnName("FOR_SORT");

                entity.Property(e => e.ForSortTxt)
                    .HasMaxLength(255)
                    .HasColumnName("FOR_SORT_TXT");

                entity.Property(e => e.GoremMemamen).HasColumnName("GOREM_MEMAMEN");

                entity.Property(e => e.Head1Txt)
                    .HasMaxLength(255)
                    .HasColumnName("HEAD_1_TXT");

                entity.Property(e => e.Head2Txt)
                    .HasMaxLength(255)
                    .HasColumnName("HEAD_2_TXT");

                entity.Property(e => e.HeadDisp)
                    .HasMaxLength(255)
                    .HasColumnName("HEAD_DISP");

                entity.Property(e => e.KodMahlFrom).HasColumnName("KOD_MAHL_FROM");

                entity.Property(e => e.KodMahlTo).HasColumnName("KOD_MAHL_TO");

                entity.Property(e => e.KupaDisp)
                    .HasMaxLength(255)
                    .HasColumnName("KUPA_DISP");

                entity.Property(e => e.MahlFrom)
                    .HasMaxLength(255)
                    .HasColumnName("MAHL_FROM");

                entity.Property(e => e.MahlTo)
                    .HasMaxLength(255)
                    .HasColumnName("MAHL_TO");

                entity.Property(e => e.MahlakaNumFrom).HasColumnName("MAHLAKA_NUM_FROM");

                entity.Property(e => e.MeTaarich)
                    .HasColumnType("datetime")
                    .HasColumnName("ME_TAARICH");

                entity.Property(e => e.MeTaarichNew)
                    .HasColumnType("datetime")
                    .HasColumnName("ME_TAARICH_NEW");

                entity.Property(e => e.MisparIshpuzAa)
                    .HasMaxLength(255)
                    .HasColumnName("MISPAR_ISHPUZ_AA");

                entity.Property(e => e.MisparTik).HasColumnName("MISPAR_TIK");

                entity.Property(e => e.PMemDisp)
                    .HasMaxLength(255)
                    .HasColumnName("P_MEM_DISP");

                entity.Property(e => e.Shem)
                    .HasMaxLength(255)
                    .HasColumnName("SHEM");

                entity.Property(e => e.SumAllForSort).HasColumnName("SUM_ALL_FOR_SORT");

                entity.Property(e => e.TaarDisp)
                    .HasMaxLength(255)
                    .HasColumnName("TAAR_DISP");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Zihui)
                    .HasMaxLength(255)
                    .HasColumnName("ZIHUI");
            });

            modelBuilder.Entity<XmlTran>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("xml_trans");

                entity.Property(e => e.AdTaarich)
                    .HasColumnType("datetime")
                    .HasColumnName("AD_TAARICH");

                entity.Property(e => e.AsmahtaTxt)
                    .HasMaxLength(255)
                    .HasColumnName("ASMAHTA_TXT");

                entity.Property(e => e.CfAtarim)
                    .HasMaxLength(255)
                    .HasColumnName("CF_ATARIM");

                entity.Property(e => e.CfUser)
                    .HasMaxLength(255)
                    .HasColumnName("CF_USER");

                entity.Property(e => e.CodeKupa).HasColumnName("CODE_KUPA");

                entity.Property(e => e.Field1Txt)
                    .HasMaxLength(255)
                    .HasColumnName("FIELD_1_TXT");

                entity.Property(e => e.Field2Txt)
                    .HasMaxLength(255)
                    .HasColumnName("FIELD_2_TXT");

                entity.Property(e => e.ForSort).HasColumnName("FOR_SORT");

                entity.Property(e => e.ForSortTxt)
                    .HasMaxLength(255)
                    .HasColumnName("FOR_SORT_TXT");

                entity.Property(e => e.GoremMemamen).HasColumnName("GOREM_MEMAMEN");

                entity.Property(e => e.Head1Txt)
                    .HasMaxLength(255)
                    .HasColumnName("HEAD_1_TXT");

                entity.Property(e => e.Head2Txt)
                    .HasMaxLength(255)
                    .HasColumnName("HEAD_2_TXT");

                entity.Property(e => e.HeadDisp)
                    .HasMaxLength(255)
                    .HasColumnName("HEAD_DISP");

                entity.Property(e => e.KodMahlFrom).HasColumnName("KOD_MAHL_FROM");

                entity.Property(e => e.KodMahlTo).HasColumnName("KOD_MAHL_TO");

                entity.Property(e => e.KupaDisp)
                    .HasMaxLength(255)
                    .HasColumnName("KUPA_DISP");

                entity.Property(e => e.MahlFrom)
                    .HasMaxLength(255)
                    .HasColumnName("MAHL_FROM");

                entity.Property(e => e.MahlTo)
                    .HasMaxLength(255)
                    .HasColumnName("MAHL_TO");

                entity.Property(e => e.MahlakaNumFrom).HasColumnName("MAHLAKA_NUM_FROM");

                entity.Property(e => e.MeTaarich)
                    .HasColumnType("datetime")
                    .HasColumnName("ME_TAARICH");

                entity.Property(e => e.MeTaarichNew)
                    .HasColumnType("datetime")
                    .HasColumnName("ME_TAARICH_NEW");

                entity.Property(e => e.MisparIshpuzAa)
                    .HasMaxLength(255)
                    .HasColumnName("MISPAR_ISHPUZ_AA");

                entity.Property(e => e.MisparTik).HasColumnName("MISPAR_TIK");

                entity.Property(e => e.PMemDisp)
                    .HasMaxLength(255)
                    .HasColumnName("P_MEM_DISP");

                entity.Property(e => e.Shem)
                    .HasMaxLength(255)
                    .HasColumnName("SHEM");

                entity.Property(e => e.SumAllForSort).HasColumnName("SUM_ALL_FOR_SORT");

                entity.Property(e => e.TaarDisp)
                    .HasMaxLength(255)
                    .HasColumnName("TAAR_DISP");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Zihui)
                    .HasMaxLength(255)
                    .HasColumnName("ZIHUI");
            });

            modelBuilder.Entity<Yair>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("yair");

                entity.Property(e => e.Iid).HasColumnName("iid");

                entity.Property(e => e.Kod).HasMaxLength(30);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
        
    }
}
